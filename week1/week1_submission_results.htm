<!DOCTYPE html>
<html class="supports-svg" xmlns:fb="http://ogp.me/ns/fb#" itemtype="http://schema.org"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=IE7"><meta name="fragment" content="!"><meta name="robots" content="NOODP"><meta charset="utf-8"><meta property="og:title" content="Coursera"><meta property="og:type" content="website"><meta property="og:image" content="http://s3.amazonaws.com/coursera/media/Coursera_Computer_Narrow.png"><meta property="og:url" content="https://www.coursera.org/assignment/part_results?part_id=18"><meta property="og:site_name" content="Coursera"><meta property="og:locale" content="en_US"><meta property="og:description" content="Take free online classes from 80+ top universities and organizations. Coursera is a social entrepreneurship company partnering with Stanford University, Yale University, Princeton University and others around the world to offer courses online for anyone to take, for free. We believe in connecting people to a great education so that anyone around the world can learn without limits."><meta property="fb:admins" content="727836538,4807654"><meta property="fb:app_id" content="274998519252278"><meta name="twitter:site" content="Coursera"><meta name="twitter:app:name:iphone" content="Coursera"><meta name="twitter:app:name:ipad" content="Coursera"><meta name="twitter:app:name:googleplay" content="Coursera"><meta name="twitter:app:id:iphone" content="id736535961"><meta name="twitter:app:id:ipad" content="id736535961"><meta name="twitter:app:id:googleplay" content="org.coursera.android"><meta name="description" content="Take free online classes from 80+ top universities and organizations. Coursera is a social entrepreneurship company partnering with Stanford University, Yale University, Princeton University and others around the world to offer courses online for anyone to take, for free. We believe in connecting people to a great education so that anyone around the world can learn without limits."><meta name="image" content="http://s3.amazonaws.com/coursera/media/Coursera_Computer_Narrow.png"><meta name="apple-itunes-app" content="app-id=736535961"><title>Coursera</title>    <link href="week1_submission_results_files/spark.css" rel="stylesheet" type="text/css">
      <link href="week1_submission_results_files/course.css" rel="stylesheet" type="text/css">
    <link href="https://spark-public.s3.amazonaws.com/algs4partII/static/images/favicon.ico" rel="icon">
<script src="week1_submission_results_files/ga.js" async="" type="text/javascript"></script><script src="week1_submission_results_files/routes.js" data-requiremodule="pages/spark/routes" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><meta content="summary" name="twitter:card"><meta content="Coursera" name="twitter:title"><meta content="Take free online classes from 80+ top universities and organizations. Coursera is a social entrepreneurship company partnering with Stanford University, Yale University, Princeton University and others around the world to offer courses online for anyone to take, for free. We believe in connecting people to a great education so that anyone around the world can learn without limits." name="twitter:description"><meta content="http://s3.amazonaws.com/coursera/media/Coursera_Computer_Narrow.png" name="twitter:image:src"><script src="week1_submission_results_files/204.js" data-requiremodule="js/lib/204" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/400.js" data-requiremodule="js/lib/400" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/student-page_002.js" data-requiremodule="pages/spark/views/template/student-page" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/student-page.js" data-requiremodule="pages/spark/views/template/student-page.html" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/sparkSurveyQuestionsSessionModel.js" data-requiremodule="bundles/assess/assessmentTypes/sparkSurveyQuestions/sparkSurveyQuestionsSessionModel" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/sessionModel.js" data-requiremodule="bundles/assess/assessmentTypes/quickQuestions/sessionModel" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/student-page_003.js" data-requiremodule="pages/spark/views/template/nls/student-page" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/SessionModel.js" data-requiremodule="bundles/assess/assessmentTypes/SessionModel" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/QuestionCollection.js" data-requiremodule="bundles/assess/framework/QuestionCollection" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/QuestionModel.js" data-requiremodule="bundles/assess/framework/QuestionModel" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/backbone.js" data-requiremodule="bundles/assess/lib/backbone.hascollections" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/underscore.js" data-requiremodule="js/lib/underscore.extend" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/header.js" data-requiremodule="pages/spark/views/template/header" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/sidebar.js" data-requiremodule="pages/spark/views/template/sidebar" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/readme.js" data-requiremodule="js/lib/readme" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/header_002.js" data-requiremodule="pages/spark/views/template/header.html" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/LearnerStoriesCollection.js" data-requiremodule="pages/analytics/models/LearnerStoriesCollection" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/assessApi.js" data-requiremodule="pages/spark-survey/assessApi" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/sidebar_003.js" data-requiremodule="pages/spark/views/template/sidebar.html" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/signature_track.js" data-requiremodule="spark/app/signature/js/signature_track" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/header_003.js" data-requiremodule="pages/spark/views/template/nls/header" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/sidebar_002.js" data-requiremodule="pages/spark/views/template/nls/sidebar" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/LearnerStoryModel.js" data-requiremodule="pages/analytics/models/LearnerStoryModel" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/signatureTrackLastChanceModal.js" data-requiremodule="spark/app/signature/js/signatureTrackLastChanceModal.html" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/flexjoinLastChanceModal.js" data-requiremodule="spark/app/signature/js/flexjoinLastChanceModal.html" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/util.js" data-requiremodule="js/lib/util" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script><script src="week1_submission_results_files/path.js" data-requiremodule="js/lib/path" data-requirecontext="_" async="" charset="utf-8" type="text/javascript"></script></head><body><div id="fb-root"></div><div id="spark-help" class="hide"></div><a href="https://learner.coursera.help/hc/requests/new" target="_blank"><div style="z-index: 1" data-networkprioritysupportwidget="" role="button" class="helpwidget-tab hide">Premium Support</div></a><!-- - track IE8 and less browser for eventing purposes--><!--[if lte IE 8]><script>window._204 = window._204 || [];
window._gaq = window._gaq || [];
window._gaq.push(
    ['_setAccount', 'UA-28377374-1'],
    ['_setDomainName', window.location.hostname],
    ['_setAllowLinker', true],
    ['_trackPageview', window.location.pathname]);
window._204.push(
  ['client', 'home'],
  {key:"pageview", value:window.location.pathname});</script><script src="https://dw0ugk4msqulk.cloudfront.net/c125b14c9a359e3a92f0e2077eacc19f5d689515/js/lib/204.js"></script><script src="https://ssl.google-analytics.com/ga.js"></script><![endif]--><div id="fb-root"></div><div id="origami" data-js="origami"><div><div><div class="coursera-page"><div class="coursera-header" role="menubar"><div class="hidden">This page features MathJax technology to render mathematical formulae.
If you are using a screen reader, please visit <a href="http://www.dessci.com/en/products/mathplayer/">MathPlayer</a> to download the plugin for your browser. Please note that this is an Internet Explorer-only plugin at this time.</div><h1 class="hidden">Algorithms, Part II</h1><!-- UNTIL dashboard announcement expires 2014-12-01 (then delete this code)--><div class="helpcenter-announcement"><div style="visibility: visible; display: none;" class="readme" data-readme="helpcenter-announcement" data-readme-show-count="1" data-readme-show-until-closed="data-readme-show-until-closed" data-readme-expires="Mar 31, 2015"><div>Need technical help? Visit our new&nbsp;<a href="https://learner.coursera.help/" data-readme-close="data-readme-close">Learner Help Center!</a></div><div data-readme-close="data-readme-close" class="readme-close-icon"><span class="icon-remove"></span></div></div></div><div role="banner" class="course-topbar container-fluid"><div class="row-fluid"><div class="span3"><a href="https://www.coursera.org/" data-if-linkable="add-referrer" class="course-topbar-logo"></a></div><div style="float:right;" class="course-topbar-nav-container span9"><h2 class="hidden">Top Navigation Bar</h2><ul class="course-topbar-nav-list"><li class="course-topbar-nav-list-item"><a href="https://www.coursera.org/courses" data-if-linkable="add-referrer">Courses</a></li><li tabindex="0" role="button" aria-haspopup="true" aria-expanded="false" aria-owns="course-topbar-my" data-popup="#course-topbar-my" data-popup-bind-open="mouseenter" data-popup-close="data-popup-close" style="cursor:pointer;" data-popup-direction="se" class="course-topbar-nav-list-item"><a data-user-id="9266579">Karpov Artem<i class="icon-caret-down"></i></a></li></ul></div></div><div id="course-topbar-aboutus" class="course-topbar-sublist"><a href="https://www.coursera.org//about/" target="_new" data-if-linkable="add-referrer" class="internal-about course-topbar-sublist-item">About Us</a><a href="https://www.coursera.org//about/careers" target="_new" data-if-linkable="add-referrer" class="internal-about course-topbar-sublist-item">Careers</a><a href="https://www.coursera.org//about/people" target="_new" data-if-linkable="add-referrer" class="internal-about course-topbar-sublist-item">People</a><a href="https://www.coursera.org//about/contact" target="_new" data-if-linkable="add-referrer" class="internal-about course-topbar-sublist-item">Contact Us</a></div><div id="course-topbar-my" class="course-topbar-sublist"><a data-popup-close="data-popup-close" href="https://www.coursera.org/" target="_new" class="course-topbar-sublist-item">My Courses</a><a data-popup-close="data-popup-close" href="https://www.coursera.org/account/profile" target="_new" class="course-topbar-sublist-item">Profile</a><a data-popup-close="data-popup-close" href="https://www.coursera.org/account/accomplishments" target="_new" class="course-topbar-sublist-item">Course Records</a><a href="https://www.coursera.org/account/settings" target="_new" class="course-topbar-sublist-item">Settings</a><a href="https://class.coursera.org/algs4partII-007/class/preferences" class="course-topbar-sublist-item">Course Preferences</a><form action="/api/logoutSsr/v1?csrf3-token=1462615253.UX6i7ZNLIuWCbVE7" method="post"><button data-popup-close="data-popup-close" type="submit" class="course-topbar-sublist-item">Sign Out</button></form></div></div><div class="course-topbanner-wrapper"><div class="course-topbanner"><div class="course-topbanner-university-logo"><a href="https://www.coursera.org/princeton" target="_blank" data-if-linkable="add-referrer" title="https://www.coursera.org/princeton" class="coursera-university-color"><img src="week1_submission_results_files/university_logo.png" alt="princeton"></a></div><h1 class="course-topbanner-header"><a href="https://class.coursera.org/algs4partII-007/" data-if-linkable="modal-lock" class="course-topbanner-name coursera-university-color">Algorithms, Part II</a><br><span style="" class="course-topbanner-instructor">by Kevin Wayne, Robert Sedgewick</span></h1></div></div></div><div style="position:relative;" class="container-fluid"><div class="row-fluid"><div id="course-page-sidebar" role="navigation"><div class="coursera-sidebar" role="menubar"><div id="course-page-sidebar" role="navigation"><div class="course-navbar-container"><a href="https://class.coursera.org/algs4partII-007" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_index"><img src="week1_submission_results_files/logo.png" style="width: 205px;height: 116px;margin: -15px 0px 8px 1px; box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.05);" alt="Course Home Page"></a><div data-coursera-course-search-nav-widget="data-coursera-course-search-nav-widget" class="input-append course-search-nav-box"><form method="get" action="/algs4partII-007/class/search" data-js-search-form="data-js-search-form" class="form-inline minimized-search"><label for="course-search-nav-input" class="accessible-text-for-reader">Search this course</label><input id="course-search-nav-input" name="q" data-js-search-input="data-js-search-input" type="text">&nbsp;<button type="submit" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="search" class="btn icon-search"><span class="accessible-text-for-reader">Search</span></button></form></div><h2 class="hidden">Side Navigation Bar</h2><ul class="course-navbar-list"><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/class/index" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Home" class="coursera-university-color"><span>Home </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/wiki/view?page=syllabus" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Syllabus" class="coursera-university-color"><span>Syllabus </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/wiki/view?page=schedule" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Schedule" class="coursera-university-color"><span>Schedule </span><span></span></a></li><li class="course-navbar-item"></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/lecture/index" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Lectures" class="coursera-university-color"><span>Lectures </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/quiz/index" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Exercises" class="coursera-university-color"><span>Exercises </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/assignment/index" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Programming_Assignments" class="coursera-university-color"><span>Programming Assignments </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/quiz/index?quiz_type=homework" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Job_Interview_Questions" class="coursera-university-color"><span>Job Interview Questions </span><span></span></a></li><li class="course-navbar-item"></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/forum/index" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Discussion_Forums" class="coursera-university-color"><span>Discussion Forums </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/wiki/ScheduleGoogleHangouts" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Google+_Hangouts" class="coursera-university-color"><span>Google+ Hangouts </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/wiki/view?page=errata" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Errata" class="coursera-university-color"><span>Errata </span><span></span></a></li><li class="course-navbar-item"><a href="https://class.coursera.org/algs4partII-007/quiz/index?quiz_type=survey" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Surveys" class="coursera-university-color"><span>Surveys </span><span></span></a></li><li class="course-navbar-item"></li><li class="course-navbar-item"><a href="http://algs4.cs.princeton.edu/" target="_blank" data-if-linkable="modal-lock,gray,lock-icon" data-ab-user-convert-for="honorcode_to_welcome2" data-ab-user-convert="navclick_Booksite" class="coursera-university-color"><span>Booksite </span><span class="icon-share"></span><span class="accessible-text-for-reader">opens in new browser tab</span></a></li></ul><ul style="list-style-type:none;margin-left: 10px;"><li><a href="https://accounts.coursera.org/i/zendesk/courserahelp?return_to=https://learner.coursera.help/hc/" target="_blank" title="Open help articles in new window" class="coursera-university-color"><i class="icon-question-sign"></i>Help Center</a></li></ul><ul style="list-style-type:none;margin-left: 10px;"></ul></div></div></div></div><div id="course-page-content" role="main"><div style="display: block;" id="spark" class="hide"><h2 class="course-page-header">Programming Assignment 1: WordNet | wordnet.zip
  <a class="coursera-reporter-link" title="Click here if you're experiencing technical problems or found errors in the course materials." target="_blank" href="https://accounts.coursera.org/i/zendesk/courserahelp?return_to=https://learner.coursera.help/hc/articles/201212249-Programming-Assignments">
     Help Center
  </a>
</h2>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sun-01-May 02:25:05</td></tr>
        <tr><td>Raw Score</td><td>82.90 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#990000">FAILED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#199900">30/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#459900">11/16 tests passed</font>

Aggregate score: <font color="#1F9900">82.90%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 32K
-rw-r--r-- 1 1.3K May  1 09:24 Outcast.java
-rw-r--r-- 1 4.4K May  1 09:24 SAP.java
-rw-r--r-- 1  11K May  1 09:24 WordNet.java
-rw-r--r-- 1 4.4K May  1 09:24 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------
WordNet.java:72:20: 'for' is not followed by whitespace.
WordNet.java:73:21: An empty statement might indicate a superfluous semicolon.
WordNet.java:273: Line is longer than 128 characters (currently 178).
Checkstyle ends with 3 errors.

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; passed

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
==&gt; passed


Total: 19/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student sap() is too far to be a valid common ancestor when testing pair 5 of 1000
     -  nounA = Citlaltepetl
     -  nounB = spotted_hemlock
     -  student   sap() = 'object'
     -  reference sap() = 'object physical_object'
     -  student   distance() = 11
     -  reference distance() to 'object physical_object' = 11
     -  actual distance to 'object' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
     -  student returns invalid synset on pair 13 of 1000
     -  nounA = coagulation_factor
     -  nounB = coagulation_factor
     -  student   distance() = 0
     -  reference distance() = 0
     -  student   sap() = 'coagulation_factor'
     -  reference sap() = 'coagulation_factor clotting_factor'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = Japan_wax
     -  nounB = protein
     -  student   distance() = 4
     -  reference distance() = 4
     -  student   sap() = 'macromolecule'
     -  reference sap() = 'macromolecule supermolecule'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student returns invalid synset on pair 3 of 1000
     -  nounA = unit_cell
     -  nounB = hydrazo_radical
     -  student   distance() = 3
     -  reference distance() = 3
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
  *  synsets3.txt, hypernyms3InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
  *  synsets6.txt, hypernyms6InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
==&gt; passed

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 7 of 100
     -  nounA = persistency
     -  nounB = raid
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 13
     -  reference distance() to 'abstraction abstract_entity' = 13
     -  actual distance to 'abstraction' = -1
     -  failed on call 7 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 17 of 100
     -  nounA = sham
     -  nounB = West_Berliner
     -  student   sap() = 'person'
     -  reference sap() = 'person individual someone somebody mortal soul'
     -  student   distance() = 9
     -  reference distance() to 'person individual someone somebody mortal soul' = 9
     -  actual distance to 'person' = -1
     -  failed on call 17 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
     -  student sap() is too far to be a valid common ancestor when testing pair 2 of 100
     -  nounA = state_of_war
     -  nounB = belittling
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 9
     -  reference distance() to 'abstraction abstract_entity' = 9
     -  actual distance to 'abstraction' = -1
     -  failed on call 2 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 11/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
     -  student   memory = 4204568 bytes
     -  reference memory = 6071480 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
     -  student   memory = 9505960 bytes
     -  reference memory = 14089584 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.05 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  759702.67
     -  student   solution calls per second:    4022.00
     -  reference / student ratio:               188.89

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  220214.00
     -  student   solution calls per second:    3902.00
     -  reference / student ratio:                56.44

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student constructor time =  0.75 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  165268.20
     -  student   solution calls per second:     162.40
     -  reference / student ratio:              1017.66

=&gt; passed    student &lt;= 10000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=  1000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=   100x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=    10x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=     5x reference

Test 4: timing isNoun() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  572637.00
     -  student   solution calls per second:  735949.00
     -  reference / student ratio:                 0.78
     -  allowed ratio:                             2.00
==&gt; passed

Total: 3/8 tests passed!

================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.08 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sun-01-May 02:05:39</td></tr>
        <tr><td>Raw Score</td><td>76.36 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#990000">FAILED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#1F9900">29/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#2F9900">76.36%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 32K
-rw-r--r-- 1 1.3K May  1 09:05 Outcast.java
-rw-r--r-- 1 4.4K May  1 09:05 SAP.java
-rw-r--r-- 1  11K May  1 09:05 WordNet.java
-rw-r--r-- 1 4.3K May  1 09:05 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------
WordNet.java:269: Line is longer than 128 characters (currently 178).
Checkstyle ends with 1 errors.

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; passed

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
==&gt; passed


Total: 19/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Alces_alces', 'punch_pliers')
 (DEBUG) sap(), a == 81004
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 1000
     -  nounA = Alces_alces
     -  nounB = punch_pliers
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 18
     -  reference distance() to 'whole unit' = 18
     -  actual distance to 'whole' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
 (DEBUG) sap('ricin', 'Ig')
 (DEBUG) sap(), a == 76
 (DEBUG) sap('histone', 'antihemophilic_factor')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('horror', 'stinker')
 (DEBUG) sap(), a == 83
 (DEBUG) sap('serum_albumin', 'immunoglobulin_M')
 (DEBUG) sap(), a == 76
 (DEBUG) sap('immune_gamma_globulin', 'globulin')
 (DEBUG) sap(), a == 26
 (DEBUG) sap('Christmas_factor', 'IgD')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('Ig', 'chondrin')
 (DEBUG) sap(), a == 76
 (DEBUG) sap('iodoprotein', 'fibrin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('physical_entity', 'plasma_protein')
 (DEBUG) sap(), a == 52
 (DEBUG) sap('jimhickey', 'gelatin')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('myosin', 'factor_V')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('coagulation_factor', 'lactalbumin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('fibrinase', 'albumin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('immunoglobulin_E', 'gelatine')
 (DEBUG) sap(), a == 76
 (DEBUG) sap('rennin', 'lactalbumin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('phosphoprotein', 'elastin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('siderophilin', 'whacker')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('immunoglobulin_E', 'stable_factor')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('fibrin', 'proconvertin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('simple_protein', 'transferase')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('casein', 'Christmas_factor')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('Hageman_factor', 'reductase')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('variable', 'entity')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('serum_albumin', 'gamma_globulin')
 (DEBUG) sap(), a == 76
 (DEBUG) sap('C-reactive_protein', 'tetanus_immune_globulin')
 (DEBUG) sap(), a == 26
 (DEBUG) sap('siderophilin', 'antihemophilic_globulin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('glutamic_oxalacetic_transaminase', 'prothrombin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('whacker', 'proteome')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('antihaemophilic_factor', 'immunoglobulin_D')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('tetanus_immunoglobulin', 'factor_VII')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('factor_IX', 'filaggrin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('IgD', 'casein')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('ribonuclease', 'haptoglobin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('nerve_growth_factor', 'C-reactive_protein')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('stinker', 'factor_IV')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('accelerator_factor', 'prothrombinase')
 (DEBUG) sap(), a == 11
     -  student returns invalid synset on pair 36 of 1000
     -  nounA = accelerator_factor
     -  nounB = prothrombinase
     -  student   distance() = 2
     -  reference distance() = 2
     -  student   sap() = 'coagulation_factor'
     -  reference sap() = 'coagulation_factor clotting_factor'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
 (DEBUG) sap('ethanoyl_group', 'cyclooxygenase')
 (DEBUG) sap(), a == 478
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = ethanoyl_group
     -  nounB = cyclooxygenase
     -  student   distance() = 8
     -  reference distance() = 8
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
 (DEBUG) sap('jawbone', 'dextroglucose')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('vascular_system', 'crackerjack')
 (DEBUG) sap(), a == 275
 (DEBUG) sap('lymphokine', 'trabecula')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('wisdom_tooth', 'furcula')
 (DEBUG) sap(), a == 105
     -  student returns invalid synset on pair 4 of 1000
     -  nounA = wisdom_tooth
     -  nounB = furcula
     -  student   distance() = 4
     -  reference distance() = 4
     -  student   sap() = 'bone'
     -  reference sap() = 'bone os'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets3.txt, hypernyms3InvalidCycle.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle+Path.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:140)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:140)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:140)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:140)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Canada_anemone', 'pothunter')
 (DEBUG) sap(), a == 58166
     -  student sap() is too far to be a valid common ancestor when testing pair 2 of 100
     -  nounA = Canada_anemone
     -  nounB = pothunter
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 10
     -  reference distance() to 'organism being' = 10
     -  actual distance to 'organism' = -1
     -  failed on call 2 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('ephemera', 'Tobagonian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Iles_Marquises', 'purplish_red')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Monardella', 'soundbox')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lagothrix', 'bellicoseness')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 12 of 100
     -  nounA = Lagothrix
     -  nounB = bellicoseness
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 13
     -  reference distance() to 'abstraction abstract_entity' = 13
     -  actual distance to 'abstraction' = -1
     -  failed on call 12 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Mujahedeen_Kompak', 'Ulvophyceae')
 (DEBUG) sap(), a == 44437
     -  student returns invalid synset on pair 1 of 100
     -  nounA = Mujahedeen_Kompak
     -  nounB = Ulvophyceae
     -  student   distance() = 9
     -  reference distance() = 9
     -  student   sap() = 'group'
     -  reference sap() = 'group grouping'
     -  failed on call 1 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 5000
 (DEBUG) words.size() == 7992
 (DEBUG) digraph.V() == 5000
 (DEBUG) digraph.E() == 5059
 (DEBUG) WordNet constructed
     -  student   memory = 4204568 bytes
     -  reference memory = 6071480 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 10000
 (DEBUG) words.size() == 19600
 (DEBUG) digraph.V() == 10000
 (DEBUG) digraph.E() == 10087
 (DEBUG) WordNet constructed
     -  student   memory = 9505960 bytes
     -  reference memory = 14089584 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.04 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  602510.67
     -  student   solution calls per second:    3384.00
     -  reference / student ratio:               178.05

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  154218.00
     -  student   solution calls per second:    3726.00
     -  reference / student ratio:                41.39

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
     -  student constructor time =  0.74 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('bit', 'byte')
 (DEBUG) sap(), a == 78703
 (DEBUG) sap('apple', 'orange')
 (DEBUG) sap(), a == 37179
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
 (DEBUG) sap('Hymenanthera', 'escalator')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ben', 'Trandate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Robert_Woodward', 'Fagus_pendula')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Lycaena', 'kangaroo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plate_iron', 'cutler')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('anti-virus_program', 'star_divination')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('South_Yorkshire', 'Frank_Whittle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('disseminator', 'zombie_spirit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lysichitum', 'German_Luftwaffe')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('external_nasal_vein', 'white_feather')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('puking', 'loan-blend')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rating', 'hydrostatics')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('chemical_diabetes', 'borsh')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ethanoyl_group', 'South_China_Sea')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('dark_horse', 'bight')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sarraceniaceae', 'arraignment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Asamiya', 'bailiffship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sacred_scripture', 'kinfolk')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Jerry', 'Vespula_maculifrons')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('dead-man's_float', 'Glossopsitta_versicolor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hyper-eutectoid_steel', 'family_Alopiidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('parqueterie', 'DPhil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('false_gavial', 'Ptilonorhynchidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nook', 'Vietnam')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('ELF', 'House_of_Lords')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('natural', 'Rota')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('greenish_yellow', 'Jansenism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shrimp_butter', 'perfective')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subdivision_Deuteromycota', 'Yucca_smalliana')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nenets', 'Luschka's_tonsil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Parus_caeruleus', 'Euclidean_geometry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ogre', 'Sedalia')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('marsh_hawk', 'US_Fish_and_Wildlife_Service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('acrylate', 'half_sister')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Northman', 'class_Pinopsida')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pantaloon', 'high_hat')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Onondaga', 'Plesiosauria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cousin', 'solar_power')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Jenghiz_Khan', 'fluff')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('psychoanalytic_process', 'leak')
 (DEBUG) sap(), a == 63065
 (DEBUG) sap('price_level', 'sorb_apple')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('haemogenesis', 'Gorilla_gorilla_gorilla')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('paleocerebellum', 'dotard')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('carboy', 'putsch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coronary_sinus', 'rocket_propellent')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('owlet_moth', 'estrogen')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sesquipedalian', 'brahman')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('balata', 'leading_tone')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hydra', 'alcohol_radical')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('thyroid-stimulating_hormone', 'extracurricular_activity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Pliocene', 'triple')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('testicular_vein', 'conformism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('humour', 'enamoredness')
 (DEBUG) sap(), a == 39578
 (DEBUG) sap('EbS', 'internal_ear')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nicker_nut', 'venous_blood_system')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sitcom', 'field_lupine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ryegrass', 'American_lime')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('trachodont', 'chain_gang')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Minos', 'automaton')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('welfare_case', 'negotiable_instrument')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Loxia', 'granny's_bonnets')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Volvariella_bombycina', 'alkalosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Egyptian_Islamic_Jihad', 'overproduction')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('onward_motion', 'ubiquitousness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Sun_Myung_Moon', 'genus_Actinomeris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('soldier_of_fortune', 'Mogen_David')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Baal_Merodach', 'reapportionment')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('seasonal', 'falafel')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Dead_Sea_scrolls', 'swipe')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('spear_carrier', 'equivocation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hotelman', 'Charles_Evans_Hughes')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('aldehyde-alcohol', 'Lycopersicon_esculentum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('St._John_Chrysostom', 'Henry_of_Navarre')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Bartramian_sandpiper', 'queen_mole_rat')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('River_Cam', 'indefinite_quantity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lamplight', 'rescuer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cold_shoulder', 'yarn')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('downer', 'leeward_tide')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('literate_person', 'African_walnut')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('young_person', 'astronomer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('misconstruction', 'liver-spotted_dalmatian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypotension', 'flavone')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('good_luck_charm', 'fibre_bundle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('star_jasmine', 'woodsiness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mountain_male_fern', 'Veronica_agrestis')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Nycticebus_pygmaeus', 'antler')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gymnasium', 'Vladimir_Vladimirovich_Mayakovski')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Wrangell-St._Elias_National_Park', 'capital_of_North_Korea')
 (DEBUG) sap(), a == 43104
 (DEBUG) sap('highland', 'foulard')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('split-brain_technique', 'bumf')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Palaemon', 'haven')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Merluccius', 'Cypripedium')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('obturator', 'typist')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('nervus_coccygeus', 'trichopterous_insect')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hudson_seal', 'internuncio')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('camphor', 'surgical_knife')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('seneschal', 'Paul_VI')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('piperocaine_hydrochloride', 'Gogh')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Conn's_syndrome', 'corneum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wormcast', 'titlark')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('solitary_vireo', 'draft_beer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('order_Cuculiformes', 'spiked_loosestrife')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('water_blister', 'Citta_del_Vaticano')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('corn_gluten_feed', 'Mankato')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tanga', 'California_sagebrush')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('bag', 'railyard')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Spirochaetales', 'hoof-mark')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('agricultural_labourer', 'running_blackberry')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Emydidae', 'Rose_of_China')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kalantas', 'Sir_Alexander_Fleming')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('wych_elm', 'ground_cedar')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('panatela', 'sweet_potato_vine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('seborrheic_dermatitis', 'Sitsang')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('strudel', 'Malagasy_Republic')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chairlift', 'golden_calf')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('assignation', 'Marcus_Aurelius_Antoninus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gentiana_villosa', 'Ajax')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jean_de_La_Fontaine', 'mesquite')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Wasserman_reaction', 'unproductiveness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('occipital_vein', 'nonparticulate_radiation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Ukrainian', 'pica-pica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('merchant_vessels', 'calcium_sulfate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('boat-billed_heron', 'nodding_wild_onion')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('mythologisation', 'Streptococcus_anhemolyticus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Psyche', 'Robert_Koch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tectaria_cicutaria', 'topolatry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('weight', 'stock_option')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sweetener', 'lowboy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('North_Germanic', 'ball_club')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('adumbration', 'genus_Circus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('banzai', 'buttercup')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eligibility', 'Cannabis_indica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cheeseflower', 'Bacchus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Zantedeschia', 'Tulipa_gesneriana')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('perfection', 'intestacy')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('energy_state', 'Pluvianus_aegyptius')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('clarence', 'heart-lung_machine')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('Yellowknife', 'lambda_particle')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('inclementness', 'threshold_gate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Osmunda_regalis', 'Alfred_Alistair_Cooke')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('governed', 'Berit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('putamen', 'jalopy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curing', 'salp')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('blank_space', 'Annie_Oakley')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('uranium', 'Ursus_middendorffi')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pitsaw', 'legibility')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('oyster_dressing', 'optical_fusion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('brittle-star', 'capital_account')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Chrysopsis', 'Digitalis_lutea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('edutainment', 'family_Vireonidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chaffinch', 'peace_march')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Aulostomidae', 'Gliridae')
 (DEBUG) sap(), a == 39294
 (DEBUG) sap('ethical_code', 'jacamar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cuirass', 'Luis_de_Gongora_y_Argote')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('reassignment', 'plains_pocket_gopher')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('robot_bomb', 'morality_play')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('endosperm', 'furry_tongue')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lister', 'bio-assay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tomato_worm', 'high_style')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Meleagris', 'halftone_engraving')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tetri', 'meridian')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('corn_spurrey', 'Nova_Scotia')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('water_chickweed', 'princewood')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('hooray', 'Indian_relish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('polyvalence', 'Accho')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('break_seal', 'Centaurea_gymnocarpa')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('enema', 'talking_point')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Eschrichtius_gibbosus', 'rope-maker')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Calocedrus', 'acyl_halide')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('yatobyo', 'North_Pacific')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Homarus_vulgaris', 'daddy')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('iron_collar', 'scission')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Limulus', 'leaf-nosed_snake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('beefsteak_fungus', 'fuel_consumption_rate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('holy_place', 'metrical_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cicero', 'coconut_cake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('acting', 'glandular_carcinoma')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('demagogy', 'genus_Gymnosporangium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('poplin', 'American_Revolutionary_leader')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('porno', 'yes-no_question')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dossel', 'borax')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Topeka', 'cervical_artery')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('leg_curl', 'family_Pulicidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ixodes_spinipalpis', 'stash_house')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('last_quarter', 'good_old_days')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('New_York_State', 'sewage')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('trend_line', 'crossroad')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('marchland', 'curvature')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('infantile_amaurotic_idiocy', 'Polyergus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Globigerina', 'shore_bird')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nicety', 'South_Pole')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Port_Louis', 'muscle_cell')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('tailgater', 'clinid_fish')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('nonbeliever', 'guacamole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('preventative', 'Elymus_arenarius')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('coward', 'folk_tale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Cleridae', 'Lasthenia_chrysostoma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('two-spotted_ladybug', 'Terebella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Geglossaceae', 'DDC')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('honey_crisp', 'nephoscope')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fad', 'Urginea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('St._Benedict', 'Kleenex')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Calycanthus_floridus', 'kangaroo-foot_plant')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('cognitive_operation', 'pounding')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('schmuck', 'underestimation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wrong', 'transom_window')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('harbour', 'Harold_Pinter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Citrus', 'literary_critic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('amorist', 'major_surgery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('peanut_oil', 'flashing')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('endodontics', 'Bernini')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mine', 'lagophthalmos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basement', 'sewage_system')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('competency', 'sayonara')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('all-rounder', 'Cimarron')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('measurability', 'Philadelphus_coronarius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('citizenry', 'receptivity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('capital_of_Somalia', 'serranid_fish')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('gumbo-limbo', 'bait')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('echolocation', 'Tarsiidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crepe_flower', 's')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('auction', 'skunk_bear')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('division_Eumycota', 'tribal_society')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Gibit', 'Laertes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('quackery', 'days')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('squall_line', 'convex_polyhedron')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('beach_plum', 'Publius_Cornelius_Tacitus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Chamaea', 'Tamil_Eelam')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('common_person', 'Chios')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('honour', 'able-bodiedism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('American_plan', 'Abronia_umbellata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sunbather', 'Mansi')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('grouse', 'buntal')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Deutschmark', 'Roman_Republic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('periscope', 'Timur')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('USA', 'nickel_note')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Negro', 'redheaded_woodpecker')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('bog_whortleberry', 'Gemonil')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('posterior_cerebral_artery', 'identification')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flunk', 'cortege')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('City_of_Bridges', 'vesicant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sour_gum', 'ninepin_ball')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pneumatic_caisson', 'suburb')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('vigil', 'probiotic_microflora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basketball_backboard', 'state_of_the_art')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Luchino_Visconti', 'action_at_law')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hairiness', 'mutineer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leary', 'broad-leaved_dock')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Yibit', 'perspicaciousness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mea_culpa', 'reticular_formation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('repartee', 'letting_down')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('King_James_Version', 'Petromyzon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('reversible', 'smirker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hatemonger', 'authorship')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scammony', 'minesweeper')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('vice-presidency', 'Thirty_Years'_War')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Susian', 'Eacles_imperialis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('limber', 'Robert_Penn_Warren')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('plant_bug', 'sea_mew')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('Theobroma_cacao', 'Indian_mongoose')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Mark_Antony', 'good-bye')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('malope', 'genus_Calocedrus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Acanthocereus_tetragonus', 'Myricaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('royal', 'junto')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('porcupine_fish', 'milk_pox')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sailing_ship', 'arabesque')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('muffin', 'return_address')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crossbreeding', 'Anasa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bushnell', 'walkabout')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pipe_bomb', 'Lablab')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('videocassette', 'mammogram')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('cabin_boy', 'ganger')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('arteria_metatarsea', 'seeded_raisin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mopes', 'capitalisation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Amoy', 'family_Meliaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('alligatorfish', 'Cucurbita_maxima')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('double_damages', 'Ministry_of_Transportation_test')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('vomitive', 'Sophie_Tucker')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('psittacosis', 'intracranial_cavity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spine', 'Uzi')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('rockfish', 'limiter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('apache_devil_dance', 'military_capability')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Alzheimers', 'vena_auricularis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bird_of_prey', 'cubic_decimetre')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Acores', 'tit-tat-toe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Charronia', 'high-rise')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('service_tree', 'dengue')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('venous_blood_system', 'trouble_spot')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('split_infinitive', 'chili_powder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Beckman_thermometer', 'black_greasewood')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Lord_of_Misrule', 'populism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Langmuir', 'glume')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Patavium', 'sclerotium_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('serenity', 'vixen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tebibyte', 'durum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Philippine_monetary_unit', 'double-spacing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sage_brush', 'treble')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scotoma', 'cardcastle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('electrolytic_capacitor', 'kirtle')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Pantaloon', 'water-soluble_vitamin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pathogenesis', 'claims_adjustor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('recourse', 'Chassid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lomustine', 'Pd')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('YHWH', 'synapsis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adactyly', 'Clitocybe_dealbata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jane_Seymour', 'nephrogenic_diabetes_insipidus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('third_cranial_nerve', 'wedding_chest')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Indus', 'albuminuria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('freeman', 'chaulmoogra_oil')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('decalcification', 'cycle_rickshaw')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gasterosteus_pungitius', 'genus_Synercus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subclass_Dibranchia', 'fish_family')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('pectoral_medallion', 'nitrosobacteria')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Afropavo_congensis', 'daraf')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blue-eyed_Mary', 'quassia')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Catha_edulis', 'boa')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('surface', 'eye_muscle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Nazareth', 'milk_adder')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('propanone', 'Livingston')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Portulaca', 'Quiscalus')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('focussing', 'fuller's_earth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Calendula', 'tetraethyl_lead')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Rhenish', 'unequivocalness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('knower', 'acceleration')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('myenteric_plexus', 'elm_tree')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('studio', 'animal_toxin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('focal_point', 'Clement_Philibert_Leo_Delibes')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Casuaridae', 'genus_Bignonia')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('bookstall', 'instructions')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('shut-in', 'Ni-hard_iron')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tim_Leary', 'amygdalin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sting', 'Melicocca_bijuga')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Orites', 'potassium_bromide')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('yellow_avens', 'Chattanooga')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('addendum', 'Granville_Stanley_Hall')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('orthopaedist', 'bloom')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Melastomaceae', 'Panama')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('duodenal_smear', 'Benghazi')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Cetorhinidae', 'silk_screen_print')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Coeloglossum', 'Poecilogale_albinucha')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('white_wine', 'cor_anglais')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('corrugated_fastener', 'magazine_publisher')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vanilla_planifolia', 'rhythm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wasting', 'September_29')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('word_stress', 'robber')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ketoaciduria', 'genus_Catharacta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bos_primigenius', 'idealist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('silicon_chip', 'genus_Cyon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lemon_shark', 'making_love')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rock_geranium', 'perfective_tense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zoning_commission', 'Phalangium')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('bibliotics', 'haik')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sage_hen', 'blackcock')
 (DEBUG) sap(), a == 44456
 (DEBUG) sap('cylinder_block', 'balance')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('vitamin_B6', 'Silybum_marianum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('designer', 'pasty')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('side_door', 'Victoria_Day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pumice_stone', 'Philip_V')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sweet_tooth', 'chairperson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ascomycetes', 'semilunar_cartilage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('secondary_censorship', 'reforestation')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('luncher', 'Donato_Bramante')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Haliaeetus_leucorhyphus', 'goosander')
 (DEBUG) sap(), a == 24306
 (DEBUG) sap('Bremerhaven', 'round_table')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fluosilicate', 'genus_Sitta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lady-of-the-night', 'Rajab')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Dendrocalamus', 'family_Turdidae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('R.V.', 'mooring')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('cornflour', 'Motor_City')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('unpointedness', 'Hermissenda')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('upper_hand', 'Norway_maple')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gold-beater', 'Chlamydera_nuchalis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Basotho', 'Chrysaora_quinquecirrha')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Pinus_pungens', 'hiking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mithraicism', 'genus_Pyrausta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('treble_recorder', 'Herschelian_telescope')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('moonwort', 'saddle_horse')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('yips', 'gran')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gift_tax', 'armoured_combat_vehicle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Christiaan_Huygens', 'yr')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Euphorbia_medusae', 'micrometer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Chinaman', 'blowjob')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Semitic_deity', 'lapel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('usury', 'Hatiora')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('procellariiform_seabird', 'brown_trout')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('Botswana', 'high_technology')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Lithocarpus', 'chondrichthian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Negaprion_brevirostris', 'dyslogia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fugaciousness', 'stricture')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('typing_pool', 'Diospyros_kurzii')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bus_traffic', 'fishery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Peruvian_monetary_unit', 'home_truth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('otosclerosis', 'genus_Phalaris')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cleat', 'family_Caeciliadae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hairpin', 'Carthamus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tallgrass', 'folio')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('chain_armour', 'anterior_facial_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Senecio_cineraria', 'heteroploidy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('revery', 'death_penalty')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('gumption', 'parfait')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pressure_cooker', 'good_continuation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anti-sway_bar', 'Madeira_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('breast_feeding', 'Gustavus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('acclimatisation', 'Dicranopteris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('William_Frederick_Cody', 'family_Equidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tunica', 'gastrulation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('antelope_squirrel', 'dendrobium')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Zen_Buddhism', 'wantonness')
 (DEBUG) sap(), a == 64142
 (DEBUG) sap('hay-scented_fern', 'dormancy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dutifulness', 'unification')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('close_call', 'medicine_ball')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fly_gallery', 'ununquadium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Spiraea', 'adenomyosis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('secondary_sexual_characteristic', 'Nyssa_sylvatica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Japan_allspice', 'National_Reconnaissance_Office')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('skinner', 'Ben_Sira')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('PI', 'plum-fruited_yew')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('croaking', 'surtitle')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('marseille', 'white_beer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('DBMS', 'Arab_chief')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('battle_of_Langside', 'background_level')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tenorist', 'seahorse')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('paw', 'order_Notostraca')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tissue', 'mother-of-pearl_cloud')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chickpea', 'Rastafarianism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('life_form', 'Kahoolawe')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('drinking_glass', 'Jan_Steen')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('primary_solid_solution', 'Danaidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shadowing', 'bush_nasturtium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Binet', 'Halicoeres_radiatus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Saint-John's-bread', 'Armistice_Day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('falanga', 'black_eye')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('waste_product', 'graticule')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dickeybird', 'little_hand')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Norrish', 'belay')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('germ_tube', 'cinnamon_stone')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Chalcedon', 'eosin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mocha_coffee', 'beta_blocker_eyedrop')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('frambesia', 'Hippodamia_convergens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blood_cup', 'limeade')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cryogeny', 'armored_combat_vehicle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('American_mistletoe', 'horseradish_sauce')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Knightia', 'vocalist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Elodea_canadensis', 'rhinoscope')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('canopic_jar', 'symphysis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Pelargonium', 'tomato')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ochotonidae', 'quaker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('earlobe', 'family_Holocentridae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dyscalculia', 'Lashkar-e-Toiba')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('makeover', 'Anemone_ludoviciana')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rajidae', 'custody_battle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crash_program', 'Galsworthy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bicycle_rack', 'combustibility')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lepidothamnus', 'price_gouging')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('meadow_rue', 'phrenic_nerve')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Department_of_the_Interior', 'ascospore')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('yoghurt', 'cytokinin')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('King_Oedipus', 'dog_turd')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('freewoman', 'Wordsworth')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('white_avens', 'adjutant')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('exchange_premium', 'monument')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('die', 'Clematis_vitalba')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('closet_queen', 'blather')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Taipei', 'anecdotist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hematolysis', 'cuisine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('strip_mall', 'sabre')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('family_Osteoglossidae', 'urethritis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Lentibulariaceae', 'dibber')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('low_gear', 'Brevibloc')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('J', 'blubber')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mercantile_agency', 'genus_Nymphaea')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('whole_meal_bread', 'cDNA')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('pate_feuillete', 'contemptuousness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('barrel_knot', 'condenser_microphone')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('petty_whin', 'taxonomist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('untying', 'disputation')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('tritium', 'Canis_rufus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('diamond_wedding_anniversary', 'pyorrhea_alveolaris')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Masorite', 'Angora_rabbit')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('toxicologist', 'family_Pygopodidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('unification', 'flowering_stone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tenorist', 'prismoid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('infrared_therapy', 'Nahuatl')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Missouri_Compromise', 'double_dribble')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('peace_process', 'two-man_tent')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Abelmoschus_esculentus', 'Peromyscus_maniculatus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('hayrack', 'favourable_position')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('first-aid_station', 'Judith')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('move', 'ice-cream_sundae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('silva', 'delivery_boy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('kauri_copal', 'palm')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mergus_merganser', 'ischaemic_stroke')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('intimate', 'locket')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('family_Martyniaceae', 'acrocentric_chromosome')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arctic', 'underscore')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('posit', 'butterfly_collector')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spread', 'sporocarp')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Townes', 'mourning_dove')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('hymenium', 'Eucalyptus_calophylla')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ambiance', 'antimalarial')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('oil_rig', 'caffein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('packet', 'shot_glass')
 (DEBUG) sap(), a == 31616
 (DEBUG) sap('child_welfare_agency', 'smooth_muscle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bitterwood', 'newspaper_ad')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('state_capital', 'sard')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Elaeagnus', 'Constantine_I')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sentiency', 'Ferdinand_the_Great')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('seta', 'stupidity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('privacy', 'answerer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Cymatiidae', 'nomination')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Erolia', 'chlorophyll_c')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Todus', 'pustule')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('seasoner', 'illusion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('oldwife', 'Brezhnev')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ketone_group', 'bacillary_white_diarrhea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wartweed', 'gadolinium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Phoebus_Apollo', 'orthicon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mistrust', 'wood')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('European_fly_honeysuckle', 'capital_of_Belgium')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('bunch_grass', 'attacker')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('viscosity', 'taco')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('luminescence', 'the_Indies')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rootage', 'keeled_garlic')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Annunciation', 'Epacris_impressa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nyala', 'Lepisosteidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spellbinder', 'specification')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dame_Jean_Iris_Murdoch', 'amphigory')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slave_state', 'reluctivity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Emilia-Romagna', 'genus_Enterolobium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('red-green_dichromacy', 'churn')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('higher_rank', 'mezuzah')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bromeosin', 'jakes')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('oxybutyric_acid', 'Boston_Tea_Party')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('anopia', 'cell_wall')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('amphotericin', 'redmaids')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('authorities', 'ultracentrifuge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Prosopis_juliflora', 'Auricularia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('insurrection', 'colorimeter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curtailment', 'console_table')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grant-in-aid', 'SB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('menhaden', 'travel_iron')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('prospicience', 'Aladdin's_lamp')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Violaceae', 'Glycine')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('St._Ignatius_of_Loyola', 'Morris_chair')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gayal', 'henroost')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('snort', 'phragmacone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('truncus_atrioventricularis', 'center_stage')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('diapedesis', 'Shia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('butat', 'telephone_operator')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grassy_death_camas', 'instrumental_conditioning')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('refund', 'flue_pipe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('qualifying', 'Activase')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('amanuensis', 'gymnosophist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Orbignya_cohune', 'oxford')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('carbomycin', 'disease_of_the_skin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('River_Adige', 'blue_pike')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Phaseolus_aureus', 'Tisiphone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('neglect', 'Dar_al-Islam')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tartlet', 'Citroncirus_webberi')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Rwandan', 'newsstand_operator')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('external', 'adenosine_diphosphate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('scapula', 'Republic_of_India')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Marchantiales', 'religious_ritual')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('wire_gage', 'solfeggio')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fingerboard', 'day_blindness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('daze', 'citizenship')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('inauguration', 'Lathyrus_japonicus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Microchiroptera', 'funeral_parlour')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Democratic_Party', 'greed')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('employee-owned_business', 'Cary_Grant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pandanales', 'hold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('housing_commissioner', 'red-header')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Alisma', 'spastic_paralysis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('true_senna', 'product_research')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grasp', 'susurration')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('Millet', 'Russian_mayonnaise')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('monocyte', 'anti-submarine_rocket')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rotary_actuator', 'off-line_operation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Perm', 'genus_Lansium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('topological_space', 'genus_Rhodymenia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tripper', 'sonatina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('YHWH', 'Lynx_rufus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('proctoscope', 'damson')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pyrometric_cone', 'corner')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Guyana_dollar', 'swarm')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Kosciuszko', 'abducens_muscle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('auxiliary_engine', 'plague_spot')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('tip', 'Scandinavian')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('microcyte', 'legal_tender')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Anarhichas', 'Bo_Hai')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coursing', 'rocket_base')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypnotizer', 'basivertebral_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('facial_recognition', 'Martin_Heidegger')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lilium_auratum', 'conservatoire')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lab', 'lotte')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('rockfoil', 'internationalisation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('synizesis', 'whelp')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Okeechobee', 'bed_bug')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('darts', 'petit_dejeuner')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('social_control', 'hajj')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('presence_chamber', 'batting')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('misalliance', 'rodeo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cost', 'perdurability')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Procellaria', 'common_booklouse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('proteolytic_enzyme', 'anthropology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('speech_rhythm', 'gift_wrapping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('refractory', 'cleaning_implement')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('genus_Tetrapturus', 'Napoleon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('newel', 'flowering_stone')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Pseudacris', 'interdiction_fire')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Johan_August_Strindberg', 'harlequin')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Calorie', 'Honiara')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('momma', 'Amberboa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('motor_memory', 'civil_right')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('millenarist', 'GPS')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('methacholine', 'corn_salad')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('highball', 'adulthood')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Pick's_disease', 'white_prairie_aster')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pewee', 'beauty_spot')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Palestinian_Islamic_Jihad', 'cabasset')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basso_rilievo', 'family_Ixodidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('protea', 'spitfire')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Orange', 'monk')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ginger_family', 'ship_money')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Rodhos', 'methacholine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('meaning', 'Frankliniella_fusca')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('backpacking', 'genus_Seseli')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Iliamna_remota', 'pinnacle')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Zeomorphi', 'omental_bursa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('posterior_subcapsular_cataract', 'ceratodus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jumbie_bead', 'folk_poet')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Edward_Teach', 'soft_tree_fern')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('High_Commission', 'genus_Bruchus')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('tank_car', 'chaffweed')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('FHLMC', 'beat')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Cercopithecidae', 'Pompeii')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('desert_plant', 'Fabiana')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ammeter', 'genus_Cronartium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sidereal_hour', 'Jonas_Salk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Robert_R._Livingston', 'transport')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('orderliness', 'shutout')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('constructiveness', 'voice_communication')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Exaeretodon', 'Ariadne')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sick_benefit', 'shigellosis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('John_Wanamaker', 'Surinam_toad')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Oengus', 'meteor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('caldron', 'genus_Dictyophera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cam', 'participant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('beany', 'Mount_Carmel')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('tracheotomy', 'spymaster')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('demineralization', 'callosotomy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sacred_writing', 'pricing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('civet', 'King_William_pine')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('asyndeton', 'fetoscopy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Lythraceae', 'American_olive')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('upthrust', 'bpi')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('symbolization', 'desert_willow')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cartilage_bone', 'heartbeat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Euthynnus', 'dogshit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tilia_tomentosa', 'Taxidea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Chorizagrotis', 'inclementness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Grevillea_banksii', 'Irtish_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ocular_muscle', 'absentmindedness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cichlid_fish', 'enchantress')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('indoctrination', 'Assumption')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('holla', 'Giotto_di_Bondone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scud', 'white_spruce')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gathering_place', 'imbecile')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Archer', 'serenade')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bibos', 'tip_truck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('evening_shirt', 'brokerage_firm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dumper', 'larder')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('haying', 'dragon_arum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('unicyclist', 'diaphoresis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('igneous_rock', 'medical_care')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('major_surgery', 'Macleaya')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Jungermanniaceae', 'Loxia_curvirostra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rock_candy', 'genus_Balaena')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Necturus', 'Iberian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('copper_nose', 'viceroyship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('melphalan', 'sodium_dichromate')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('radar_fire', 'rottenness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('aeon', 'genus_Allium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Liakoura', 'balance-of-payments_problem')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trustworthiness', 'myocardial_infarct')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Dhu'l-Hijjah', 'smiley')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('acetyl_group', 'Cimex_lectularius')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Antigua_and_Barbuda', 'footstool')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Boidae', 'drive-by_killing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ponce_de_Leon', 'profit_and_loss_account')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('convulsion', 'genus_Acridotheres')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Habenaria_nivea', 'safety_fuse')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('acetate_disk', 'one-step')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sugar_candy', 'hairdresser')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('knawel', 'photogenic_epilepsy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('admiralty_law', 'Ivan_Petrovich_Pavlov')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rosemaling', 'skidpan')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('acoustic_aphasia', 'quantum_chromodynamics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('final_exam', 'parchesi')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Indian_pipe', 'no-brainer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('extortionist', 'butter')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('hoary_alyssum', 'martello_tower')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('idolater', 'Pietism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phyllo', 'phase_III_clinical_trial')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scouse', 'secondary_cell')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('concert_hall', 'family_Doliolidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('goujon', 'waterfront')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('clog_dance', 'record_company')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Lotus', 'lieutenant_colonel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stocktaker', 'circulatory_system')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dhak', 'scorpaenoid_fish')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('GI_hormones', 'crotaphion')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('amphisbaena', 'Daviesia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lake_salmon', 'barracking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chocolate_tree', 'family_Marsileaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Inferno', 'John_Dos_Passos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wafer', 'charley-horse')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('common_factor', 'stellar_parallax')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('collotype_printing', 'duellist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('orange-blossom_orchid', 'Boston_Tea_Party')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Beckley', 'Scorsese')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('saxifrage_family', 'soap_flakes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('plosive', 'hypotonus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('US_Attorney_General', 'fighting_chair')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('feint', 'sea_wormwood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sick_call', 'commodities_exchange')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clue', 'right-hander')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mantrap', 'dynamic_headroom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Department_of_Veterans_Affairs', 'Ranunculus_acris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('salute', 'gemmule')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chromosomal_aberration', 'ledger_paper')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('yellowfin', 'flying_boat')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Texas_star', 'giggle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('squamous_cell', 'otalgia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('miscegenation', 'Bartholin's_gland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Faunus', 'profit_and_loss_account')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Chrysothamnus', 'chamosite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('abracadabra', 'capital_of_Guinea-Bissau')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('elbow_pad', 'enamel')
 (DEBUG) sap(), a == 32578
 (DEBUG) sap('smallpox_virus', 'cabala')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('principal_axis', 'Philippopolis')
 (DEBUG) sap(), a == 51894
 (DEBUG) sap('white_lie', 'plant_scientist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lathee', 'labial_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stink', 'time_period')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('deservingness', 'order_Lepidodendrales')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('little_club_moss', 'eponymy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gestapo', 'chicken_cacciatora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ringo_Starr', 'stilboestrol')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cycadales', 'bohemian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dining-room_furniture', 'brainstem')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Dioscorea', 'Cestrum_diurnum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vaginal_birth', 'lightweight')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cambridge', 'gun_case')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('qualification', 'wordplay')
 (DEBUG) sap(), a == 54044
 (DEBUG) sap('Trojan_Horse', 'Arthur_Miller')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('bargain', 'grey_catbird')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bookfair', 'out-basket')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bambino', 'Cyrus_II')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('disturbance', 'State_of_Katar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('perineotomy', 'life_assurance')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Lola_Montez', 'kirk')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('footstool', 'barn_millet')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cabinetmaker', 'nerita')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Gropius', 'bus_company')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Moschus_moschiferus', 'insubstantiality')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('text', 'orlop')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('tibialis_posticus', 'storm_door')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Blue_Ridge_Mountains', 'woodcut')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('bohemian', 'zoning_board')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ulvaceae', 'board_game')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Kenneth_Grahame', 'deadhead')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Gregor_Mendel', 'genus_Hypoderma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('proscenium', 'division_Schizophyta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fish_cake', 'telegraph_post')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('class_Nuda', 'minuscule')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Baroness_Emmusca_Orczy', 'Seriola_zonata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Pediculus', 'Cydippidea')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('genus_Tectaria', 'Sporanox')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gabriel_Daniel_Fahrenheit', 'genus_Persoonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Taymyr_Peninsula', 'fungus_gnat')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('tenure', 'material_breach')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('wraparound', 'vorticose_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gravestone', 'sugar_candy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Hosta', 'rent-rebate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Solomon_Hurok', 'cigarette')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Gesneriaceae', 'genus_Bartle-Frere')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('appliance', 'Sium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('behavioristic_psychology', 'funicular_railway')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('peripheral', 'Lophodytes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pulicaria_dysenterica', 'A._E._Housman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Pagurus', 'Wave')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('connective', 'Presbytes_entellus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('muster', 'mopper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('protectionism', 'lymphoid_tissue')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('giant_fern', 'genus_Baccharis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('parula_warbler', 'aurora_borealis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('summer_tanager', 'fixative')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('brightness_level', 'payload')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('drudgery', 'differential')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tactical_maneuver', 'Gombrowicz')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('naval_forces', 'pudding')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('put', 'leading_lady')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mounties', 'good_part')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('poetry', 'bikini')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lilium_columbianum', 'cross_infection')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Panax_quinquefolius', 'pterygium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mashie', 'Mirabilis_longiflora')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('payload', 'working_capital')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('false_fruit', 'caroling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Balaenopteridae', 'class_Thaliacea')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('common_lilac', 'quantitative_analysis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mews', 'improvised_explosive_device')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('workday', 'James_Whitcomb_Riley')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('city_manager', 'alcohol-in-glass_thermometer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('civil_rights_worker', 'love_life')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Romania', 'labor_of_love')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('queue', 'Silene_caroliniana')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('leaf', 'Menispermum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('telescope', 'northern_red_oak')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('tract_house', 'Tommy_gun')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Prototheria', 'Thracian')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('abdicator', 'spruceness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deictic', 'Oort_cloud')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('kyat', 'Lake_Onega')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('orthoptist', 'African_violet')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('wafer', 'Dietrich_Bonhoeffer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('division_Protista', 'nonessential')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mary_I', 'metacyesis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lemuroidea', 'strawberry_daiquiri')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('smooth_crabgrass', 'Sunnite')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('rejection', 'clerid_beetle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('teg', 'Uzi')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('medieval_Schoolman', 'salad_cream')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('zinc_cadmium_sulfide', 'blind_trust')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('Cornish_heath', 'seismography')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stonecutter', 'kainogenesis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('recluse', 'cummerbund')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('freewheel', 'Baptisia_tinctoria')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('maternal_language', 'Macao_monetary_unit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('needlewood', 'shoulder_strap')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Erodium_texanum', 'pea_flour')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('celestial_equator', 'crotchet')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('theologiser', 'glucose_tolerance_test')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bard', 'sterileness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('black_currant', 'hawfinch')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Commelinales', 'Mullidae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('dragnet', 'dash')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Hygrophorus_purpurascens', 'family_Cactaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bilingual_dictionary', 'Charles_Hardin_Holley')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('name_day', 'Rostov_na_Donu')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pediculosis_corporis', 'Doctor_of_Dental_Medicine')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('atomization', 'genus_Mobula')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stumbler', 'Dasht-e-Kavir')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('invasion', 'federalization')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('cystic_fibrosis', 'reprint')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('white_plague', 'talipes')
 (DEBUG) sap(), a == 60598
 (DEBUG) sap('plentitude', 'second_stomach')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('antipodal_opposition', 'sea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hardtack', 'day_nursery')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('reviewing_stand', 'rosemaling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gibbon', 'flat_tip_screwdriver')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Nautilus', 'International_Association_of_Lions_clubs')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('dialog', 'Terry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bitis', 'myelin_sheath')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('learning_disorder', 'Gentiana')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ravisher', 'Mogul')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('unitization', 'jury')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('evening_primrose', 'trend_setting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('viscounty', 'carnal_abuse')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('missel_thrush', 'mineral_extraction')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('beach_morning_glory', 'Friedrich_Anton_Mesmer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('introjection', 'Amauropelta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('thyroiditis', 'male_plug')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Walt_Disney_World', 'clipping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wild_basil', 'blotting_paper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('shoat', 'mononuclear_phagocyte_system')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('contingent', 'tizzy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('trailer_camp', 'anoestrus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('naval_brass', 'Tay-Sachs')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('awareness', 'tea_cart')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tri-iodothyronine', 'second_person')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('psilosis', 'globalisation')
 (DEBUG) sap(), a == 63065
 (DEBUG) sap('Henry_Russell', 'Buffalo_Indian')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('contadino', 'Ruptiliocarpon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('passivity', 'shopwindow')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('postmortem_examination', 'family_Pontederiaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('kino', 'appreciator')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('binary_notation', 'Blackburn')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('agueweed', 'flash_camera')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Parker', 'captopril')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('relevance', 'Dwight_Davis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('body', 'double_quotes')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('last_rites', 'compound_microscope')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sled', 'Dixie_cup')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('cytolysis', 'Wilson_cloud_chamber')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('easy_chair', 'daw')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('incompetency', 'Buccinidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('coalhole', 'Light')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Prunus_cerasus_marasca', 'Thomas_Jefferson')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cephalaspid', 'parqueterie')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('living_stone', 'Usneaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surrealism', 'castle_in_the_air')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('radial_asymmetry', 'pot_roast')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crow_blackbird', 'smugness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sir_Sarvepalli_Radhakrishnan', 'skimmer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('paperbark_birch', 'Charles_VII')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('acute_leukemia', 'Togo_franc')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Iyyar', 'shakiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('direct_flight', 'genus_Gomphotherium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('squamous_cell_carcinoma', 'Somerset_Maugham')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spewer', 'MS')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chloramine', 'noise_conditions')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lavalava', 'genus_Otus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chiropractor', 'Che_Guevara')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Daumier', 'gas_range')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Cacicus', 'conscience_money')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('horizontal_surface', 'American_bittern')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ligation', 'randomization')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('upholstery_needle', 'foetometry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('guise', 'atavism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('junction_barrier', 'prime_interest_rate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Service', 'necrobiosis_lipoidica_diabeticorum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('checksum', 'ice_coffee')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('synergist', 'mound')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('baton_twirler', 'gut')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('necessary', 'Photinia_arbutifolia')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('herring_hog', 'George_Edward_Pickett')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('grappling', 'extracapsular_surgery')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('high_horse', 'Acocanthera_oppositifolia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crossroads', 'Sir_Alexander_Robertus_Todd')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('window_envelope', 'yakuza')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypochlorite', 'European_woolly_thistle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('reductio', 'ring')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('damping_off_fungus', 'erythroblastosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chicken_paprikash', 'timetable')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('inn', 'piece_of_furniture')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Francis_Joseph_I', 'order_Amoebida')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('oil_future', 'levee')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('black_book', 'simple_sentence')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('reductionism', 'substratum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('co-ed', 'elimination_reaction')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('shad_roe', 'traffic_lane')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('petrol', 'infallibility')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carphophis_amoenus', 'lump_sugar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('relatedness', 'ulnar_vein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pis_aller', 'unenlightenment')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('nicotinamide_adenine_dinucleotide_phosphate', 'Procrustes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Heritiera_trifoliolata', 'Calorie')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('physical_contact', 'rose_gum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('boatswain_bird', 'aroeira_blanca')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('apple_polisher', 'sumac')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cholelithiasis', 'allurement')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('pharyngeal_consonant', 'tigon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Welsh_rarebit', 'spiel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pandanus', 'robotics_equipment')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Mary_Pickford', 'tenability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rock_outcrop', 'pseudophloem')
 (DEBUG) sap(), a == 56176
 (DEBUG) sap('John_Wickliffe', 'breakability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Orchidaceae', 'catechesis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bedding_plant', 'Agent_Orange')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('music_of_the_spheres', 'universal_time')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dabchick', 'rollmops')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('beefsteak_plant', 'spread_eagle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Orleanais', 'work-in')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('amusement_park', 'bench_clamp')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('octad', 'ectopic_pregnancy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('abdominal_breathing', 'annulus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('futurity', 'tobacco_thrips')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eye', 'Scutellaria_lateriflora')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Portunus', 'Uruguay_potato')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('three-seeded_mercury', 'idiosyncrasy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bufo_marinus', 'international_law_enforcement_agency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gramineous_plant', 'Lycium_carolinianum')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Sesbania_grandiflora', 'island_of_Guernsey')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Ommiad', 'Diomedea_exulans')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subphylum_Urochordata', 'military_reserve')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Argyroxiphium_sandwicense', 'Tolmiea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('endonuclease', 'genus_Regalecus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ofo', 'bifocals')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('poetiser', 'pendant_earring')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Pallas_Athene', 'functionary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('falcon-gentle', 'Trichomanes_reniforme')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('prematurity', 'Frederick_I')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sayda', 'program_music')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('musteline', 'superhet')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('crake', 'customs_union')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Yahwe', 'erythema_nodosum_leprosum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ricer', 'defector')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Marcus_Ulpius_Traianus', 'principle_of_superposition')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rhea_Silvia', 'colouring')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Andersen', 'emotion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('knife_edge', 'rabbit-weed')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sport_car', 'Jagatai')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('umbrella', 'ex-husband')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('labyrinthodont', 'Lawrence_George_Durrell')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Petri_dish', 'spur')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('lesion', 'Albino_Luciano')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('admission_price', 'intravenous_anesthetic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('quartz_glass', 'demesne')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Emydidae', 'tutorship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('grape_arbor', 'dentifrice')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('German_capital', 'Thorazine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('myrtle_spurge', 'vena_ophthalmica')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lamium_album', 'crankshaft')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pear_tree', 'mountain_pride')
 (DEBUG) sap(), a == 61246
 (DEBUG) sap('cantle', 'blockbuster')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('jaggedness', 'Romansh')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Pyrrosia_lingua', 'dhobi_itch')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('canasta', 'Diana')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('symphilid', 'accidental')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ash_bin', 'spruceness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Old_Bulgarian', 'class_Pyrenomycetes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fall_guy', 'pudginess')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('three-banded_armadillo', 'Arctocephalus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Khama', 'current_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('machinist's_vise', 'portraitist')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Pedaliaceae', 'motley_fool')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Aerobacter', 'consideration')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rusty_grackle', 'visual_system')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('measuring_unit', 'yeller')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('apophatism', 'Ledum_groenlandicum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Paleozoic_era', 'James_Barrie')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flagellated_cell', 'Delibes')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('genus_Euphractus', 'nematode_worm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flesh_fly', 'fervency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Edna_Millay', 'demonstrativeness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flame_durrajong', 'narrow_escape')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('exhibit', 'fixed_intonation')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('gravida', 'cyma_reversa')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Bernd_Heinrich_Wilhelm_von_Kleist', 'Tenerife')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('vena_ophthalmica', 'echo_sounding')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Elymus_canadensis', 'WbS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Termitidae', 'bagpiper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Venn', 'the_States')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Malacosoma_americana', 'sectional')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rose_bug', 'easy_mark')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('sequoia', 'flashlight_battery')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Samuel_Wiesenthal', 'spore_case')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Teton_Sioux', 'lobby')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('church_mode', 'conservatism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Homo_heidelbergensis', 'sevens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pulsatilla_patens', 'lucerne')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('polychete', 'hypozeuxis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('liftoff', 'Henri_Clemens_van_de_Velde')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bad_hat', 'Rana_sylvatica')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Western_Samoan_monetary_unit', 'Barbary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gossypium_barbadense', 'Aplodontiidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Socialist_Party', 'perfume')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ostomy', 'musical_box')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('intaglio', 'competition')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('what_for', 'deep_water')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fortified_wine', 'trellis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('beadwork', 'Gibbs')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('DARPA', 'maternalism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('calycle', 'Lindesnes')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('self-effacement', 'Loire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Brazilian_guava', 'theanthropism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('singular', 'demander')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chateau', 'torsk')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('operetta', 'Phocoena')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('viola_clef', 'Coragyps')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('motorway', 'diving_event')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Labrador_retriever', 'classified')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('whispering', 'Adlai_Ewing_Stevenson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chamaeleo_oweni', 'Damaraland_mole_rat')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('blizzard', 'genus_Mastodon')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('blue_story', 'invalidation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Punica', 'Worcester')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dollarfish', 'false_lily_of_the_valley')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('atomic_number_72', 'docket')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('kitten-tails', 'genus_Ovibos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jumby_tree', 'C-ration')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('old', 'twelfth_part')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('negative_chemotaxis', 'resume')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bloody_Mary', 'eczema_herpeticum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Latimeridae', 'Ozonium')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('Lao-tzu', 'dinner_gown')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Edvard_Grieg', 'factory_price')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('europium', 'abacus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('second_banana', 'American_ivy')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('pyxidium', 'beluga_caviar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('changeability', 'pricker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('information_age', 'family_Oleandraceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('game_equipment', 'hereness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mays', 'arterial_sclerosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scientific_fact', 'tombac')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('inkle', 'Thomas_Kyd')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('exhumation', 'drop-down_menu')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Avena', 'Wyethia_amplexicaulis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Malaya', 'genus_Rhizobium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('indoleacetic_acid', 'subfamily_Caesalpinioideae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lepidopteron', 'duck_hunting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hush_money', 'genus_Olea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cyan', 'ballot_box')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Saint_Thomas_Aquinas', 'Giacometti')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('balefire', 'alcapton')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('topminnow', 'passing_water')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('count_noun', 'reckoning')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mentality', 'Modern_Hebrew')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Kroeber', 'manul')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('consumptive', 'loose_woman')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('oil_of_vitriol', 'fMRI')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mph', 'eastern_meadowlark')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cupid's_dart', 'pictorial_representation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('demonisation', 'foie_gras')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phonetic_alphabet', 'Roman_Empire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('infectious_polyneuritis', 'Julian_Bon
Total: 0/8 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.00 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 10:28:50</td></tr>
        <tr><td>Raw Score</td><td>81.04 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#009900">PASSED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#1F9900">29/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#459900">11/16 tests passed</font>

Aggregate score: <font color="#239900">81.04%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 17:29 Outcast.java
-rw-r--r-- 1 4.4K Apr 30 17:29 SAP.java
-rw-r--r-- 1 8.6K Apr 30 17:29 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 17:29 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; passed

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
==&gt; passed


Total: 19/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student sap() is too far to be a valid common ancestor when testing pair 2 of 1000
     -  nounA = greenfly
     -  nounB = Egyptian_cotton
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 14
     -  reference distance() to 'organism being' = 14
     -  actual distance to 'organism' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
     -  student returns invalid synset on pair 2 of 1000
     -  nounA = clotting_factor
     -  nounB = factor_V
     -  student   distance() = 1
     -  reference distance() = 1
     -  student   sap() = 'coagulation_factor'
     -  reference sap() = 'coagulation_factor clotting_factor'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = shale_oil
     -  nounB = aminotransferase
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'macromolecule'
     -  reference sap() = 'macromolecule supermolecule'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student returns invalid synset on pair 3 of 1000
     -  nounA = metamere
     -  nounB = vena_vorticosum
     -  student   distance() = 9
     -  reference distance() = 9
     -  student   sap() = 'part'
     -  reference sap() = 'part piece'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
  *  synsets3.txt, hypernyms3InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
  *  synsets6.txt, hypernyms6InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 8 of 100
     -  nounA = yodh
     -  nounB = Rosh_Hashonah
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 15
     -  reference distance() to 'abstraction abstract_entity' = 15
     -  actual distance to 'abstraction' = -1
     -  failed on call 8 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 4 of 100
     -  nounA = Arctic_mouse-ear
     -  nounB = turret
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 11
     -  reference distance() to 'whole unit' = 11
     -  actual distance to 'whole' = -1
     -  failed on call 4 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
     -  student sap() is too far to be a valid common ancestor when testing pair 2 of 100
     -  nounA = family_Cephalobidae
     -  nounB = country_and_western
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 12
     -  reference distance() to 'abstraction abstract_entity' = 12
     -  actual distance to 'abstraction' = -1
     -  failed on call 2 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
     -  student   memory = 4204328 bytes
     -  reference memory = 6071704 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
     -  student   memory = 9505832 bytes
     -  reference memory = 14092208 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.05 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  738056.00
     -  student   solution calls per second:    4018.00
     -  reference / student ratio:               183.69

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  209998.00
     -  student   solution calls per second:    3881.33
     -  reference / student ratio:                54.10

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student constructor time =  0.71 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  166096.60
     -  student   solution calls per second:     155.40
     -  reference / student ratio:              1068.83

=&gt; passed    student &lt;= 10000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=  1000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=   100x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=    10x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=     5x reference

Test 4: timing isNoun() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  592418.00
     -  student   solution calls per second:  757148.00
     -  reference / student ratio:                 0.78
     -  allowed ratio:                             2.00
==&gt; passed

Total: 3/8 tests passed!

================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.05 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 10:03:18</td></tr>
        <tr><td>Raw Score</td><td>77.33 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#009900">PASSED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#2D9900">27/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#459900">11/16 tests passed</font>

Aggregate score: <font color="#2C9900">77.33%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 17:03 Outcast.java
-rw-r--r-- 1 4.3K Apr 30 17:03 SAP.java
-rw-r--r-- 1 8.6K Apr 30 17:03 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 17:03 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 74 of 100
     -  v = 46153 63403 81796 
     -  w size = 11
     -  student   length() = 5
     -  reference length() = 4
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 6 to length()
     -  v = 6 11 13 15 16 
     -  w = 1 3 11 14 18 
     -  student   length() = 1
     -  reference length() = 0
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 4 to length()
     -  v = 7 13 15 16 
     -  w = 1 10 14 16 
     -  student   length() = 1
     -  reference length() = 0
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 17/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 1000
     -  nounA = Sir_William_Turner_Walton
     -  nounB = Randall_Jarrell
     -  student   sap() = 'person'
     -  reference sap() = 'person individual someone somebody mortal soul'
     -  student   distance() = 9
     -  reference distance() to 'person individual someone somebody mortal soul' = 9
     -  actual distance to 'person' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
     -  student returns invalid synset on pair 3 of 1000
     -  nounA = supermolecule
     -  nounB = unit
     -  student   distance() = 2
     -  reference distance() = 2
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = prostate_specific_antigen
     -  nounB = tuna_oil
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'macromolecule'
     -  reference sap() = 'macromolecule supermolecule'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student returns invalid synset on pair 5 of 1000
     -  nounA = nitrite
     -  nounB = fossil_oil
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
  *  synsets3.txt, hypernyms3InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
  *  synsets6.txt, hypernyms6InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 6 of 100
     -  nounA = garden_loosestrife
     -  nounB = depth_gage
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 14
     -  reference distance() to 'whole unit' = 14
     -  actual distance to 'whole' = -1
     -  failed on call 6 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 8 of 100
     -  nounA = play_group
     -  nounB = bigness
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 12
     -  reference distance() to 'abstraction abstract_entity' = 12
     -  actual distance to 'abstraction' = -1
     -  failed on call 8 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
     -  student sap() is too far to be a valid common ancestor when testing pair 13 of 100
     -  nounA = emir
     -  nounB = Old_World_quail
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 9
     -  reference distance() to 'organism being' = 9
     -  actual distance to 'organism' = -1
     -  failed on call 13 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
     -  student   memory = 4204568 bytes
     -  reference memory = 6071352 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
     -  student   memory = 9505976 bytes
     -  reference memory = 14089584 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.05 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  766635.33
     -  student   solution calls per second:    4042.67
     -  reference / student ratio:               189.64

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  207592.00
     -  student   solution calls per second:    3885.33
     -  reference / student ratio:                53.43

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student constructor time =  0.66 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  161956.60
     -  student   solution calls per second:     156.00
     -  reference / student ratio:              1038.18

=&gt; passed    student &lt;= 10000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=  1000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=   100x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=    10x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=     5x reference

Test 4: timing isNoun() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  587121.00
     -  student   solution calls per second:  735779.00
     -  reference / student ratio:                 0.80
     -  allowed ratio:                             2.00
==&gt; passed

Total: 3/8 tests passed!

================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.02 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 09:54:02</td></tr>
        <tr><td>Raw Score</td><td>77.33 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#009900">PASSED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#2D9900">27/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#459900">11/16 tests passed</font>

Aggregate score: <font color="#2C9900">77.33%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 16:54 Outcast.java
-rw-r--r-- 1 4.2K Apr 30 16:54 SAP.java
-rw-r--r-- 1 8.6K Apr 30 16:54 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 16:54 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 35083 
     -  w = 48629 
     -  student   length() = 11
     -  reference length() = 9
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v = 60136 
     -  w = 43425 77834 
     -  student   length() = 14
     -  reference length() = 12
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v = 27570 38687 
     -  w = 79030 
     -  student   length() = 14
     -  reference length() = 11
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 4451 28183 
     -  w = 42500 49076 
     -  student   length() = 12
     -  reference length() = 10
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 18497 28886 48978 
     -  w size = 11
     -  student   length() = 8
     -  reference length() = 7
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v size = 11
     -  w = 52497 52504 75297 
     -  student   length() = 13
     -  reference length() = 5
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 3 to ancestor()
     -  v = 6 7 9 12 19 
     -  w = 4 6 11 13 15 
     -  student   ancestor = 10
     -  distance from v to 10 = 1
     -  distance from w to 10 = 2
     -  reference ancestor = 6
     -  reference length   = 0
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 2 to length()
     -  v = 1 4 14 17 
     -  w = 0 2 8 11 19 
     -  student   length() = 3
     -  reference length() = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 17/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student sap() is too far to be a valid common ancestor when testing pair 5 of 1000
     -  nounA = velvet_flower
     -  nounB = Dromaius_novaehollandiae
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 11
     -  reference distance() to 'organism being' = 11
     -  actual distance to 'organism' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
     -  student returns invalid synset on pair 15 of 1000
     -  nounA = factor_II
     -  nounB = Hageman_factor
     -  student   distance() = 2
     -  reference distance() = 2
     -  student   sap() = 'coagulation_factor'
     -  reference sap() = 'coagulation_factor clotting_factor'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = cyanide_group
     -  nounB = wood_pulp
     -  student   distance() = 9
     -  reference distance() = 9
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student returns invalid synset on pair 3 of 1000
     -  nounA = stand_oil
     -  nounB = ptyalin
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'macromolecule'
     -  reference sap() = 'macromolecule supermolecule'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
  *  synsets3.txt, hypernyms3InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
  *  synsets6.txt, hypernyms6InvalidCycle.txt
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 12 of 100
     -  nounA = crawfish
     -  nounB = St._Nicholas
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 13
     -  reference distance() to 'organism being' = 13
     -  actual distance to 'organism' = -1
     -  failed on call 12 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
     -  student sap() is too far to be a valid common ancestor when testing pair 7 of 100
     -  nounA = choirboy
     -  nounB = monitrice
     -  student   sap() = 'person'
     -  reference sap() = 'person individual someone somebody mortal soul'
     -  student   distance() = 9
     -  reference distance() to 'person individual someone somebody mortal soul' = 9
     -  actual distance to 'person' = -1
     -  failed on call 7 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
     -  student sap() is too far to be a valid common ancestor when testing pair 4 of 100
     -  nounA = mundanity
     -  nounB = United_States_Intelligence_Community
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 10
     -  reference distance() to 'abstraction abstract_entity' = 10
     -  actual distance to 'abstraction' = -1
     -  failed on call 4 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
     -  student   memory = 4204480 bytes
     -  reference memory = 6071352 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
     -  student   memory = 9505880 bytes
     -  reference memory = 14092208 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.04 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  737026.00
     -  student   solution calls per second:    3362.67
     -  reference / student ratio:               219.18

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  164818.67
     -  student   solution calls per second:    3596.67
     -  reference / student ratio:                45.83

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  student constructor time =  0.83 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  122587.60
     -  student   solution calls per second:     112.00
     -  reference / student ratio:              1094.53

=&gt; passed    student &lt;= 10000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=  1000x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=   100x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=    10x reference
=&gt; <font color="#990000"><b>FAILED</b></font>    student &lt;=     5x reference

Test 4: timing isNoun() with random nouns
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
     -  reference solution calls per second:  608999.00
     -  student   solution calls per second:  735618.00
     -  reference / student ratio:                 0.83
     -  allowed ratio:                             2.00
==&gt; passed

Total: 3/8 tests passed!

================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.24 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 09:45:11</td></tr>
        <tr><td>Raw Score</td><td>70.79 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#009900">PASSED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#349900">26/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#3F9900">70.79%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 16:44 Outcast.java
-rw-r--r-- 1 4.2K Apr 30 16:44 SAP.java
-rw-r--r-- 1 8.6K Apr 30 16:44 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 16:44 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 3
     -  student length before = 2
     -  student length after  = 1
  *  digraph2.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 2
     -  student length before = 4
     -  student length after  = 1
  *  digraph3.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 1
     -  student length before = -1
     -  student length after  = 1
  *  digraph4.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 1
     -  student length before = 3
     -  student length after  = 1
  *  digraph5.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 1
     -  student length before = -1
     -  student length after  = 1
  *  digraph6.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 2
     -  student length before = 2
     -  student length after  = 1
  *  digraph-ambiguous-ancestor.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 2
     -  student length before = 2
     -  student length after  = 1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 35083 
     -  w = 48629 
     -  student   length() = 11
     -  reference length() = 9
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v = 60136 
     -  w = 43425 77834 
     -  student   length() = 14
     -  reference length() = 12
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v = 27570 38687 
     -  w = 79030 
     -  student   length() = 14
     -  reference length() = 11
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 4451 28183 
     -  w = 42500 49076 
     -  student   length() = 12
     -  reference length() = 10
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 18497 28886 48978 
     -  w size = 11
     -  student   length() = 8
     -  reference length() = 7
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v size = 11
     -  w = 52497 52504 75297 
     -  student   length() = 13
     -  reference length() = 5
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 3 to ancestor()
     -  v = 6 7 9 12 19 
     -  w = 4 6 11 13 15 
     -  student   ancestor = 10
     -  distance from v to 10 = 1
     -  distance from w to 10 = 2
     -  reference ancestor = 6
     -  reference length   = 0
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 2 to length()
     -  v = 1 4 14 17 
     -  w = 0 2 8 11 19 
     -  student   length() = 3
     -  reference length() = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 16/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('dramatic_production', 'Dibranchiata')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 1000
     -  nounA = dramatic_production
     -  nounB = Dibranchiata
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 15
     -  reference distance() to 'abstraction abstract_entity' = 15
     -  actual distance to 'abstraction' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
 (DEBUG) sap('factor_IV', 'haptoglobin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('factor_III', 'recombinant_protein')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('glutamic_oxaloacetic_transaminase', 'trypsinogen')
 (DEBUG) sap(), a == 16
 (DEBUG) sap('opsin', 'opsin')
 (DEBUG) sap(), a == 49
 (DEBUG) sap('secretase', 'cothromboplastin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('tetanus_immunoglobulin', 'fibrinase')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('factor_X', 'factor_II')
 (DEBUG) sap(), a == 11
     -  student returns invalid synset on pair 7 of 1000
     -  nounA = factor_X
     -  nounB = factor_II
     -  student   distance() = 2
     -  reference distance() = 2
     -  student   sap() = 'coagulation_factor'
     -  reference sap() = 'coagulation_factor clotting_factor'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
 (DEBUG) sap('acyl_group', 'actomyosin')
 (DEBUG) sap(), a == 478
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = acyl_group
     -  nounB = actomyosin
     -  student   distance() = 6
     -  reference distance() = 6
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
 (DEBUG) sap('striate_vein', 'triose')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('oligodendroglia', 'venae_dorsales_penis_profunda')
 (DEBUG) sap(), a == 104
 (DEBUG) sap('Bowman's_capsule', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('vas', 'marrowbone')
 (DEBUG) sap(), a == 104
 (DEBUG) sap('os_pubis', 'conjunctival_layer_of_bulb')
 (DEBUG) sap(), a == 51
 (DEBUG) sap('heparin', 'pectin')
 (DEBUG) sap(), a == 663
     -  student returns invalid synset on pair 6 of 1000
     -  nounA = heparin
     -  nounB = pectin
     -  student   distance() = 3
     -  reference distance() = 3
     -  student   sap() = 'polysaccharide'
     -  reference sap() = 'polysaccharide polyose'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets3.txt, hypernyms3InvalidCycle.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle+Path.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('uxor', 'superior_skill')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Georgia', 'gastrointestinal_tract')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('indecorousness', 'streamline_flow')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sequoia_gigantea', 'actinopod')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('silver_fir', 'laptop')
 (DEBUG) sap(), a == 81004
     -  student sap() is too far to be a valid common ancestor when testing pair 10 of 100
     -  nounA = silver_fir
     -  nounB = laptop
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 19
     -  reference distance() to 'whole unit' = 19
     -  actual distance to 'whole' = -1
     -  failed on call 10 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Isabella', 'lockage')
 (DEBUG) sap(), a == 81004
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 100
     -  nounA = Isabella
     -  nounB = lockage
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 12
     -  reference distance() to 'whole unit' = 12
     -  actual distance to 'whole' = -1
     -  failed on call 1 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('authority_figure', 'Edgar_Wallace')
 (DEBUG) sap(), a == 60216
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 100
     -  nounA = authority_figure
     -  nounB = Edgar_Wallace
     -  student   sap() = 'person'
     -  reference sap() = 'person individual someone somebody mortal soul'
     -  student   distance() = 5
     -  reference distance() to 'person individual someone somebody mortal soul' = 5
     -  actual distance to 'person' = -1
     -  failed on call 1 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 5000
 (DEBUG) words.size() == 7992
 (DEBUG) digraph.V() == 5000
 (DEBUG) digraph.E() == 5059
 (DEBUG) WordNet constructed
     -  student   memory = 4204568 bytes
     -  reference memory = 6071352 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 10000
 (DEBUG) words.size() == 19600
 (DEBUG) digraph.V() == 10000
 (DEBUG) digraph.E() == 10087
 (DEBUG) WordNet constructed
     -  student   memory = 9505976 bytes
     -  reference memory = 14089584 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.00 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  770530.00
     -  student   solution calls per second:    4000.00
     -  reference / student ratio:               192.63

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  220796.67
     -  student   solution calls per second:    3904.00
     -  reference / student ratio:                56.56

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
     -  student constructor time =  0.69 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('bit', 'byte')
 (DEBUG) sap(), a == 78703
 (DEBUG) sap('apple', 'orange')
 (DEBUG) sap(), a == 37179
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
 (DEBUG) sap('Sandor_Kellner', 'potassium_bitartrate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('swing', 'perilune')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Taricha_granulosa', 'Lagarostrobus_colensoi')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Chinese_goose', 'Walt_Whitman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('prodigy', 'typewriting')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sandarach', 'sheepskin')
 (DEBUG) sap(), a == 53454
 (DEBUG) sap('Lecanoraceae', 'Yeniseian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Piptadenia', 'PID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tadzhik', 'French_capital')
 (DEBUG) sap(), a == 19379
 (DEBUG) sap('vena_hemiazygos_accessoria', 'Miles_Standish')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('liberation_theology', 'nerve_end')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('double_jeopardy', 'heart_line')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('catarrh', 'witchcraft')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('inverse', 'Eruca')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('navigational_chart', 'Spanish_gorse')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('saddle_roof', 'senega_root')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Blennius', 'wash_room')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('computer_file', 'traffic_island')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basalt', 'act_of_terrorism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Uintatherium', 'psychotic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vaccinium_myrsinites', 'Pisonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ives', 'officer's_mess')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fetal_distress', 'police_headquarters')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('abdomen', 'Rh')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mt._McKinley', 'quasi-NGO')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Indian_salad', 'followup')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('von_Mauser', 'Sciurus_hudsonicus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('jet', 'invention')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('red_spider_mite', 'wellness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Triton', 'stepping_stone')
 (DEBUG) sap(), a == 56176
 (DEBUG) sap('Christian', 'Iron_Age')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hopelessness', 'genus_Ichthyosaurus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('trou-de-loup', 'root')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('drygoods', 'return')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Pulsatilla_vulgaris', 'Atlantic_bonito')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Psephurus', 'Araucariaceae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('wet_lung', 'si')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fibrovascular_bundle', 'ramjet_engine')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('underbelly', 'circularity')
 (DEBUG) sap(), a == 63314
 (DEBUG) sap('loyalty', 'chromaesthesia')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('plum_pudding', 'musical_note')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('telephone_booth', 'aerides')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Paradisea_liliastrum', 'conscription')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_Rowlands', 'negative_correlation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lithomancer', 'hackle')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('brine', 'harvest_home')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('giggle', 'lay')
 (DEBUG) sap(), a == 22215
 (DEBUG) sap('remise', 'George_Eliot')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('recrudescence', 'eye_contact')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('head_louse', 'Apium_graveolens_rapaceum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('American_kestrel', 'Verbesina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('docility', 'Schlesien')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wellness', 'emollient')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('motorized_wheelchair', 'personal_representative')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('quizmaster', 'active_placebo')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('tree', 'antimony_potassium_tartrate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ecce_homo', 'travel_time')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rhinencephalon', 'health_care_delivery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trope', 'blind_gentian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Asclepias_subverticillata', 'computer_monitor')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Xenicus', 'Balanus')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('cherry-tree_gum', 'associated_state')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hepatoflavin', 'spurge')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pearly_nautilus', 'narghile')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rottenness', 'ice-cream_sundae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('washboard', 'isocyanate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mammalia', 'Colorado_fir')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('seller', 'guanine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chimneysweep', 'Edgar_Albert_Guest')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('percale', 'genus_Epiphyllum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dying', 'Aleksandr_Scriabin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('selfishness', 'suborder_Blattaria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('furiousness', 'camshaft')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eichhornia', 'Tyr')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ironing_board', 'disrepute')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bank_swallow', 'Smilax_aspera')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('skyway', 'extra_innings')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('concert_piano', 'muon')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Charlotte_Anna_Perkins_Gilman', 'Synercus_caffer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('eccentricity', 'capital_of_Swaziland')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hydrophidae', 'feather_bed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('weird_sister', 'invariant')
 (DEBUG) sap(), a == 31638
 (DEBUG) sap('inflatable_cushion', 'snacker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('chocolate_liquor', 'Algernon_Charles_Swinburne')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Emily_Dickinson', 'shine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gas_burner', 'plastics_industry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tooth_doctor', 'denaturant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Margarete_Gertrud_Zelle', 'steal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Tenthredinidae', 'Aspidistra_elatio')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('president', 'Mussolini')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('mailboat', 'Tsung_Dao_Lee')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('banister', 'genus_Pygopus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Myotis_leucifugus', 'septation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('old_maid', 'Kalapooian')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Fistulariidae', 'poke_milkweed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Aeolis', 'E._A._von_Willebrand')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wristlet', 'cylindricalness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('koine', 'naval_campaign')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Girl_Scout', 'spiegel_iron')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bling', 'Girl_Scout')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('civil_authority', '880_yards')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Hylophylax', 'love-song')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Henry_Watson_Fowler', 'physostegia')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('occipital_protuberance', 'subgenus_Pastor')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('os_frontale', 'basset_oboe')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('junkyard', 'gear_case')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('bawbee', 'syphilitic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lumber_jacket', 'false_mallow')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stemless_daisy', 'jenny_ass')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Gentianopsis_detonsa', 'molar_concentration')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('protactinium', 'Economic_and_Social_Council_commission')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crinoid', 'tightwad')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Santa_Fe', 'radioactive_iodine_test')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clatter', 'pacifier')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mademoiselle', 'Bronze_Star')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grizzle', 'tall_field_buttercup')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Irish_whiskey', 'series_circuit')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('William_Wordsworth', 'lambskin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('white_milkweed', 'Treasury_obligations')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deceit', 'Lathyrus_vernus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lob', 'knit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wild_sarsparilla', 'Hypericum_gentianoides')
 (DEBUG) sap(), a == 74067
 (DEBUG) sap('fluid_drachm', 'historical_record')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('calaba', 'Francoise-Athenais_de_Rochechouart')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('brake_pad', 'sand_reed')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lace', 'Sergei_Vasilievich_Rachmaninov')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('polysaccharide', 'easter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('boutonneuse_fever', 'extended_family')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('daystar', 'debris_surge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pleasing', 'Picea_pungens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Turkestan_Desert', 'Picea_orientalis')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('graduality', 'Helvella_sulcata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Cape_Verde', 'genus_Phyllostomus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mullus_auratus', 'genus_Anomalops')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bevel_square', 'Microsoft_disk_operating_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('night_vision', 'religious_movement')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Land', 'Brezhnev')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Henri_Matisse', 'George_Hubert_Wilkins')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('brassard', 'public_square')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('neuroanatomy', 'hawkbit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('open-end_investment_company', 'Alessandro_Manzoni')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('empirical_formula', 'chiropteran')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eric_Blair', 'Swiss_roll')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Bangladeshi_monetary_unit', 'Meade')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Laos', 'upland')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('jigsaw_puzzle', 'redbud')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('marmalade', 'personal_judgement')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('visceral_pericardium', 'extra_dividend')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Pseudomonas', 'laser_beam')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('horned_viper', 'ring_containment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lushness', 'talkie')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Callophis', 'Gardiner')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('calcium_phosphate', 'dental_caries')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Fast_of_Tammuz', 'genus_Malopterurus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('axone', 'hitchhiker')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('free_people', 'family_Tylenchidae')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Bitis', 'Monel_metal')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Lemuridae', 'checksum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('export_duty', 'preterition')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sapremia', 'Cannae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lymphocytic_choriomeningitis_virus', 'vegetable_hummingbird')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('gratitude', 'Elihu_Yale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zikkurat', 'Rudbeckia_hirta')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('FISA', 'firebrand')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pythoness', 'Chisinau')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('equivocation', 'loam')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('carboxyl', 'circulating_decimal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('safehold', 'vocational_education')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('racial_discrimination', 'saddleback')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('radar_dome', 'William_Herschel')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Tasman', 'tormentor')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Gnathostomata', 'giant_cane')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mishegaas', 'snake_polypody')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Yurak-Samoyed', 'owlet_moth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('woman's_clothing', 'suet_pudding')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('blood-oxygenation_level_dependent_functional_magnetic_resonance_imaging', 'plutonium_239')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('admirability', 'Villa_Hermosa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prison_chaplain', 'accusative')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tyrolean', 'hypothetical_creature')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cigar-box_cedar', 'greater_stitchwort')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Langley', 'parcelling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Woodsia_glabella', 'garishness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('urethral_sphincter', 'Tweedledee_and_Tweedledum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('magilp', 'place_of_birth')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('possum_haw', 'States'_Rights_Democratic_Party')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prurience', 'sumac_family')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('wood_meadowgrass', 'choice_of_words')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subfamily_Turdinae', 'Cryptobranchidae')
 (DEBUG) sap(), a == 39294
 (DEBUG) sap('triplet_code', 'pampas')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deep_kiss', 'silver-bush')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dichromatism', 'bus_terminal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Welsh_pony', '16')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scurry', 'disorganisation')
 (DEBUG) sap(), a == 28529
 (DEBUG) sap('amino_resin', 'pungency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('intellectual_nourishment', 'vasculitis')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('chabazite', 'bassine')
 (DEBUG) sap(), a == 53454
 (DEBUG) sap('Scott', 'family_Otididae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ransom', 'part_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('parrot_fever', 'ketoaciduria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Saddam_bin_Hussein_at-Takriti', 'leaf_fat')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('daylight', 'ethyl')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('temerity', 'genus_Echinops')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('back_room', 'Sabbatia_stellaris')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Arkansas_kingbird', 'soda_fountain')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('female_horse', 'misogyny')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glume', 'Kichai')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('squelch_circuit', 'gametogenesis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('oboist', 'Nystan')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('paramnesia', 'dauntlessness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('approving', 'fond_regard')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('beachhead', 'paraparesis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Proterochampsa', 'Lycopersicon_esculentum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('light_speed', 'Du_Bois')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('atomic_number_44', 'cheering')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('oldness', 'tandem')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Araneida', 'genus_Myrtus')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('thistledown', 'epistaxis')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Calvatia_gigantea', 'sour_bread')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Topeka', 'dissonance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stand', 'genus_Anomalops')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('sceneshifter', 'Orthodox_Judaism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hostility', 'bombing_run')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('mouse_button', 'Henry_V')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Channel_Island', 'checkered_daffodil')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Odontophorus', 'Central_African_Republic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Cantharellus', 'rock_gunnel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subject_field', 'carragheen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hogg', 'visual_defect')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ningal', 'Qin_dynasty')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Force_17', 'thrum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stockade', 'interrelatedness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hyperemia', 'diacetylmorphine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cockatoo_parrot', 'manufactory')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('family_Mayacaceae', 'dry-bulb_thermometer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pasture', 'forwardness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hoi_polloi', 'alto')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('epidemic_roseola', 'Mexican_beaded_lizard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('compote', 'Pavlov')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('diffuser', 'Bullfinch')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('good_health', 'sabicu')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('antic', 'pigwash')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('white-footed_mouse', 'sadness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Stenotomus_chrysops', 'ultraviolet_light')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tricyclic_antidepressant', 'commoner')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('lumber_room', 'Popular_Struggle_Front')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Virgin', 'blue_elder')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Arundinaria', 'attar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('overcapitalisation', 'trucker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('semester_hour', 'hemp')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('incendiarism', 'Richea_pandanifolia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('loop_gain', 'golden_oldie')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Sarraceniaceae', 'maintenance_man')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('psychological_condition', 'lady_palm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('foster-nurse', 'spray_paint')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('laundering', 'European_red_elder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clear', 'Krauthead')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('jangle', 'George_S._Kaufman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tarsius_syrichta', 'Leningrad')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('government', 'soil_horizon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basket_oak', 'false_hellebore')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('busman', 'decadency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sugar_sorghum', 'Hans_Arp')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('advantage', 'law_of_similarity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Teredo', 'Lynx_caracal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Anabas', 'chicory_plant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fictional_character', 'account_representative')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Mola', 'Nuptse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('aeromedicine', 'glauconite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sunray_pleat', 'genus_Parietaria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Scutellaria_lateriflora', 'Charronia_flavigula')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Sporobolus', 'Divine_Comedy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('plan_of_action', 'heedfulness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('scull', 'family_Trichechidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hunting_and_gathering_tribe', 'succus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('executive_program', 'Kantrex')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Received_Pronunciation', 'oxytetracycline_hydrochloride')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('frontal_cortex', 'foreign_country')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gossamer', 'air_bag')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('body_servant', 'PTO')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Chloranthus', 'Cyprinus')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('countershot', 'fascist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fathometer', 'Maracan_language')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lactobacillus_acidophilus', 'wind_tunnel')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Bulgaria', 'Great_Mendenhall_Glacier')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('John_Churchill', 'bigotry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('three-year-old_horse', 'tovarich')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Dermacentor_variabilis', 'Np')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('spitting', 'genus_Troglodytes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Arthur_John_Gielgud', 'boat_train')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Rodolia_cardinalis', 'dabbling_duck')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('amalgam', 'Tertiary')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('white-tailed_deer', 'extinguisher')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ramus', 'Gardenia_jasminoides')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('coca_plant', 'XX')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Dow-Jones_Industrial_Average', 'saprophyte')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('souk', 'Girondin')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Avignon', 'adapter')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('lean-to_tent', 'quartz_lamp')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('privy_council', 'schnitzel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dijon', 'rivetter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Nephelium_litchi', 'piperine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Trojan_horse', 'board_of_appeals')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap('coat_tree', 'cosmos')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hooking', 'Netscape')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('macula', 'melody')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('propagation', 'skink')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Prunus_nigra', 'manservant')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Gram', 'chess_piece')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Boston_rocker', 'sports_equipment')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('Doppler_effect', 'slowness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Urbana', '5-hydroxytryptamine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('6_June_1944', 'madnep')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cultivated_celery', 'rodeo_rider')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('pulse_generator', 'Hooker's_green')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ependyma', 'Hellespont')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('roguery', 'school_dictionary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('introject', 'crowberry_family')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('godlessness', 'maladroitness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Noctuidae', 'lagan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('baseball_manager', 'awnless_bromegrass')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('right_fielder', 'coccygeal_plexus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mikir-Meithei', 'Lake_Ladoga')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('patrimony', 'breakage')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Pete_Seeger', 'magnetic_resonance')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chamber_music', 'forensic_pathology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('call_forwarding', 'Spergula_arvensis')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cuirass', 'genus_Argiope')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hyperkalemia', 'January_19')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('semantic_memory', 'MiB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('umbel', 'backhoe')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('life_jacket', 'sunroof')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('bumph', 'police_constable')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dressage', 'Arachis_hypogaea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lock_washer', 'Hillary')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Huron', 'walloping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Marxist', 'Michael_Joe_Jackson')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('carboxylic_acid', 'adult-onset_diabetes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Minamata_Bay', 'Timor_Sea')
 (DEBUG) sap(), a == 25113
 (DEBUG) sap('atom_smasher', 'fast_buck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('perfect_pitch', 'genus_Phoenix')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('corn_chip', 'Bennett')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Corynebacterium', 'Equanil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Phalaenoptilus', 'aerie')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('virginal', 'pronominal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tying_up', 'cross_bit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lope_Felix_de_Vega_Carpio', 'Beta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('derris_root', 'telephone_exchange')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('confidence_trick', 'genus_Baphia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gastroesophageal_reflux', 'heat_lightning')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bill_Haley', 'hyperaemia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sergei_Diaghilev', 'governor_plum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('final_period', 'snake_venom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cotton', 'trichobezoar')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('inflater', 'puppy_fat')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Ella_Fitzgerald', 'compensating_balance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bigeye', 'kingfish')
 (DEBUG) sap(), a == 60032
 (DEBUG) sap('totterer', 'dependent_variable')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('toaster', 'goober_pea')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('vegetable_wax', 'olfactory_impairment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pentecostalism', 'Seville')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('red_salmon', 'baritone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('theater_ticket', 'intaglio_printing')
 (DEBUG) sap(), a == 81800
 (DEBUG) sap('Patrick_Victor_Martindale_White', 'Kepler's_first_law')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('intangibleness', 'Fraxinus_nigra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('medial_geniculate_body', 'grumbling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rosefish', 'sun_gear')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Blue_Ridge_Mountains', 'realgar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Chaetodipterus_faber', 'bubble_and_squeak')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('guava_bush', 'trefoil')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('dartboard', 'Diodora_apertura')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ternion', 'bugger')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('offence', 'police_station')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('granuloma_venereum', 'bastard_yellowwood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nathaniel_Bailey', 'Oncorhynchus_tshawytscha')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Christian_Dior', 'lender')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Geraniales', 'arachnophobia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('whitefly', 'corpus_delicti')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('socializer', 'floating_policy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Quaternary_period', 'genus_Loxoma')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gouverneur_Morris', 'hard_line')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Damascus_steel', 'Hawaiian_honeycreeper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Perognathus_flavus', 'Phthirus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lynx_rufus', 'genus_Pouteria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('balm', 'huck')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gaussmeter', 'Susquehanna_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('BS', 'Lake_Canandaigua')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Macroclemys', 'Ernesto_Guevara')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('barbu', 'DO')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('orrisroot', 'lookout_station')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('electrical_phenomenon', 'superior_colliculus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('local', 'codefendant')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('whiz-kid', 'sound_barrier')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sociopath', 'Oceanica')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Saxegothea', 'disgust')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('James_Hogg', 'genius_loci')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tallith', 'silver_lining')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bed_jacket', 'cranial_index')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Muslim_calendar', 'acquiescence')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('skyrocket', 'medical_record')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('rill', 'Leeuwenhoek')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fibreboard', 'Pauli_exclusion_principle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trigram', 'Uniate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('playback', 'Plectranthus_amboinicus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Hercules-club', 'Hynerpeton_bassetti')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Giacomo_Meyerbeer', 'Salome')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('philhellene', 'boo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blunt_file', 'fixed_costs')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hair_mousse', 'lutecium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lake_Malawi', 'nitrocellulose')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('SACEUR', 'nutmeg-yew')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Miro', 'witch's_brew')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('assault_and_battery', 'red_carpet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('labor_camp', 'Glen_Gebhard')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Robespierre', 'abwatt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fluorescein_isothiocyanate', 'adiposis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('T_hinge', 'straightedge')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('illusionist', 'tarweed')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Rotary_Club', 'heaviness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Fraxinus', 'Morrigu')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('nutation', 'Ann_Arbor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('brothel_keeper', 'Isospondyli')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('BJS', 'order_Lagomorpha')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Dalbergia', 'masses')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('exocrine', 'Nerita_peloronta')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('criminal_offense', 'steal')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('field-sequential_color_TV', 'arame')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('auto_manufacturer', 'Orycteropus')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('rivulus', 'officialese')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Reef', 'IDDM')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hatter', 'Hippocratic_oath')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sr', 'Zeno_of_Elea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Spizella_passerina', 'family_Lacertidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Monotropaceae', 'teacupful')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('oxyopia', 'family_Begoniaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hardihood', 'Troglodytes_aedon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trephine', 'sorbate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('First_Baron_Tennyson', 'Cypripedium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leging', 'Provence')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Galium_mollugo', 'Wolof')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('terrorist', 'stalagmite')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('service_elevator', 'Christmastide')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Euphrates_River', 'black_vomit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('salvage', 'creativity')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('New_Orleans', 'Oliver_Hardy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Artemisia_frigida', 'Nebuchadnezzar')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Diacalpa', 'chiropody')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hash_house', 'Christmas_tree')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('satinwood', 'Bavaria')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('acedia', 'Eolian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('can', 'class_Hyalospongiae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('literary_argument', 'Town')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vet', 'Auckland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('night_soil', 'chin-wag')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('glue', 'basket_weave')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fragile_fern', 'Urtica_pipulifera')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('materiality', 'moot')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Paradisaeidae', 'FSH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('copyholder', 'eighter_from_Decatur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('helleri', 'Ugo_Buoncompagni')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Cyrilla', 'rheology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('polisher', 'computer_simulation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('superordination', 'proficiency')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mayapple', 'schlepper')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('acetonemia', 'toddy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('torture', 'Tobias_George_Smollett')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dwarf_pocket_rat', 'cold_shoulder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('office_block', 'benthic_division')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('conchfish', 'trigeminus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stop_watch', 'Greenberg')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Vinca_rosea', 'rape_conviction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('William_Caxton', 'tarsal_gland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lobsterback', 'metaphysics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hardware', 'wild_plum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('trichotomy', 'vassalage')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dressed_ore', 'neuroleptic_agent')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Chennai', 'American_plan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('academicism', 'Galliformes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('citrus', 'chiffonier')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('zoning_board', 'Transportation')
 (DEBUG) sap(), a == 19382
 (DEBUG) sap('camelhair', 'wound')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('depth_gauge', 'ski_trail')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('scaphoid_bone', 'purple_osier')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('coonhound', 'strawberry_tomato')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Madia_sativa', 'bitt_pin')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Umbundu', 'ripcord')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Snead', 'finisher')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('frog's-bit', 'oarlock')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('potato_worm', 'hoopoe')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('Microscopium', 'bell_apple')
 (DEBUG) sap(), a == 56176
 (DEBUG) sap('Bosporus_Bridge', 'sentinel')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('science_fiction', 'malware')
 (DEBUG) sap(), a == 81800
 (DEBUG) sap('neighbourliness', 'Turkish_towel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dumbwaiter', 'thunk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('social_action', 'urogenital_cleft')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('warehouse', 'express')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('cwt', 'cherub')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('white_goods', 'Clive_Staples_Lewis')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sea_lamprey', 'genus_Aspalathus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('water_beetle', 'defoliation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('electronic_fetal_monitor', 'I.W.W.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fritz_W._Meissner', 'Knut_Hamsun')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('manilla', 'grey_snapper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('abstinent', 'Magnolia_acuminata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('screen_saver', 'bagman')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('mannerism', 'Second_Epistel_of_John')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cos_lettuce', 'parlor_grand')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('garage', 'hemoglobin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('IPV', 'Bali')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hockey_clinic', 'harmonic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('club', 'exegete')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('call_loan', 'Pallas_Athene')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tennis', 'Tuileries_Gardens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('caddis_fly', 'Girl_Scout')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('litter_lout', 'giant_chinkapin')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Acherontia', 'hiding_place')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('reproductive_structure', 'venture_capital')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anesthesiologist', 'expo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phase_of_the_moon', 'Populus_nigra_italica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Periploca', 'tansy-leaved_rocket')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Naseby', 'empyema')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Uropygi', 'substitution')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Stropharia', 'Fujiyama')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Membracidae', 'Calymmatobacterium_granulomatis')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('trailing_windmills', 'hairy_tongue')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('garnierite', 'Pythagoras')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('direct_mailer', 'kingdom_Fungi')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Alec_Guinness', 'mail_pouch')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('catechin', 'adder')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Hibiscus_farragei', 'seedling')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('process_cheese', 'Dorado')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('polar_front', 'wisecrack')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sportswoman', 'Gothic_architecture')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bonduc_tree', 'lexicography')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flash_lamp', 'firewheel_tree')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('potty', 'jasper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('semidiameter', 'forehead')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Sepia', 'bus_driver')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Caltha', 'cakewalk')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pleomorphism', 'apothecary's_shop')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('angiohemophilia', 'teeth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('false_nettle', 'impressment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bufo_canorus', 'Newari')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('transcendental_number', 'Baptisia_lactea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rebel', 'dialog')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deterrent_example', 'western_omelet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ring-stalked_fungus', 'mild_silver_protein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('collectible', 'genus_Argusianus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('interrogative_mood', 'kaolin')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('Sagittarius_serpentarius', 'capital_of_Mexico')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Yugoslavian_monetary_unit', 'isoflurane')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tea_cozy', 'tetroxide')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('point_of_departure', 'superlative')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('codling', 'threads')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('primary_health_care', 'epoxy_glue')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('Catherine_I', 'partitionist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Sir_John_Hawkins', 'whine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('potter_bee', 'ganoid_fish')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('Theodor_Schwann', 'Emberiza_hortulana')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Paphiopedilum', 'cryogen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('posy', 'polydactyly')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jeweled_headdress', 'Timor_Sea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('William_Pitt', 'cytoarchitecture')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Clitocybe_dealbata', 'grace_note')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('violent_death', 'family_Mytilidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('locust_pod', 'grammatical_rule')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('evaluation', 'locative_role')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('elaterid_beetle', 'UNIX_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('soft_market', 'IIS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('counterdemonstration', 'angstrom_unit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('deodar', 'Gustavus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Rostand', 'hatchling')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('banzai_attack', 'Kentucky_Derby')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('killifish', 'Reserve_Officers_Training_Corps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('revolutionism', 'corroborating_evidence')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('first_law_of_motion', 'Lord_Nelson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('enslavement', 'giro')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('orange_soda', 'Mikmaq')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Para_River', 'Caprimulgiformes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hit_squad', 'UPPP')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('freak', 'stock_ticker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('intestinal_juice', 'Senecio_aureus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('domino_effect', 'hornet')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('screwing', 'Daphne_mezereum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hole-in-the-wall', 'comedo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Drymarchon_corais_couperi', 'elbow_grease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chamomile', 'erythrite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pink_slip', 'pataca')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Mass.', 'juvenile_wart')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mesembryanthemum', 'Julius_Erving')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('padauk', 'genus_Spinacia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Graves', 'spiccato')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eastern_hemlock', 'feeling_of_movement')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hornpout', 'genus_Olfersia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('correlation_table', 'genus_Prionace')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Paschal_celery', 'fistfight')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Frank_Cooper', 'entreaty')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Book_of_Zephaniah', 'shrimp_Newburg')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zoospore', 'Jubbulpore')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Sailor_King', 'canary')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('hemorrhagic_cyst', 'gigot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Triops', 'walking_fern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hydrocele', 'unnaturalness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('shivering', 'toilet_bowl')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subclass_Acnidosporidia', 'animal_husbandry')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Assyrian_Akkadian', 'Gaius_Petronius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('production_line', 'tocainide')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('anxiolytic_drug', 'genus_Solidago')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wedge_shape', 'faucial_tonsil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('investment', 'terrorist_cell')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Andrea_Guarneri', 'pa')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('photo-offset_printing', 'licence')
 (DEBUG) sap(), a == 81800
 (DEBUG) sap('Blida', 'basket-handle_arch')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('perishable', 'knee_pants')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Republic_of_Venezuela', 'gasoline_tax')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('agrobiology', 'shellbark_hickory')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('food_web', 'manufacture')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Isopyrum', 'line_spectrum')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('genus_Neotoma', 'craftiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hairy_tare', 'CVA')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('index_number', 'genus_Arca')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('poliovirus_vaccine', 'Malcolmia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('extravagance', 'genus_Rhizoctinia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Samuel_Finley_Breese_Morse', 'mess_of_pottage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('relative-in-law', 'selectman')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('poison_bush', 'nullipara')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('rupestrine_plant', 'set_shot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('white_melilot', 'moronity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ragweed_pollen', 'diabolist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cuckoo's_nest', 'turtleneck_collar')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('water_vole', 'stenographer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('contriver', 'Mommsen')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Ralph_Richardson', 'Archeozoic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('little_brown_myotis', 'FSH')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('electric_toothbrush', 'Francois_Villon')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('summer_squash', 'plainchant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hydromancer', 'Signora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gloomy_Gus', 'Archer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Old_World_leishmaniasis', 'sou'easter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fossilization', 'Coregonus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bereavement', 'travelling_bag')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sir_Alexander_Korda', 'cellulose_ester')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('migratory_locust', 'Zea_mays_everta')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('People's_Mujahidin_of_Iran', 'potassium_bitartrate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('absorber', 'Orchis_mascula')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('juvenile_amaurotic_idiocy', 'compulsiveness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Exmoor', 'building_supply_store')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Lord's_Resistance_Army', 'flower_gardening')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shop_steward', 'toss_bombing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Republic_of_Fiji', 'Yuan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Zambia', 'pyralid')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('ticket_office', 'Lycaeon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('megohm', 'gastromy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('white_rice', 'carpentry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rockford', 'John_Muir')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('posterior_synechia', 'external_nasal_vein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plexus_cardiacus', 'Amanita_verna')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('esophagitis', 'pyrolysis')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Nintu', 'yellow-breasted_chat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clotheshorse', 'cantus_firmus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Gelechia', 'CER')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Linanthus_dianthiflorus', 'counterplay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('final_examination', 'sable_coat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contagious_abortion', 'Asvins')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chequing_account', 'hand_calculator')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('decriminalization', 'piezoelectric_crystal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('calcification', 'backhand_stroke')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Cancun', 'Kalmia_polifolia')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('warning_coloration', 'look')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('mortgage-backed_security', 'sequenator')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Qatar', 'Boselaphus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pincushion_flower', 'basic_principle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pestilence', 'intestinal_juice')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('eye_movement', 'Schrodinger_equation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dame_Myra_Hess', 'orange_liqueur')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('beginner', 'exploitation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adult_body', 'American_wistaria')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('laureate', 'striate_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('azido_radical', 'fungal_infection')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Muntz_metal', 'distinguishing_characteristic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('animalization', 'Kenneth_David_Kaunda')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Sidalcea_malviflora', 'masse_shot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('soybean_future', 'Ostwald')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('erica', 'order_Polemoniales')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deceit', 'stag's_garlic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('saturnism', 'banded_water_snake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Donato_di_Betto_Bardi', 'furnace_lining')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Isak_Dinesen', 'Chlamydera_nuchalis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Echeneididae', 'corn_liquor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Beijing_dialect', 'mediastinum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hydrilla', 'great_care')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('musical_notation', 'Shavous')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Acanthoscelides', 'spawn')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Cydonia', 'lecher')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mors', 'genus_Ophisaurus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Carlo_Goldoni', 'Samolus_floribundus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('city_desk', 'shadow_box')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('corkage', 'Boston_baked_beans')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trifluoromethane', 'bricklayer's_hammer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rima_vestibuli', 'interceptor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Chinese_silk_plant', 'besieging')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vienna_sausage', 'punctilio')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('indiction', 'patterned_advance')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bonaparte', 'sex_object')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Albert_Einstein', 'daredevil')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('accordionist', 'Rigil')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stride', 'Little_Lord_Fauntleroy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('interim', 'Dunkard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('passionateness', 'downy_wood_mint')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('atomic_number_37', 'christ')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('analysis_of_variance', 'breakfast_area')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chicken_stock', 'bettor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('majagua', 'family_Xyridaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Lasiocampa', 'Native_Hawaiian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mariposa_lily', 'Mellivora_capensis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('xerophilous_plant', 'Capreolus_capreolus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('foursome', 'daytime')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('rough-skinned_newt', 'angiospermous_tree')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('perpetual_motion_machine', 'cash_bar')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('genus_Fundulus', 'shoring')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bickering', 'public_convenience')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blue_catfish', 'anuran')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('wandflower', 'adenomyosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Snake_River', 'planthopper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('square_dancing', 'health_care_provider')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('first_law_of_motion', 'AFISR')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('entombment', 'rainy_day')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fugaciousness', 'admirer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spotted_cranesbill', 'brandy_nose')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('potency', 'genus_Cleome')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Chrysaora', 'burglar_alarm')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('interstitial_cell-stimulating_hormone', 'mental_faculty')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gamal_Abdel_Nasser', 'plexus_myentericus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('whole', 'mixed_metaphor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glide_path', 'genus_Pholistoma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Agalinis', 'monocarpic_plant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cronartium', 'state_bank')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('wedding', 'eating_house')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mizzen', 'Curacao')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('genus_Graptophyllum', 'home_ec')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Levisticum', 'hill_myna')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('foremother', 'Maimonides')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Okinawa', 'basket_spikemoss')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('third_gear', 'Zygoptera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lonicera_hirsuta', 'circumflex')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('place_of_business', 'Chameleon')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('monetary_resource', 'coelom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pintail', 'seizure')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eschaton', 'snake_eyes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('sweet', 'saleratus')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Hibiscus_farragei', 'sac_fungus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('chomping', 'sex')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Berne', 'Wolof')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ramadan', 'symbolic_logic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('anglophil', 'physiological_reaction')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Louis_the_Far', 'genus_Cerapteryx')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Alectoris_ruffa', 'liturgist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('calomel', 'fewness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('theta_wave', 'navigational_instrument')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gypsum_board', 'unwholesomeness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cornell', 'jerry-building')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('high-bush_blueberry', 'auditorium')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hair_spray', 'al-Gama'a_al-Islamiyya')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rejection', 'winter_savory')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('malware', 'quinacrine_hydrochloride')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bovine', 'green_snake')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('lacrosse_player', 'hot-rock_penstemon')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Foster', 'amp')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rupicapra', 'poppycock')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('andelmin', 'blindman's_bluff')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wood_hyacinth', 'Jacquinia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fast_of_Tammuz', 'English_people')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('canvasser', 'Spiranthes_porrifolia')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('record-breaker', 'genus_Galleria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('alyssum', 'Lagopus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cattail_family', 'modishness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chinquapin', 'genus_Truncocolumella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dipsosaurus', 'Larus_canus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pernis', 'hoummos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('algebraist', 'Mukden')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('two-dimensionality', 'flagon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('whoop', 'fair-trade_act')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('malocclusion', 'eosin')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('urban_planning', 'ice-cream_sundae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('military_press', 'fucoid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('square_dancing', 'visceral_pericardium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('frier', 'family_Lycoperdaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Phallales', 'battle_of_St_Mihiel')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('systema_nervosum', 'walkaway')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('myotonia_atrophica', 'grey_flounder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('encyclopedia', 'cyberculture')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Manichaeanism', 'latchkey')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('St._Peter', 'Lepiota_rhacodes')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('shoeful', 'antagonist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Podiceps', 'mortgage_deed')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sand_sage', 'Criminal_Investigation_Command')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('church_music', 'love-potion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('acicula', 'deliquium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('steady_state_theory', 'chalaza')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eastern_Malayo-Polynesian', 'hygienics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pineweed', 'flittering_scotoma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('priorship', 'towboat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('foamflower', 'Jiddah')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('tinsnips', 'Indian_rat_snake')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('nail_enamel', 'Vaisnavism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('polyose', 'Mikania_scandens')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('machine_stitch', 'convolution')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('literate', 'vena_sternocleidomastoidea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Terebella', 'Eustoma')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('propaganda', 'secret_plan')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Nobel', 'fondness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Pinnotheres', 'Piper_nigrum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('weekend_warrior', 'Cinchona_lancifolia')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('weasel_word', 'common_good')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sliding_keel', 'Oenothera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('woodgraining', 'Indian_banyan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rocket_salad', 'stabling')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sea_starwort', 'genus_Gempylus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('waxwork', 'goal_line')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('protoarchaeology', 'ectasia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('reset_button', 'whatchamacallit')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Zaharias', 'Icteria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mogul', 'moose-wood')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Pteropogon_humboltianum', 'Claes_Oldenburg')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Brama', 'periodontist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('metal_detector', 'info')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Helotiales', 'genus_Taraktogenos')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('Sabbatia_stellaris', 'fixed_star')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Stenotomus_chrysops', 'Rabi_II')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anemography', 'nucleolar_organizer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('farmer', 'flora')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('tubing', 'mintage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('winner's_circle', 'red_periwinkle')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Libocedrus_bidwillii', 'dead_mail')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('medication', 'yellow_adder's_tongue')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('indignity', 'EKG')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Saturnia', 'watershed')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('order_Pycnogonida', 'Minuit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('carpenteria', 'severable_contract')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Oenanthe_crocata', 'Pterocarpus_angolensis')
 (DEBUG) sap(), a == 61246
 (DEBUG) sap('legal_philosophy', 'citrange')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('abstract_thought', 'genus_Pogonia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('funeral_church', 'reactive_schizophrenia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('overmuch', 'rotary_converter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eupatorium_aya-pana', 'Central_Thai')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pea_green', 'Old_French')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('N'Djamena', 'Lathyrus_hirsutus')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('chestnut_blight', 'heifer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('buck_sergeant', 'yellowish_brown')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('white_rocket', 'inkblot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chasse', 'pointing_trowel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eichhornia_crassipes', 'tremolo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sledding', 'calf')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Totten_trust', 'downy_manzanita')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lanchow', 'Jesuits'_nut')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Lipchitz', 'Szilard')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('light_circuit', 'genus_Eburophyton')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('osseous_labyrinth', 'viral_hepatitis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plectrum', 'middle_thyroid_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('John_Walker', 'diabolism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Psilotales', 'trochlearis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('yoghurt', 'Heteromeles')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Republic_of_Mozambique', 'dideoxyinosine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('spinocerebellar_disorder', 'absorption_indicator')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dishonorableness', 'skin_diving')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('order_of_the_day', 'mercurial_ointment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('W.V.', 'transshipment_center')
 (DEBUG) sap(), a == 51894
 (DEBUG) sap('mop_handle', 'waste_paper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mooch', 'Bairava')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Red_China', 'melter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('life_imprisonment', 'haze')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('rowel', 'zooflagellate')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Tanach', 'Blissus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('La_Fontaine', 'Molucella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sang-froid', 'purl_stitch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('main_street', 'garden_centipede')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('leukoma', 'dais')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gastrocnemius_muscle', 'teleconferencing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cordia', 'proneness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Jasminum_mesnyi', 'LGV')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Thomas_Carew', 'depository_library')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('leucoma', 'cedar_elm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jahvey', 'Cryptobranchidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Nan_Ling', 'suppressive_fire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('panel_light', 'number_representation_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chaetognath', 'youthfulness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('round_of_golf', 'immanency')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Viburnum_dentatum', 'oil-rich_seed')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pubococcygeus_exercises', 'riata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('thermal_spring', 'test-cross')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sacrament', 'nonalignment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Homer_A._Thompson', 'assay-mark')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basketeer', 'koumiss')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('approximate_range', 'soft_option')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Lyman_Frank_Brown', 'storm_door')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Lusatian', 'exposure_therapy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('body_substance', 'genus_Struthio')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('woodcraft', 'shooting_lodge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Euphrates', 'Patagonia')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('linguica', 'derv')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('leaf_node', 'Klondike')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('high-bush_blueberry', 'kishke')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cryptotis', 'gram')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cholangitis', 'Fleming')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tolstoy', 'Brinell_number')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glass_fiber', 'binary_notation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('New_Netherland', 'sick_berth')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('fatwah', 'webworm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chaperon', 'yellow_squash')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('house-raising', 'mother_cell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('domino_effect', 'wall_pepper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('galanty_show', 'Apterygiformes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('late-night_hour', 'Penstemon_newberryi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slip_ring', 'Saussurea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('carbohydrate_loading', 'absolute_zero')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('roulette_wheel', 'wrong-site_surgery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('neurectomy', 'stenopterygius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('overburden', 'chapeau')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('deception', 'antitussive')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('William_Lloyd_Garrison', 'Gerbera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cucumber', 'Gabriel_Lippmann')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('air_pump', 'styloid_process')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('polythene', 'belligerent')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cocktail_table', 'Eruca_vesicaria_sativa')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stereoscopic_picture', 'chief_of_state')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fascia', 'Pr')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('loach', 'thrombocytosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ground_wave', 'order_Pseudomonadales')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('confidante', 'fantasm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hare's-foot_bristle_fern', 'wild_strawberry')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('swindle', 'mulligan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mastership', 'Plantae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('caravan_inn', 'Sukarno')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Georgi_Zhukov', 'agglutinin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hymn', 'bender')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('buffel_grass', 'Corsica')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('coding', 'neoteny')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('soy_flour', 'shittim')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('atonality', 'oyster_bar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('outrage', 'vomiter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('colobus', 'Vatican_Council')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('public_transport', 'organza')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('inheritor', 'iridescence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wireworm', 'petrissage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('experimenter', 'subduedness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('upper_limit', 'recovery')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crooked-stemmed_aster', 'Junin_virus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('scarlet_fritillary', 'Fatah')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Formicarius', 'iris_diaphragm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('apostasy', 'World_Wide_Web')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Qadhafi', 'tappet_wrench')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('argus', 'applied_mathematics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nasogastric_feeding', 'helium_group')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('contriteness', 'genus_Lactophrys')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('He', 'entrance_hall')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Vaccinium', 'Clyde_Tombaugh')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Afroasiatic_language', 'rum_nose')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('arteria_femoralis', 'Jeannette_Rankin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hard_cash', 'pye-dog')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('latanier', 'the_hots')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('townee', 'Hilbert')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('phonics', 'Lassen_Volcanic_National_Park')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('memorialization', 'Augsburg_Confession')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('AEC', 'Nicaraguan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fulmination', 'running_pop')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('firing_pin', 'personal_effects')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('free_central_placentation', 'lying-in')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('nerve_cell', 'Solingen')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Selaginella_lepidophylla', 'TV_reporter')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('family_Plasmodiophoraceae', 'logistic_support')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Capparis_mitchellii', 'countryfolk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Conte_Alessandro_Volta', 'Phyllostachys_bambusoides')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ergosterol', 'Haydn')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('vagueness', 'bolshy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('artistic_production', 'Laffer_curve')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('courtyard', 'yellow_light')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tying', 'feller')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ukase', 'proneness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Cassia_javonica', 'herder')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('year_of_grace', 'hot-air_balloon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('drawstring_bag', 'epididymitis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Phoeniculus', 'seedless_raisin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gila_Desert', 'arteria_vaginalis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Rhenish', 'how-do-you-do')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('amastia', 'cheesecake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mid-seventies', 'palfrey')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vibrator', 'fibre_bundle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('front_crawl', 'Ludi_Saeculares')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('ersatz', 'churchman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('amphibian_genus', 'fund')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('differential_analyzer', 'wave-particle_duality')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('white_snapdragon', 'wetting')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('muddiness', 'Callitris_endlicheri')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lens_cap', 'benedick')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('heart_and_soul', 'cephalometry')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Churchill', 'apartment_building')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('bigos', 'judgeship')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cebuella', 'syringa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('night_latch', 'family_Gadidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vena_basilica', 'learning_ability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grume', 'smithereens')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('career_girl', 'chiliast')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Snake_River', 'Centauria_calcitrapa')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Peninsular_Malaysia', 'Mylanta')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Lastreopsis', 'lumbar_vertebra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wild_spurge', 'Eolithic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sweet_lemon', 'selective_lipectomy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('endozoan', 'genus_Polydactylus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('protoplasm', 'death_adder')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('snowbell', 'detective_work')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cousteau', 'Gloomy_Dean')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('haziness', 'Antichrist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('impoverishment', 'wiliness')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('aculea', 'caller')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('autumn_sneezeweed', 'Frederick_North')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Citrus_reticulata', 'family_Tetranychidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sonneteer', 'granular_pearlite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('zwieback', 'Bachelor_of_Naval_Science')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sonora_lac', 'superior_epigastric_veins')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tussilago_farfara', 'anthrax_bacillus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Rafflesiaceae', 'flying_start')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sign', 'workpiece')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('calabash', 'metropolitan')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('family_Charadriidae', 'false_deathcap')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('personal_manner', 'pillwort')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zoomorphism', 'pontifex')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('state_of_grace', 'battle_of_Plassey')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dogwood', 'tons')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dyer's_weed', 'Siege_Perilous')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Japanese_beech', 'stratosphere')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('cola_nut', 'vena_basivertebralis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('abscess', 'speed')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Saccharum_munja', 'Bufo_calamita')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Anemone_Canadensis', 'Vulgar_Latin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Saint_Patrick's_Day', 'Beta_Centauri')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coolness', 'Tyto')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Burt', 'wobbler')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Angraecum', 'Strix')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('bundling', 'credit_system')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('food_stamp', 'sun_visor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('papal_nuncio', 'Polynesian_tattler')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('lander', 'absence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trained_nurse', 'hot_cross_bun')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hippeastrum', 'Makin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('irreligion', 'split_second')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('matman', 'Lespedeza_cuneata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Tinea_pellionella', 'lemonade_mix')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('touch_perception', 'tangent')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('public_domain', 'Valentina_Tereshkova')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Naja_hannah', 'altocumulus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lady_killer', 'Nardil')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Russian_capital', 'huntsman's_horns')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('goat_god', 'amiableness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Albino_Luciano', 'size')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('racetrack', 'extrication')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Trifolium_reflexum', 'precipitant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pressure-feed_lubricating_system', 'relaxer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Dutch-processed_cocoa', 'Oenothera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kickshaw', 'maiden_aunt')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bidder', 'impetuosity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nyctanassa', 'gastritis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chipmunk', 'Atriplex_mexicana')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cupful', 'person_hour')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('chromosomal_anomaly', 'auricular_point')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('June', 'Passeridae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Fistulariidae', 'Nephthytis_afzelii')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fourpenny_nail', 'underbelly')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('optic_cup', 'areaway')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Benoit_Mandelbrot', 'frugality')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('frigidness', 'Eugenio_Pacelli')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('tower_of_strength', 'lemon_juice')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('humanitarianism', 'Vargas_Llosa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('white_madder', 'antidiarrheal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sweating_sickness', 'preference')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('roc', 'staphylococcus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('listeria_meningitis', 'weight_gainer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spritzer', 'compact_disc_recordable')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('half_binding', 'common_carotid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Third_Epistel_of_John', 'adoptive_parent')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('demitasse', 'closed_loop')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('gumma', 'Balaenoptera_borealis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypertext_system', 'Land_of_Lincoln')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sociable', 'Kepler's_third_law')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('coatee', 'e')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subclass_Zoomastigina', 'levitation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_Barth', 'entertainment_deduction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shirt', 'haemophilia_B')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Blaise_Pascal', 'Paspalum_notatum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Dennstaedtia', 'iron-storage_disease')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Troglodytidae', 'air_rifle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('half-moon', 'spotted_Joe-Pye_weed')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Rose_Louise_Hovick', 'Rheum_cultorum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Tragulus', 'foreclosure')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crystalline_lens', 'tool')
 (DEBUG) sap(), a == 58144
 (DEBUG) sap('Kosteletzya', 'home_movie')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shortfin_mako', 'smooth_muscle_cell')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('godmother', 'infrigidation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('georgette', 'vinery')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('backseat', 'field_of_force')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Min_dialect', 'Trifolium_incarnatum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('container_ship', 'stretch_receptor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap(
Total: 0/8 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.02 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 09:34:23</td></tr>
        <tr><td>Raw Score</td><td>44.71 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#009900">PASSED</font>
Findbugs:     <font color="#990000">Potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#998000">16/35 tests passed</font>
Memory:       <font color="#993300">1/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#997B00">44.71%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 16:33 Outcast.java
-rw-r--r-- 1 4.6K Apr 30 16:33 SAP.java
-rw-r--r-- 1 8.6K Apr 30 16:33 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 16:33 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------

================================================================


% findbugs *.class
*-----------------------------------------------------------
M C NP_NULL_ON_SOME_PATH NP: Possible null pointer dereference of ? in WordNet.constructSynsets(String)  Dereferenced at WordNet.java:[line 59]
Warnings generated: 1

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph9.txt
==&gt; passed

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
==&gt; passed

Test 3: check length() and ancestor() on directed paths
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 4: check length() and ancestor() on directed cycles
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 5: check length() and ancestor() on complete graphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 6: check length() and ancestor() on tournament digraphs
  *  5
  *  10
  *  20
  *  50
==&gt; passed

Test 7: check length() and ancestor() on complete binary trees
  *  5
  *  10
  *  20
  *  50
  *  100
==&gt; passed

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
  *  10 vertices
  *  20 vertices
==&gt; passed

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
  *  10 vertices, 40 edges
  *  20 vertices, 100 edges
==&gt; passed

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
  *  digraph3.txt and digraph4.txt
  *  digraph5.txt and digraph6.txt
  *  digraph2.txt and digraph1.txt
==&gt; passed

Test 15: check whether SAP is immutable
  *  digraph1.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 3
     -  student length before = 2
     -  student length after  = 1
  *  digraph2.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 2
     -  student length before = 4
     -  student length after  = 1
  *  digraph3.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 1
     -  student length before = -1
     -  student length after  = 1
  *  digraph4.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 1
     -  student length before = 3
     -  student length after  = 1
  *  digraph5.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 1
     -  student length before = -1
     -  student length after  = 1
  *  digraph6.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 2
     -  student length before = 2
     -  student length after  = 1
  *  digraph-ambiguous-ancestor.txt
     -  after adding edges (v, 0) to G
     -  v = 0, w = 2
     -  student length before = 2
     -  student length after  = 1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = -1 1 4 6 10 11 
  *  v = 13 2 7 , w = 1 4 6 10 11 
  *  v = 2 7 , w = 13 1 4 6 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 6 of 100
     -  v = 43425 
     -  w = 51151 
     -  student   length() = 20
     -  reference length() = 18
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v = 27570 
     -  w = 4451 79030 
     -  student   length() = 12
     -  reference length() = 11
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 8 of 100
     -  v = 36135 60987 
     -  w = 7107 
     -  student   length() = 17
     -  reference length() = 13
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v = 53992 58198 
     -  w = 16732 42099 
     -  student   length() = 14
     -  reference length() = 13
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 2 of 100
     -  v = 22030 26387 67024 
     -  w size = 11
     -  student   length() = 14
     -  reference length() = 11
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v size = 11
     -  w = 1617 7150 39733 
     -  student   length() = 5
     -  reference length() = 4
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 1 to length()
     -  v = 1 11 12 16 19 
     -  w = 2 11 12 14 15 
     -  student   length() = 1
     -  reference length() = 0
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 6 to ancestor()
     -  v = 0 5 7 16 
     -  w = 4 10 11 15 
     -  student   ancestor = 4
     -  distance from v to 4 = 2
     -  distance from w to 4 = 0
     -  reference ancestor = 10
     -  reference length   = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 16/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
     -  failed on pair 1 of 1000
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testRandomDistance(TestWordNet.java:16)
     TestWordNet.test1(TestWordNet.java:88)
     TestWordNet.main(TestWordNet.java:744)

==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:96)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:97)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:98)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:99)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:100)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:101)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:102)
     TestWordNet.main(TestWordNet.java:745)

  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
     -  failed on pair 0
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testAllDistance(TestWordNet.java:55)
     TestWordNet.test2(TestWordNet.java:103)
     TestWordNet.main(TestWordNet.java:745)

==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt'Exception in thread "main" java.lang.NullPointerException
	at WordNet.constructSynsets(WordNet.java:59)
	at WordNet.&lt;init&gt;(WordNet.java:33)
	at TestWordNet.testRandomSAP(TestWordNet.java:166)
	at TestWordNet.test4(TestWordNet.java:245)
	at TestWordNet.main(TestWordNet.java:747)
, 'hypernyms100-subgraph.txt')
     -  failed on pair 1 of 1000
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testRandomDistance(TestWordNet.java:16)
     TestWordNet.test3(TestWordNet.java:112)
     TestWordNet.main(TestWordNet.java:746)

  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
     -  failed on pair 1 of 1000
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testRandomDistance(TestWordNet.java:16)
     TestWordNet.test3(TestWordNet.java:113)
     TestWordNet.main(TestWordNet.java:746)

  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
     -  failed on pair 1 of 1000
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TestWordNet.testRandomDistance(TestWordNet.java:16)
     TestWordNet.test3(TestWordNet.java:114)
     TestWordNet.main(TestWordNet.java:746)

==&gt; <font color="#990000"><b>FAILED</b></font>

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')


Total: 0/14 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
java.lang.NullPointerException
	at WordNet.constructSynsets(WordNet.java:59)
	at WordNet.&lt;init&gt;(WordNet.java:33)
	at MemoryOfWordNet.testMemory(MemoryOfWordNet.java:18)
	at MemoryOfWordNet.test1a(MemoryOfWordNet.java:46)
	at MemoryOfWordNet.main(MemoryOfWordNet.java:74)
java.lang.NullPointerException
	at WordNet.constructSynsets(WordNet.java:59)
	at WordNet.&lt;init&gt;(WordNet.java:33)
	at MemoryOfWordNet.testMemory(MemoryOfWordNet.java:18)
	at MemoryOfWordNet.test1b(MemoryOfWordNet.java:52)
	at MemoryOfWordNet.main(MemoryOfWordNet.java:75)
java.lang.NullPointerException
	at WordNet.constructSynsets(WordNet.java:59)
	at WordNet.&lt;init&gt;(WordNet.java:33)
	at MemoryOfWordNet.testMemory(MemoryOfWordNet.java:18)
	at MemoryOfWordNet.test1c(MemoryOfWordNet.java:58)
	at MemoryOfWordNet.main(MemoryOfWordNet.java:76)
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
==&gt; <font color="#990000"><b>FAILED</b></font>

Total: 0/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.00 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  734436.67
     -  student   solution calls per second:    4060.67
     -  reference / student ratio:               180.87

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  232379.33
     -  student   solution calls per second:    4328.00
     -  reference / student ratio:                53.69

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TimeWordNet.timeConstructor(TimeWordNet.java:94)
     TimeWordNet.test1(TimeWordNet.java:115)
     TimeWordNet.main(TimeWordNet.java:243)

==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
     java.lang.NullPointerException

     WordNet.constructSynsets(WordNet.java:59)
     WordNet.&lt;init&gt;(WordNet.java:33)
     TimeWordNet.test2(TimeWordNet.java:128)
     TimeWordNet.main(TimeWordNet.java:244)

==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
     java.lang.NullPointerException

     TimeWordNet.callsPerSecond(TimeWordNet.java:30)
     TimeWordNet.test3(TimeWordNet.java:163)
     TimeWordNet.main(TimeWordNet.java:245)

==&gt; <font color="#990000"><b>FAILED</b></font>

Test 4: timing isNoun() with random nouns
     java.lang.NullPointerException

     TimeWordNet.isNounCallsPerSecond(TimeWordNet.java:75)
     TimeWordNet.test4(TimeWordNet.java:218)
     TimeWordNet.main(TimeWordNet.java:246)

==&gt; <font color="#990000"><b>FAILED</b></font>

Total: 0/8 tests passed!

================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.03 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 09:25:37</td></tr>
        <tr><td>Raw Score</td><td>46.64 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#990000">FAILED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#995A00">13/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#998500">46.64%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 16:25 Outcast.java
-rw-r--r-- 1 4.5K Apr 30 16:25 SAP.java
-rw-r--r-- 1 8.6K Apr 30 16:25 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 16:25 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------
WordNet.java:57:57: Do not use the ternary conditional operator on Coursera programming assignments.
Checkstyle ends with 1 errors.

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
     -  failed on trial 2 of 169
     -  v = 2, w = 6
     -  student   length() = 0
     -  reference length() = -1
  *  digraph2.txt
     -  failed on trial 1 of 36
     -  v = 1, w = 5
     -  student   length() = 0
     -  reference length() = 2
  *  digraph3.txt
     -  failed on trial 1 of 225
     -  v = 10, w = 3
     -  student   length() = 0
     -  reference length() = -1
  *  digraph4.txt
     -  failed on trial 1 of 100
     -  v = 0, w = 3
     -  student   length() = 0
     -  reference length() = 5
  *  digraph5.txt
     -  failed on trial 2 of 484
     -  v = 5, w = 16
     -  student   length() = 0
     -  reference length() = -1
  *  digraph6.txt
     -  failed on trial 1 of 64
     -  v = 4, w = 0
     -  student   length() = 0
     -  reference length() = 4
  *  digraph9.txt
     -  failed on trial 2 of 81
     -  v = 4, w = 1
     -  student   length() = 0
     -  reference length() = 1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 19169, w = 50603
     -  student   length() = 0
     -  reference length() = 8
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3: check length() and ancestor() on directed paths
  *  5
     -  failed on trial 1 of 25
     -  v = 1, w = 0
     -  student   length() = 0
     -  reference length() = 2
  *  10
     -  failed on trial 1 of 100
     -  v = 1, w = 2
     -  student   length() = 0
     -  reference length() = 1
  *  20
     -  failed on trial 1 of 400
     -  v = 7, w = 18
     -  student   length() = 0
     -  reference length() = 1
  *  50
     -  failed on trial 1 of 2500
     -  v = 28, w = 30
     -  student   length() = 0
     -  reference length() = 1
  *  100
     -  failed on trial 1 of 10000
     -  v = 78, w = 98
     -  student   length() = 0
     -  reference length() = 6
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 4: check length() and ancestor() on directed cycles
  *  5
     -  failed on trial 1 of 25
     -  v = 1, w = 3
     -  student   length() = 0
     -  reference length() = 1
  *  10
     -  failed on trial 1 of 100
     -  v = 0, w = 8
     -  student   length() = 0
     -  reference length() = 5
  *  20
     -  failed on trial 2 of 400
     -  v = 17, w = 15
     -  student   length() = 0
     -  reference length() = 5
  *  50
     -  failed on trial 1 of 2500
     -  v = 44, w = 36
     -  student   length() = 0
     -  reference length() = 21
  *  100
     -  failed on trial 1 of 10000
     -  v = 65, w = 17
     -  student   length() = 0
     -  reference length() = 2
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: check length() and ancestor() on complete graphs
  *  5
     -  failed on trial 1 of 25
     -  v = 1, w = 2
     -  student   length() = 0
     -  reference length() = 1
  *  10
     -  failed on trial 1 of 100
     -  v = 4, w = 9
     -  student   length() = 0
     -  reference length() = 1
  *  20
     -  failed on trial 1 of 400
     -  v = 10, w = 14
     -  student   length() = 0
     -  reference length() = 1
  *  50
     -  failed on trial 1 of 2500
     -  v = 20, w = 11
     -  student   length() = 0
     -  reference length() = 1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 6: check length() and ancestor() on tournament digraphs
  *  5
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length() = 0
     -  reference length() = 1
  *  10
     -  failed on trial 1 of 100
     -  v = 3, w = 5
     -  student   length() = 0
     -  reference length() = 1
  *  20
     -  failed on trial 1 of 400
     -  v = 17, w = 15
     -  student   length() = 0
     -  reference length() = 1
  *  50
     -  failed on trial 1 of 2500
     -  v = 31, w = 43
     -  student   length() = 0
     -  reference length() = 1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check length() and ancestor() on complete binary trees
  *  5
     -  failed on trial 1 of 25
     -  v = 2, w = 4
     -  student   length() = 0
     -  reference length() = 2
  *  10
     -  failed on trial 1 of 100
     -  v = 5, w = 6
     -  student   length() = 0
     -  reference length() = 3
  *  20
     -  failed on trial 1 of 400
     -  v = 7, w = 1
     -  student   length() = 0
     -  reference length() = 2
  *  50
     -  failed on trial 1 of 2500
     -  v = 21, w = 31
     -  student   length() = 0
     -  reference length() = 5
  *  100
     -  failed on trial 1 of 10000
     -  v = 75, w = 16
     -  student   length() = 0
     -  reference length() = 11
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 1, w = 4
     -  student   length() = 0
     -  reference length() = 1
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 7, w = 2
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 10, w = 18
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length() = 0
     -  reference length() = 1
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 0, w = 5
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 13, w = 0
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 4
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 6, w = 0
     -  student   length() = 0
     -  reference length() = 1
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 12, w = 18
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
     -  failed on trial 1 of 25
     -  v = 4, w = 0
     -  student   length() = 0
     -  reference length() = 1
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 2 of 100
     -  v = 8, w = 3
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 2 of 400
     -  v = 19, w = 4
     -  student   length() = 0
     -  reference length() = 3
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
     -  failed on trial 1 of 25
     -  v = 1, w = 4
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 1 of 100
     -  v = 0, w = 3
     -  student   length() = 0
     -  reference length() = -1
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 1 of 400
     -  v = 9, w = 19
     -  student   length() = 0
     -  reference length() = -1
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 1, w = 3
     -  student   length() = 0
     -  reference length() = 1
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 7, w = 6
     -  student   length() = 0
     -  reference length() = 1
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 12, w = 19
     -  student   length() = 0
     -  reference length() = 2
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
     -  v = 0, w = 1
     -  (digraph1.txt) student   length() = 0
     -  (digraph1.txt) reference length() = 1
  *  digraph3.txt and digraph4.txt
     -  v = 0, w = 1
     -  (digraph3.txt) student   length() = 0
     -  (digraph3.txt) reference length() = -1
  *  digraph5.txt and digraph6.txt
     -  v = 0, w = 1
     -  (digraph5.txt) student   length() = 0
     -  (digraph5.txt) reference length() = -1
  *  digraph2.txt and digraph1.txt
     -  v = 0, w = 1
     -  (digraph2.txt) student   length() = 0
     -  (digraph2.txt) reference length() = 1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 3 4 6 , w = 5 7 8 10 12 
  *  v = 3 4 6 , w = -1 5 7 8 10 12 
  *  v = 13 3 4 6 , w = 5 7 8 10 12 
  *  v = 3 4 6 , w = 13 5 7 8 10 12 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 15 of 100
     -  v = 61260 
     -  w = 73490 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v = 81095 
     -  w = 14961 55059 
     -  student   length() = 16
     -  reference length() = 15
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 38975 52899 
     -  w = 79368 
     -  student   length() = 17
     -  reference length() = 16
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 13236 43504 
     -  w = 40808 42071 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 10187 75634 79198 
     -  w size = 11
     -  student   length() = 11
     -  reference length() = 6
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v size = 11
     -  w = 26514 67407 69904 
     -  student   length() = 10
     -  reference length() = 8
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 1 to length()
     -  v                  = 12
     -  w                  = 10
     -  student   length() = 0
     -  reference length() = 1
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 2 to ancestor()
     -  v = 1 5 9 16 
     -  w = 2 7 19 
     -  student   ancestor = 2
     -  distance from v to 2 = 2
     -  distance from w to 2 = 0
     -  reference ancestor = 19
     -  reference length   = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 3/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('torturing', 'Mach_number')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 1000
     -  nounA = torturing
     -  nounB = Mach_number
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 13
     -  reference distance() to 'abstraction abstract_entity' = 13
     -  actual distance to 'abstraction' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
 (DEBUG) sap('reductase', 'glutamic_oxalacetic_transaminase')
 (DEBUG) sap(), a == 16
 (DEBUG) sap('ribonuclease', 'aminopherase')
 (DEBUG) sap(), a == 89
 (DEBUG) sap('pacifier', 'casein')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('calcium_ion', 'simple_protein')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('streptodornase', 'albumin')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('aminopherase', 'clotting_factor')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('transferase', 'Hageman_factor')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('CRP', 'entity')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('Christmas_factor', 'immunoglobulin_E')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('antihaemophilic_globulin', 'Christmas_factor')
 (DEBUG) sap(), a == 11
     -  student returns invalid synset on pair 10 of 1000
     -  nounA = antihaemophilic_globulin
     -  nounB = Christmas_factor
     -  student   distance() = 2
     -  reference distance() = 2
     -  student   sap() = 'coagulation_factor'
     -  reference sap() = 'coagulation_factor clotting_factor'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
 (DEBUG) sap('cohune_oil', 'azo_radical')
 (DEBUG) sap(), a == 478
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = cohune_oil
     -  nounB = azo_radical
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
 (DEBUG) sap('nervus_saphenus', 'matchwood')
 (DEBUG) sap(), a == 612
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = nervus_saphenus
     -  nounB = matchwood
     -  student   distance() = 10
     -  reference distance() = 10
     -  student   sap() = 'part'
     -  reference sap() = 'part piece'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets3.txt, hypernyms3InvalidCycle.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle+Path.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:127)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:127)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:127)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:127)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Contopus_sordidulus', 'bill_of_exchange')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('handing_over', 'seraglio')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pit_viper', 'Centrosema')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('monolingual', 'one-ten-thousandth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fourth_of_July', 'Denis_Diderot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sand_dropseed', 'blackfoot_daisy')
 (DEBUG) sap(), a == 61246
     -  student sap() is too far to be a valid common ancestor when testing pair 18 of 100
     -  nounA = sand_dropseed
     -  nounB = blackfoot_daisy
     -  student   sap() = 'plant'
     -  reference sap() = 'plant flora plant_life'
     -  student   distance() = 9
     -  reference distance() to 'plant flora plant_life' = 9
     -  actual distance to 'plant' = -1
     -  failed on call 18 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Persian_walnut', 'deer_mouse')
 (DEBUG) sap(), a == 58166
     -  student sap() is too far to be a valid common ancestor when testing pair 2 of 100
     -  nounA = Persian_walnut
     -  nounB = deer_mouse
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 17
     -  reference distance() to 'organism being' = 17
     -  actual distance to 'organism' = -1
     -  failed on call 2 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('title_deed', 'gasoline_tank')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rorippa', 'toasting_fork')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trespasser', 'condylion')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wateriness', 'Acrilan')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 6 of 100
     -  nounA = wateriness
     -  nounB = Acrilan
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 15
     -  reference distance() to 'abstraction abstract_entity' = 15
     -  actual distance to 'abstraction' = -1
     -  failed on call 6 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347856 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 5000
 (DEBUG) words.size() == 7992
 (DEBUG) digraph.V() == 5000
 (DEBUG) digraph.E() == 5059
 (DEBUG) WordNet constructed
     -  student   memory = 4204328 bytes
     -  reference memory = 6071704 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 10000
 (DEBUG) words.size() == 19600
 (DEBUG) digraph.V() == 10000
 (DEBUG) digraph.E() == 10087
 (DEBUG) WordNet constructed
     -  student   memory = 9505832 bytes
     -  reference memory = 14092208 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.00 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  587974.00
     -  student   solution calls per second:    3806.00
     -  reference / student ratio:               154.49

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  162687.33
     -  student   solution calls per second:    4117.33
     -  reference / student ratio:                39.51

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
     -  student constructor time =  0.65 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('bit', 'byte')
 (DEBUG) sap(), a == 78703
 (DEBUG) sap('apple', 'orange')
 (DEBUG) sap(), a == 37179
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
 (DEBUG) sap('Nematocera', 'weaver's_broom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eastern_woodrat', 'unsuitability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('maxillary_vein', 'Louisianian')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('G._B._Shaw', 'Eusebius_of_Caesarea')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('postulate', 'Lawrence_Durrell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('antiaircraft', 'Arisaema_triphyllum')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Osmundaceae', 'variability')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('drab', 'systematics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pastil', 'clay')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Aquilegia_vulgaris', 'bed-wetting')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('counterexample', 'disbursal')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('batten', 'lipid-lowering_medicine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Rivina', 'Luminal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('infield', 'mouse_nest')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('brow', 'pollyfish')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('associative_aphasia', 'salter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('submarine', 'Beverly_Sills')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Dagda', 'aggro')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('electromagnet', 'blush_wine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('defence_mechanism', 'ensign')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('order_Siphonophora', 'airstrip')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hair_seal', 'tieback')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('volumeter', 'drill_steel')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('national_service', 'Cuban_spinach')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('life_buoy', 'Southern_Triangle')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('odiousness', 'old_man's_beard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Charles_Ringling', 'Turner')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('suborder_Ornithomimida', 'Bale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('solid_state', 'War_to_End_War')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dar_al-Islam', 'percentage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bedevilment', 'glochid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Zea', 'resort_hotel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pikestaff', 'governor_general')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('farthingale', 'Aegadean_Islands')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('bocce_ball', 'Alice_Hamilton')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('breaking_away', 'Limnocryptes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rule_of_cy_pres', 'roundtable')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('SSA', 'mph')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('larch_tree', 'capital_of_Guinea')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Khadafy', 'Xenopus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('American_smelt', 'conidium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('effendi', 'sarin')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Feynman', 'painted_tongue')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('clingfish', 'peg_top')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('golf_bag', 'manageability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('William_Byrd', 'amygdalin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('distilled_water', 'family_Morchellaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('singularity', 'common_daisy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Caucasia', 'finger')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('call', 'spearnose_bat')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('chow_mein', 'order_Pycnogonida')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Manx_cat', 'apocalypse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('peal', 'sodium_fluoride')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sulfanilamide', 'subphylum_Pentastomida')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hyla_crucifer', 'broadloom')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('survey', 'summit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cavity', 'Devonian_period')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('depositary', 'battle_group')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Selar', 'family_Cordaitaceae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('American_dog_tick', 'Svedberg')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('jackfruit', 'Derris_elliptica')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('swizzle_stick', 'Lovelace')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('nobody', 'muniments')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('conical_buoy', 'Dracunculus_vulgaris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vertical_section', 'Cotes_de_Provence')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('screeching', 'tricker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pillar_of_strength', 'Ionian')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('baseball_season', 'dedicated_file_server')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Muncie', 'genus_Cupressus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pussy's-paw', 'modal_auxiliary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('aquamarine', 'Imavate')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('internal_secretion', 'William_Dawes')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('regulatory_offense', 'brambling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Thomas_Hastings', 'Heterostraci')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lilium_longiflorum', 'Kurux')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kitchen', 'Cephalopterus_ornatus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('schoolmate', 'Bartholin's_gland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('natural_scientist', 'marsh_gas')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('one-sixth', 'analgesic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scarlet_runner_bean', 'Dendroica_striate')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Torreya', 'true_toad')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Goldsmith', 'Guadalupe_Mountains')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cookstove', 'grouse_whortleberry')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cognation', 'Caudine_Forks')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('subcompact_car', 'latency_stage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plate_glass', 'pliantness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('propaganda', 'Nung')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('tax_assessment', 'Lesquerella')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('press_release', 'trophotropism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bog_hemp', 'breakaxe')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('catananche', 'misogynism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('imaginary_part', 'genus_Difflugia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bison_bison', 'theory')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('corn_snake', 'synchrotron')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Cordaitaceae', 'sweater')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lee's_Birthday', 'offspring')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('masse_shot', 'American_cranberry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stinking_gladwyn', 'Appenzeller')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Attacapan', 'intuitive_feeling')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Fasciolidae', 'war_room')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('purposelessness', 'African_chameleon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flannel_bush', 'Ely_Culbertson')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('zombie_spirit', 'meat')
 (DEBUG) sap(), a == 31638
 (DEBUG) sap('white_blood_cell', 'reinforcement')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Last_Judgement', 'Lopholatilus_chamaeleonticeps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Salvadoran_capital', 'sanctum')
 (DEBUG) sap(), a == 21475
 (DEBUG) sap('LXXX', 'American_leishmaniasis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('decimal_number_system', 'Alosa_pseudoharengus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('President_Eisenhower', 'macer')
 (DEBUG) sap(), a == 70629
 (DEBUG) sap('Platylobium_formosum', 'ice_floe')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('shire_town', 'actual_eviction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('video_digitizing', 'rivulet')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stutterer', 'logic_element')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ordinary_care', 'yellow_giant_hyssop')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mugilidae', 'family_Chrysochloridae')
 (DEBUG) sap(), a == 39294
 (DEBUG) sap('Adriatic_Sea', 'Funafuti')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('peacock', 'Luxor')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('mym', 'slouch')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rail_fence', 'soybean_oil')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tobit', 'Solingen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lapidary', 'Women's_Army_Corps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('counterfactuality', 'just_deserts')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cruel_plant', 'Erythrocin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cabana', 'Hannover')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Dyaus', 'hooray')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cicatrix', 'chicken_provencale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Didion', 'rock_partridge')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ricegrass', 'Romanticism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rodent', 'egomaniac')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Vicia_sepium', 'boardroom')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('trinity', 'civet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('auto_manufacturer', 'hand_fern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jerusalem_Warriors', 'modem')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flurazepam_hydrochloride', 'multibank_holding_company')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Slezsko', 'iridoncus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('refocusing', 'Bastille_Day')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Indo-Aryan', 'Neanderthal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Richard_J._Roberts', 'mushy_peas')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('class_Musci', 'milliard')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('disqualification', 'pneumoconiosis')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('knowing', 'Latter-Day_Saint')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glare', 'Peter_Paul_Rubens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tyrannosaurus', 'savarin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Indian_hemp', 'crestless_wave')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('colouring_material', 'cedar_elm')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('zephyr', 'William_Bradford')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('holding', 'spreading_factor')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('earless_lizard', 'trifoliolate_leaf')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Percina_tanasi', 'saleratus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('turbinate', 'Desmanthus_ilinoensis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cape_Horn', 'permanent_magnet')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('yenta', 'plane_table')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('dwarf_chinquapin_oak', 'conger')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Orozco', 'Damaliscus_lunatus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('landlady', 'social_anthropologist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('nonconformism', 'decagon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Markoff_chain', 'sergeant-at-law')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Prunus_angustifolia', 'clock_face')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('friar', 'genus_Tamiasciurus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('employee', 'cassia-bark_tree')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Curb', 'Zurvan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('davit', 'Delonix')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Venetia', 'contract_law')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cycloloma_atriplicifolium', 'celioma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Epacridaceae', 'bed_cover')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nut_pine', 'vasopressin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sociology_department', 'Cirsium_arvense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('body_of_water', 'cameraman')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('patch_pocket', 'Bufo_debilis')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('atopic_dermatitis', 'Brugmansia_arborea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('American_white_pine', 'election_fraud')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rigmarole', 'firing')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('manna_grass', 'Yellowstone_National_Park')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('enjoyment', 'Victoria_Cross')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Siegfried', 'vertical')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ruction', 'two-piece_suit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zirconia', 'fly_in_the_ointment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Lavandula_stoechas', 'subfamily_Bassariscidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fez', 'inamorato')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('continental_shelf', 'eyepiece')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Calvin', 'miter_joint')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Blissus', 'fringe_benefit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Eucharist', 'Pallas_Athene')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('loquaciousness', 'planning')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('relapsing', 'child_support')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('peptisation', 'ZiB')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zoolatry', 'Shanghai_dialect')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('used-car', 'amphora')
 (DEBUG) sap(), a == 31616
 (DEBUG) sap('discomfiture', 'Pynchon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Peronospora_hyoscyami', 'unauthorized_absence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rain_date', 'building_supply_house')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surfboarder', 'jail_delivery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sprig', 'thyrsopteris')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('California_whipsnake', 'doubtfulness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Glenn_Hammond_Curtiss', 'Yezo')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('petrolatum', 'Gallinula')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Talmudic_literature', 'goldfish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hubel', 'Synoptic_Gospels')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Peristedion', 'past_perfect')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('oblique', 'New_River_Gorge_Bridge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trapezium_bone', 'oil_shale')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('prang', 'ship's_officer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('voracity', 'false_imprisonment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('summary_treatment', 'police_detective')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nympho', 'prolamine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('vocal_cord', 'wetback')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wrangle', 'yashmak')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tulostomaceae', 'Canella-alba')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hirundo_rustica', 'family_Anniellidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('axil', 'Canute_the_Great')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('immovable_bandage', 'Lise_Meitner')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('glottis_spuria', 'isopropanol')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Latium', 'pet')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('spaghetti_junction', 'foothold')
 (DEBUG) sap(), a == 51894
 (DEBUG) sap('ozonide', 'Neotoma_fuscipes')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Homer_Thompson', 'doc')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Darryl_Francis_Zanuck', 'scarlet_pimpernel')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('tagalong', 'drosky')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('invigilator', 'Rahu')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Microstomus_kitt', 'Geranium_maculatum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Gobi_Desert', 'wing_shooting')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('labor_pain', 'suspension_bridge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carduelis_flammea', 'perestroika')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chow_mein', 'danse_macabre')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('queen_post', 'international_organisation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('endorsement', 'slowness')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('parosamia', 'mnemonic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lamp_shade', 'presbyopia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gobi_Desert', 'chirrup')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('electric_catfish', 'factoid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('butyric_acid', 'Dipylon_gate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gown', 'gluten-free_diet')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('patrol_boat', 'shingle')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('harpoon_log', 'Menopon_gallinae')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Urticaceae', 'normal_fault')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chat_room', 'skittles')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tall_yellow-eye', 'sky_glow')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lycium_halimifolium', 'preservation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ballistic_trajectory', 're-introduction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gadolinium', 'sickness_benefit')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('crystal_oscillator', 'motor_neuron')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('peritonsillar_abscess', 'miracle_worker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anti-dumping_duty', 'soldering')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('livery_company', 'inessentiality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hydra', 'Colaptes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Landsmaal', 'scatter_rug')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grace', 'Katherine_Cornell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('figure_of_merit', 'suicide_mission')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lacrimator', 'prolapse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('MIT', 'Scientology')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('muscle_fibre', 'brachial_artery')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Nidulariaceae', 'glamorization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Oxyuridae', 'ice_skating')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('aerodynamic_lift', 'swatch')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('crammer', 'cylinder_press')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('talking_to', 'Dendrocalamus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('papovavirus', 'epididymis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('testiere', 'Lake_Michigan')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cattle_farm', 'nerve_tract')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tie', 'perfect_participle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stock-in-trade', 'black_humor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gateway', 'genus_Salvadora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cigarette_smoker', 'artificial_respiration')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bird's_nest', 'tuck_shop')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('housework', 'tea_towel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('exclusionary_rule', 'fundamental_quantity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('advocator', 'aventail')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('wolfman', 'Callas')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('podsolic_soil', 'sirloin_steak')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Cornish_fowl', 'dextroamphetamine_sulphate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('corchorus', 'Juncus_leseurii')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Lepidodendraceae', 'dyer's_weed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('political_movement', 'wye')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mankind', 'STD')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('anthelmintic', 'second')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Prumnopitys_ferruginea', 'Eryngium_yuccifolium')
 (DEBUG) sap(), a == 61246
 (DEBUG) sap('unnoticeableness', 'great_gross')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('annelid', 'veiling')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Epilobium_angustifolium', 'Japanese_cedar')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Chen', 'Stern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coordinating_conjunction', 'any-and-all_bid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sledding', 'add-in')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Saphar', 'relative_molecular_mass')
 (DEBUG) sap(), a == 41862
 (DEBUG) sap('stalwartness', 'tail_coat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('city_limits', 'amylum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Kahlua', 'scrapple')
 (DEBUG) sap(), a == 41004
 (DEBUG) sap('namelessness', 'pond_pine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('point_lace', 'saddle_of_lamb')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('appetizingness', 'translucence')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('monocarpic_plant', 'Tamias_striatus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('criminal_conversation', 'Demeter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hay', 'genus_Comandra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carduelis_carduelis', 'staining')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adobo', 'man_of_the_world')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tympani', 'abdominocentesis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('isohel', 'Muhammad_Ali_Jinnah')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lexis', 'thud')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('net_ball', 'John_C._Fremont')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('occident', 'resale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blackening', 'Christmas_holly')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('digger', 'Sukur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nothofagus_dombeyi', 'dome')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Bach', 'Bihar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('iniquity', 'inflammatory_disease')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('work_permit', 'mineral_water')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('water_boy', 'affirmation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rene_Descartes', 'jelly_bean')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Hercules'-clubs', 'Gehrig')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('checkpoint', 'skip_rope')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('local_time', 'Bitis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('muscle', 'monstera')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Pennatulidae', 'baulk-line')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('order_Myaceae', 'atomic_number_67')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Steller_sea_lion', 'homopteran')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('das', 'George_W._Bush')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('bender', 'common_touch')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Carapidae', 'Haifa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('reptilian', 'ben')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Pitymys', 'genus_Neomys')
 (DEBUG) sap(), a == 52887
 (DEBUG) sap('supermodel', 'Mahdism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bird_of_prey', 'epicyclic_gear_train')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('periodontia', 'tropopause')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dias', 'Gossypium_herbaceum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('scrapper', 'sand_flea')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Quercus', 'gatecrasher')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bound_morpheme', 'cochlea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tortfeasor', 'goalkeeper')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Peziza_domicilina', 'Pediculus_humanus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('emoticon', 'harquebus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coal_mine', 'lemon_cheese')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('thiazide', 'knout')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('banning-order', 'armature')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('English_concertina', 'Andrea_Palladio')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('waterwheel', 'Pimpinella_anisum')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('powder', 'bismuth')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('perspirer', 'riyal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('autostrada', 'salade')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('literalness', 'renal_calculus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bell_cot', 'teleconference')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vireonidae', 'Great_Barrier_Reef')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subcommittee', 'repellant')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('graveyard', 'antagonism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sabine_River', 'water_chute')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('socialisation', 'dart_thrower')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Anser_anser', 'Directorate_for_Inter-Services_Intelligence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('taking_into_custody', 'fare')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('blood_type', 'supremacist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Rudbeckia_hirta', 'diastrophism')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lanius_excubitor', 'Short's_aster')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Elizabeth_Cleghorn_Stevenson_Gaskell', 'streptobacillus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cords', 'seed_weevil')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('mouth_bow', 'Kerbela')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Kiwi', 'Ostraciidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Salt_Lake_City', 'Albert_Abraham_Michelson')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('knowledgeableness', 'genus_Photoblepharon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Trionyx_spiniferus', 'genus_Boykinia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('apache', 'I_Kings')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hiccough', 'journeying')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('iron-gray', 'twenty')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Bombacaceae', 'stairwell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('NUWC', 'Pipturus')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('order_Ganoidei', 'film_star')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cheapness', 'Hector_Hevodidbon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('beer', 'natural_philosophy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('observance', 'contraction')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('sea_change', 'order_Strigiformes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stone's_throw', 'buccaneering')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Will_Hays', 'genus_Bloomeria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shaggy_dog_story', 'upstairs')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('worrying', 'bivouac')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('solar_system', 'eluding')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ovibos', 'Gopherus_agassizii')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('visceral_pericardium', 'Asanga')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('evasive_answer', 'trestle_table')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sport', 'seduction')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('ridgil', 'jury_mast')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('guinea_hen', 'tatouay')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('objective_case', 'trackless_trolley')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('accommodating_IOL', 'camp_follower')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('claiming_race', 'fin_whale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('macrobiotic_diet', 'two-toed_anteater')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Norman_Mattoon_Thomas', 'breed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('verbiage', 'merrymaker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('major_diatonic_scale', 'greater_yellowlegs')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ball_nightshade', 'causal_agency')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('handstand', 'elongate_leaf')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tyne', 'gauffer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rummer', 'driftwood')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('deuteron', 'armoured_car')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ranch_house', 'pyelogram')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Amor', 'spastic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('writing', 'El_Cid')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('suffusion', 'drop_keel')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Kaopectate', 'Firth')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('pityriasis', 'arsenate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('codex', 'Henri_Louis_Bergson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('apodeme', 'proboscis_worm')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('waver', 'Squamata')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Limnos', 'buttonhole')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('aikido', 'horse_trading')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('appellant', 'safety_arch')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('anthrax', 'number_1')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('eros', 'exculpation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('norgestrel', 'waste_of_money')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sodium_chlorate', 'can_buoy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('toxic_shock', 'trail_bike')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_Cycadales', 'hairgrip')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fistfight', 'bar_printer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vonnegut', 'reefer')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Gaius_Plinius_Caecilius_Secundus', 'millenniumism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prostaglandin', 'thistle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('flare_path', 'Kiribati')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Fratercula_corniculata', 'genus_Phenacomys')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Odovakar', 'vitreous_humor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('copyholder', 'narghile')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('dental_school', 'marriage_brokerage')
 (DEBUG) sap(), a == 48401
 (DEBUG) sap('Roger_Williams', 'Edda')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('logical_argument', 'foster-mother')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ornithology', 'sebaceous_cyst')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Zizania_aquatica', 'umbrella')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('phoenix_tree', 'diesel_engine')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('droppings', 'diphenhydramine')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('partial_tone', 'Hystricomorpha')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('furtherance', 'White_Russian')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('Recent', 'floweret')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('keel_arch', 'Magha')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nanchang', 'half_note')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('establishmentarianism', '5-hitter')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('doubter', 'Hindu-Arabic_numeral')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hitting_average', 'plaster_of_Paris')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('cephalic_index', 'scurvy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('printing_operation', 'Spassky')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fearlessness', 'unsteadiness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('flashflood', 'succinic_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Hippoglossus_hippoglossus', 'Hare_Krishna')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Nike', 'genus_Sarcocystis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Rhyacotriton', 'Dardic_language')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('guest', 'pyroelectricity')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pyramidal_tract', 'sales_booth')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('psalmody', 'sighting')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('drawing_chalk', 'cytosine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Melopsittacus_undulatus', 'Antoine_Domino')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('roguery', 'ice_field')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hideyo_Noguchi', 'Tricholoma_venenata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('buffer', 'slicer')
 (DEBUG) sap(), a == 52497
 (DEBUG) sap('drippings', 'walnut_oil')
 (DEBUG) sap(), a == 37178
 (DEBUG) sap('tank', 'Ethiopian_monetary_unit')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('equal', 'army_attache')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Sanicula', 'ruggedization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('grammatical_case', 'anabolic_steroid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('strings', 'myrtle_bird')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Samuel_Langhorne_Clemens', 'viewer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('dance_music', 'family_Centriscidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('confit', 'snake_in_the_grass')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('how-d'ye-do', 'acre_inch')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('attache', 'logwood')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('neck', 'ballast_resistor')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('excerption', 'cascarilla_bark')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gem_clip', 'genus_Flindersia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('warrant', 'weakfish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bermuda_lily', 'lactalbumin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('trinitroglycerin', 'dog_house')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('nonesuch', 'barnacle_goose')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('chin_music', 'familiarisation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('antinomasia', 'orderly_sergeant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('political_action_committee', 'square_inch')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('abstemiousness', 'acousma')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('cosmic_microwave_background', 'subfamily_Garrulinae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leonhard_Euler', 'pug-dog')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('family_Erinaceidae', 'Cotopaxi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('micropaleontology', 'David_Hubel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Strophariaceae', 'vulgariser')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curse_word', 'Portunus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tagore', 'apocalypse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('schilling', 'Pithecanthropus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hugo_De_Vries', 'desirability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('intervertebral_disk', 'Balaenoptera_physalus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carolina_spring_beauty', 'Osmanthus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chablis', 'prodigy')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('bog_rosemary', 'cefuroxime')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('atomic_number_57', 'alcohol_radical')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bed_linen', 'Iva_xanthifolia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('oilstove', 'sense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('powder_monkey', 'genus_Pongo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Oxylebius', 'grandpa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('macaroni_salad', 'right_brain')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('signal', 'mortgage')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('immoderateness', 'black_knapweed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crab_apple', 'rare-earth_element')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('moderateness', 'appreciativeness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('mare's_tail', 'biodiversity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Amphiprion_percula', 'contradictory')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('incurability', 'Merthiolate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('parliamentary_procedure', 'Hypoxis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('alexia', 'gesneria_family')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('loot', 'methyl_group')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Spanish_mackerel', 'Paranthias_furcifer')
 (DEBUG) sap(), a == 60032
 (DEBUG) sap('Otaria_Byronia', 'sieva_bean')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('federal_savings_bank', 'Pieris')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('genus_Allionia', 'money_order')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('infantile_fixation', 'rigging')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('snake_feeder', 'Lorenz_Milton_Hart')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Popillia_japonica', 'libation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('neurasthenia', 're-experiencing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shower_cap', 'Hylactophryne_augusti')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('big-eyed_scad', 'breakdown')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Symphalangus', 'de_Sade')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('extract', 'grantee')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('articulation', 'dyers'_chamomile')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pay_as_you_earn', 'proper_name')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('plastic_laminate', 'pellet')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Dracula', 'playhouse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cardboard', 'pyrolysis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rusticity', 'hamburger_roll')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Northern_snow_bedstraw', 'matelote')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('vitals', 'igloo')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('noble_cane', 'medic')
 (DEBUG) sap(), a == 45813
 (DEBUG) sap('six-lined_racerunner', 'coolant_system')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('percussion_section', 'insomnia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('card', 'soupiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('low_frequency', 'broccoli')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plea_of_insanity', 'endothelial_myeloma')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('papyrus', 'Morlett's_crocodile')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('byroad', 'pine_mouse')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('queen_bee', 'Maracan_language')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Belleau_Wood', 'lapful')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hyssop_loosestrife', 'trustworthiness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('confidentiality', 'Irtysh')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wall_rue_spleenwort', 'family_Hemiramphidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ivory_tree', 'sporangiophore')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('alms_box', 'oxybutyric_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('guard_hair', 'role_model')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('homebuilder', 'near_miss')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cardiac_tamponade', 'black_marlin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('standpipe', 'anthem')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('natural_spring', 'blowball')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Limanda', 'Hartford_fern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('field_of_operations', 'watercolor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('John_Hanning_Speke', 'tramp')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('ledger', 'fire-raising')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('iron-gray', 'plasminogen_activator')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('manner_name', 'Leptopteris')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('milksop', 'bad_weather')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dictyosome', 'pretender')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Bombyliidae', 'cohune_oil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('physical_entity', 'whorled_caraway')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('greenshank', 'dancing-master')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('acromegaly', 'genus_Platanus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Livy', 'barbu')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('rhodolite', 'snow_job')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('nautilus', 'Kyzyl_Kum')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('advertorial', 'cracked-wheat_bread')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('half-truth', 'proturan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('centrum', 'von_Sternberg')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('necromancer', 'set-to')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('northernness', 'nut_grass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sweet_reseda', 'curbstone')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('HUA', 'power_service')
 (DEBUG) sap(), a == 71315
 (DEBUG) sap('drinking_glass', 'freesia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('roof', 'Caesalpinia_bonduc')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('epidemiologist', 'Eurylaimi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lechery', 'perissodactyl_mammal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Swinburne', 'caraway_seed')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('shoulder_vise', 'Niobrara_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('madrilene', 'dead_march')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Deltasone', 'puff_adder')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Curitiba', 'reaping_hook')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Scleranthus', 'horsemanship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('neologist', 'Audubon's_warbler')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('atmosphere', 'inferior_vocal_cord')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('creator', 'fold')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dika', 'tutor')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('minim', 'Indic')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('Rohypnol', 'Najd')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tax_liability', 'Communications_Security_Establishment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Balaena', 'chemist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('actinic_keratosis', 'marlinespike')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('DNA_polymerase', 'velvet-leaf')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('endaemonism', 'Nero')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tuna_oil', '2_Maccabees')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('basic_color', 'Panicum_virgatum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tallahassee', 'stroll')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('female_offspring', 'blessed_thistle')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Sambucus_nigra', 'Cabernet')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Eugene', 'Vepsian')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('flying_bridge', 'Karachi')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('mac', 'bow-wow')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('slipper_plant', 'sheepman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('sovietism', 'chorus_frog')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Thelonious_Sphere_Monk', 'vacation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('indigo_bird', 'hellbender')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('rope_yard', 'genus_Regulus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('long_distance', 'sex_gland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cheval-de-frise', 'Centrospermae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eliezer_Wiesel', 'Patellidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Planck's_law', 'big_spender')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('airspeed', 'gametocyte')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arteria_ileum', 'Elmer_Leopold_Rice')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bitter_almond', 'atomic_number_101')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('os_pubis', 'sext')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trespass_viet_armis', 'achromasia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('asynergia', 'alpha-lipoprotein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nanak', 'Dawson_River_salmon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('princess_feather', 'sword_dance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('McKim', 'scholiast')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Turdus_merula', 'china_cabinet')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Dubonnet', 'synthetic_heroin')
 (DEBUG) sap(), a == 36602
 (DEBUG) sap('horsepower-hour', 'caffeine_addict')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('breathing_spell', 'cock's_eggs')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sheep-tick', 'Heroica_Puebla_de_Zaragoza')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('genus_Lappula', 'smooth_woodsia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('motel_room', 'sequella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cusk', 'antacid')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('fowl_run', 'alpha-lipoprotein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('recitalist', 'gossip')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('beef_goulash', 'conjuration')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('milcher', 'Perca_flavescens')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('rain_barrel', 'Stagira')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('scrounger', 'Amanita_verna')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('lease_giver', 'standard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('verger', 'genus_Dusicyon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pet_sitter', 'signaling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ukase', 'Karloff')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leveling', 'Hess')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Lacerta', 'Acer_negundo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wholesale_price_index', 'anabiosis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('daredevil', 'paratyphoid_fever')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Iva', 'semicolon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('thelarche', 'pineal_eye')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hindu_Kush_Mountains', 'reciprocal_cross')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('neolith', 'lozenge')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('segregation', 'soft_roll')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Woolf', 'Heterocephalus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nuclear_resonance', 'genus_Centropristis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('benzene_nucleus', 'willow-pattern')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ARNG', 'Turkmen')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chicory_escarole', 'Reticulitermes_lucifugus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Bidens_trichosperma', 'gumdrop')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Trollius', 'sigmoid_flexure')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Cynipidae', 'hunting')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bristly_oxtongue', 'chemical_diabetes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('San_Andreas_Fault', 'fibroid')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('wall_rock', 'Chemical_Mace')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bar_magnet', 'botulinus_toxin')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('mooring_line', 'Asperula_tinctoria')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Geum_macrophyllum', 'polar_glacier')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Tappan_Zee_Bridge', 'gossip_columnist')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pyx_chest', 'geological_horizon')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('sword_lily', 'maxim')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('symbology', 'Saintpaulia_ionantha')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ds', 'poor')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sciatic_nerve', 'gri-gri')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('green_smut_fungus', 'worth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cervus', 'coeducation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Scomberesocidae', 'pommy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mikmaq', 'mountain_sumac')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('plyer', 'Blandfordia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dalton's_law_of_partial_pressures', 'guilloche')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phonological_system', 'overt_operation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('botanical_medicine', 'drifter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cooling_system', 'component')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('dwarf_blueberry', 'acne')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shadbush', 'saxhorn')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Bolivian_monetary_unit', 'Kerbela')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anthropology_department', 'overdraft_credit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('subordinate_word', 'anonymous_ftp')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('schoolmistress', 'plagiarism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Citrus_limon', 'sampling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bamboo', 'ready-to-wear')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('systematics', 'Araujia_sericofera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ilex_glabra', 'Henry_Cavendish')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('privatisation', 'Euphrosyne')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Hungarian_capital', 'marveller')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('San_Juan_Hill', 'major-league_team')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Alfred_Hitchcock', 'Tecumseh')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Richard_Buckminster_Fuller', 'hippopotamus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Dipodomys_phillipsii', 'Agricola')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ketohexose', 'necrobiosis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mandevilla_boliviensis', 'wicopy')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Seton', 'Shavuoth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Ciconia', 'diary_keeper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mirabilis_multiflora', 'Tomistoma_schlegeli')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('composing', 'Kupffer's_cell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('electronic_device', 'hoagy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('triplicity', 'money_supply')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('danger', 'pole_star')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fun', 'Silver_City')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dismissal', 'Canadian_Falls')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Danau', 'southern_spadefoot')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('anionic_detergent', 'Origen')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('family_Laricariidae', 'marmot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leigh', 'GHQ')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('doppelganger', 'patchwork_quilt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('law_court', 'center_fielder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mendel', 'prickly_pear_cactus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('hotspur', 'southern_flounder')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('underdrawers', 'slopshop')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('wind_deflection', 'historical_paper')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('noisomeness', 'doxycycline')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('civic_spirit', 'amateur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Nerodia', 'blacksmith')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('monitor_lizard', 'Moron')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Eburophyton', 'matrilineal_kin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Lophiidae', 'alternating_electric_current')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('extent', 'Netherlands')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('horsefish', 'extravaganza')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Robert_Van_de_Graaff', 'Georgi_Konstantinovich_Zhukov')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('bonemeal', 'nursing_home')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('railway_car', 'colpoxerosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Felis_concolor', 'Ouija_board')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('waggon', 'Prunus_persica_nectarina')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('preclusion', 'sinusoidal_projection')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vertical_file', 'cookery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Engraulidae', 'fat_hen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('National_Academy_of_Sciences', 'arbitration_clause')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bank_closing', 'boric_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('center_punch', 'passeriform_bird')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rum_nose', 'yellow_globe_lily')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hemorrhagic_septicemia', 'autograft')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Heyward', 'long_division')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('iconoscope', 'coercion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_cost', 'rates')
 (DEBUG) sap(), a == 62178
 (DEBUG) sap('civility', 'symphony')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('commercial_instrument', 'carancha')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blepharism', 'wariness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cannibalism', 'drill_site')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surrebuttal', 'cithern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Brussels_lace', 'hamburger_steak')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('metallic', 'adjustor')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sex_chromosome', 'benzoyl_peroxide')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('common_allamanda', 'shelterbelt')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('allograph', 'Aureomycin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bartholin's_gland', 'grogginess')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prime_number', 'NATO')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('proprionamide', 'Yahve')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Kalapuyan', 'moufflon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('78', 'bottlenose')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hunting_spider', 'pewit')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('fiduciary_relation', 'Leycesteria_formosa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tamandu', 'US_Fish_and_Wildlife_Service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Asheville', 'root')
 (DEBUG) sap(), a == 51894
 (DEBUG) sap('Rodrigo_Borgia', 'genus_Hipposideros')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('catalysis', 'pitch_shot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mistletoe_family', 'shooting_stick')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('small_voice', 'lesser_scaup_duck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bonnet_shark', 'radiator_hose')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('growth_factor', 'flipper')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('creatin', 'Indian_currant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Onosmodium', 'five-spot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('snapper', 'picosecond')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subfamily_Caesalpinioideae', 'thimbleweed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fetid_horehound', 'Finnish_monetary_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cervical_smear', 'genitor')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fuel_system', 'aniline')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('salinity', 'asparagus_pea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('snakebite', 'reason')
 (DEBUG) sap(), a == 31245
 (DEBUG) sap('first_law_of_thermodynamics', 'genus_Polybotria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ulysses_S._Grant', 'Florence_Nightingale')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('fence', 'Ipomoea_coccinea')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('thylacine', 'Spanish_dagger')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Lake_Baykal', 'blue_cohosh')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('order_Arales', 'genus_Geranium')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('genus_Cheilanthes', 'Perca_flavescens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lesser_panda', 'order_Loricata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('indie', 'cone')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Serax', 'ribwort')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('miscalculation', 'hero')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('family_Trombiculidae', 'standby')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chocolate_ice_cream', 'gunfire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chain_gang', 'pansy_orchid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('thinner', 'tompion')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Polystichum', 'tangelo_tree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mourning_dove', 'vena_brachialis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('helot', 'intoxicant')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('creating_by_mental_acts', 'Biloxi')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dust_contamination', 'Coeloglossum_viride')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('census_taker', 'winged_spindle_tree')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('scenarist', 'James_Abraham_Garfield')
 (DEBUG) sap(), a == 30891
 (DEBUG) sap('Alexandre_Yersin', 'Elops')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('black_bear', 'Tropic_of_Cancer')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('penny_grass', 'cussedness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Doroteo_Arango', 'genus_Acrostichum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('field_of_force', 'shnorrer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('choice_of_words', 'lecher')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Carissa', 'melena')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rainstorm', 'cellulose_xanthate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('San_Juan_Mountains', 'food_pyramid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sidelight', 'chemical_energy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('frankincense', 'Georgi_Zhukov')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('drill_master', 'Brassica_oleracea_gemmifera')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('New_York_State_Barge_Canal', 'carnauba')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Missippian_period', 'family_Corixidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('vouge', 'foramen_magnum')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('subfamily_Triglinae', 'sodium_chlorate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dickens', 'scentless_camomile')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('spinmeister', 'Defense_Technical_Information_Center')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ferret_badger', 'Ken.')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('bass_voice', 'amyotrophy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Samia', 'kV')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('purple_rock_brake', 'lady's_laces')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Jew_bush', 'securities_industry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Greater_Sunda_Islands', 'genus_Bomarea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('carriage', 'Trablous')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Zyrian', 'Orville_Wright')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Arctic_wolf', 'symmetricalness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sedge', 'family_Noctuidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('part_name', 'Tarbell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chlorophyll_a', 'inducing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('canaliculus', 'takeover_bid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tarantelle', 'Milky_Way_Galaxy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ploughland', 'Age_of_Reptiles')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fine-toothed_comb', 'flat-leaf_parsley')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('branchiopodan', 'unhealthfulness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gaultheria', 'episperm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('New_Zealand_Dacryberry', 'Tachyglossidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('paranoiac', 'attacker')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Felidae', 'fishing_season')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('party_girl', 'seniti')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sleeper_nest', 'Osmanthus_americanus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blastomycete', 'teething')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ketoacidosis-resistant_diabetes_mellitus', 'amphitheatre')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flour_mill', 'Glenn_Curtiss')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Carduelis_spinus', 'biteplate')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sponge_bag', 'Hippobosca_equina')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('umbrella_sedge', 'elephant's_ear')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Lombardia', 'petroleum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pellitory', 'diclofenac_sodium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('New_Wave', 'drugging')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bravo', 'swoop')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('stupid_person', 'diamondback_rattlesnake')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('yardman', 'Teleostei')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('schottische', 'upland')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fan_belt', 'appropriateness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Peruvian_mastic_tree', 'whitener')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bicorne', 'Bhaga')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('transmitting_aerial', 'Allium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('moratorium', 'Pressburg')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('credit_analyst', 'brown_lemming')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('mildew', 'nitrocellulose')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tzarina', 'Outer_Hebrides')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('eye_socket', 'papillon')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Euonymous_alatus', 'difflugia')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('family_Dromaeosauridae', 'mollusk_genus')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('elaphure', 'Goldberg')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Tapiridae', 'come')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pertainym', 'bicycle_rack')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hugo_von_Hoffmannsthal', 'Hexanchus_griseus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('suede_glove', 'black_spruce')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Emmy', 'jerk-off')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('love-potion', 'Bairdiella')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('vitamin_pill', 'spectrophotometer')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('dscDNA', 'saurischian')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('III_John', 'mean_solar_day')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dona', 'suborder_Sauria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tectaria_macrodonta', 'proposer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Hyemoschus', 'hiatal_hernia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fulcrum', 'Joseph_Paxton')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('eosinophile', 'blemish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('recording', 'change')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hymeneal', 'Eastern_Roman_Empire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ichor', 'mess_of_pottage')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('disservice', 'Japanese_wistaria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('propensity', 'wealthy_man')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('whole-word_method', 'Asiatic_black_bear')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cackle', 'Rhodesian_man')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('liliopsid', 'class_feeling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('maar', 'spore')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Paronychia', 'Harrisia')
 (DEBUG) sap(), a == 27763
 (DEBUG) sap('reindeer_lichen', 'headache')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('benzofuran', 'class_Pinopsida')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('indolence', 'epicene')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('experimenter', 'clerihew')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Weisshorn', 'free_verse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Kieslowski', 'unquestionability')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pebibyte', 'Parathelypteris_novae-boracensis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Godspeed', 'fox-trot')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('box_girder', 'draining_board')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('speech_production', 'fish-fly')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Rudbeckia', 'coping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_of_payment', 'lazy_Susan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Prunus', 'law_court')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('epanalepsis', 'Monrovia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('atomist_theory', 'manufactory')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Army_of_the_Confederacy', 'H._pylori')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('George_Pitt', 'recursive_routine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Christine_Marie_Evert', 'microbar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Scleroderma_citrinum', 'novillada')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Oswald_Spengler', 'genus_Salvinia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tummy', 'Salmonella_typhosa')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('James_Watson', 'Hungary')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fourth_dimension', 'chabazite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pencil_cedar', 'chromatin_granule')
 (DEBUG) sap(), a == 74082
 (DEBUG) sap('blue_jack', 'drippage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('azotaemia', 'reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Holmes', 'capric_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rightism', 'Cimex_lectularius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('St._Bruno', 'dullness')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('molecule', 'white_pages')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('manufacture', 'trichloroacetic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('female', 'Myxobacteriales')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('opera_glasses', 'primary_color')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Coropuna', 'Ficus_carica')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('generalissimo', 'immune_gamma_globulin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('life-of-man', 'MALS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Battle_of_Wake', 'Pongamia_glabra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stone_marten', 'uncloudedness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bezique', 'enculturation')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('genus_Hosta', 'English_Channel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('XOR_circuit', 'liquid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tyan_Shan', 'calabash')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('John_Scopes', 'adherence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Habacuc', 'dictionary_definition')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('Sir_Alfred_Charles_Bernard_Lovell', 'Gorgas')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Fast_of_Tevet', 'rocket_range')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deoxyribonucleic_acid', 'ether')
 (DEBUG) sap(), a == 31058
 (DEBUG) sap('pic', 'theatrical_poster')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('scarlet_lychnis', 'assembly_hall')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('total', 'shamelessness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('herbal_tea', 'Varna')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fishbowl', 'soccer')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Bruchidae', 'Boltzmann_distribution_law')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Kokka', 'sportswear')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tattletale', 'pipefitting')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Meitner', 'eye-lotion')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('philanthropist', 'Otus_sunia')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('olive-green', 'Al_Madinah')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('abohm', 'cerotic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('clonus', 'Revolutionary_Armed_Forces_of_Colombia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cloze_procedure', 'federal_agent')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sinusoidal_projection', 'Guglielmo_Marconi')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fabrication', 'petty_juror')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('whirlybird', 'iguanid')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Buccinidae', 'mesoderm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('impropriety', 'grouper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gaius_Caesar', 'genus_Elephantopus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slave_owner', 'Cretaceous')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gulf_of_Sidra', 'multiple')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sixteenth_part', 'dark_glasses')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('single-reed_woodwind', 'destitution')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ming_tree', 'umbrella_tree')
 (DEBUG) sap(), a == 81549
 (DEBUG) sap('Hook_of_Holland', 'Vaccinium_oxycoccus')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('goose-tansy', 'bellowing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subdominant', 'Howard_Robard_Hughes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('guarani', 'stockholder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('saveloy', 'costiasis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tracking', 'genus_Saiga')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ineluctability', 'dirt_bike')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('caldera', 'standing_wave')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Moor', 'Antlia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pain_pill', 'cypress_vine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Quercus_marilandica', 'Serbo-Croat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hammerstein', 'locket')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Ga', 'nongonococcal_urethritis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('penicillin-resistant_bacteria', 'Fernao_Magalhaes')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('trailer', 'jeweler's_loupe')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('temptress', 'lapping')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pigmentation', 'Para')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('parapodium', 'coagulation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chlamydia', 'Maleseet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('comprehension', 'loincloth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('SAS', 'Tourette's_syndrome')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('left_hander', 'spearpoint')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pyroxylin', 'kebab')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Leslie_Howard_Stainer', 'bubble_chamber')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Pomoxis', 'trial_court')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('credit_application', 'kafir')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hugo_Alvar_Henrik_Aalto', 'genus_Polydactylus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('true', 'Andromeda_galaxy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('water_hazard', 'Gracula_religiosa')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('tossed_salad', 'psychopharmacology')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('retroflexion', 'hem')
 (DEBUG) sap(), a == 79009
 (DEBUG) sap('needlenose_pliers', 'reindeer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Aristarchus', 'genus_Helichrysum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fog', 'kicker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('balanoposthitis', 'organ-grinder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('young_bird', 'spermicide')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('callithump', 'Cocus')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('wedding_chest', 'United_Society_of_Believers_in_Christ's_Second_Appearing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ceratopogon', 'signory')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Chrysanthemum_frutescens', 'greengage_plum')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('purple_orchis', 'Henry_Fonda')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('newton', 'lechwe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fumbler', 'veto')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cryptogrammataceae', 'AAVE')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('blackmail', 'R.I.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('babacu_oil', 'departure_tax')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('genus_Ovis', 'avarice')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('angstrom_unit', 'wear_and_tear')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('coddled_egg', 'calc-tufa')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('magpie', 'adduct')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Uranoscopidae', 'regular_hexahedron')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gleefulness', 'spymaster')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Francisco_Fernandez_de_Cordova', 'amoebiosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Clifford_trust', 'suction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('color_sergeant', 'staggered_board_of_directors')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('musculus_sphincter_pylori', 'Marrakesh')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Schopenhauer', 'fenestra_ovalis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('subpoena', 'light_bulb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Weber', 'beef_burrito')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Member_of_Parliament', 'Paxil')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Emberizidae', 'fringed_gecko')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('inhalation_anthrax', 'doubting_Thomas')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cowlick', 'Malaysian_Mujahidin_Group')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Thripidae', 'Retama')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('pavor_nocturnus', 'meshing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Little_Mo_Connolly', 'menopause')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cumulative_preferred_stock', 'snow_blower')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('police_squad', 'decomposition_reaction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mashie_niblick', 'peptic_ulceration')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('southern_cabbage_butterfly', 'Niger-Kordofanian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('haul', 'twice-pinnate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mid-on', 'Miltonia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gendarmerie', 'American_dog_violet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chlamyphorus', 'flashlight_fish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('saltbush', 'taipan')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('summer_flounder', 'Zinfandel')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('foreign_country', 'lattice')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Zamia', 'calibration')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chorioallantois', 'Taraxacum_officinale')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Bruchidae', 'tom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flea_bite', 'Halakah')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dacoit', 'rat-tail_file')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Brugmansia_sanguinea', 'unrest')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('handsaw_fish', 'firelighter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('binary_code', 'brocket')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grinning', 'householder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Entolomataceae', 'district_manager')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('abstract_art', 'employable')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('GCSE', 'mutchkin')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lese_majesty', 'surveillance_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cert', 'pry_bar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Cortinarius', 'wind_park')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lubrication', 'candelilla_wax')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Sargassum', 'breakstone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('low-fat_diet', 'Robert_Brown')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('seawall', 'low-bush_blueberry')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('leger_line', 'whale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('burying_ground', 'sounding_line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Trilisa_odoratissima', 'Campanula_americana')
 (DEBUG) sap(), a == 45813
 (DEBUG) sap('pentode', 'river_shad')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('chukka_boot', 'homogenization')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('typicality', 'Lilium_michiganense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('optical_lens', 'cinchona')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Loxostege_similalis', 'Foreign_Service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('weapons_system', 'Carlos_the_Jackal')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('drop_hammer', 'compact_disc_recordable')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('treasury_shares', 'Globicephala')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fringe', 'rough_water')
 (DEBUG) sap(), a == 60603
 (DEBUG) sap('Rostov_on_Don', 'blackwash')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mustard_gas', 'private_enterprise')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('storage_warehouse', 'Claude_Levi-Strauss')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('barbecue_sauce', 'cockfighting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wildflower', 'business_college')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fatigue_fracture', 'rug')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coronary_sinus', 'subfamily_Melinae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Pellaea', 'medication')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shag_rug', 'diploid')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Mother_Goose', 'centering')
 (DEBUG) sap(), a == 18721
 (DEBUG) sap('sidecar', 'Amelanchier_alnifolia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('coin', 'taste_bud')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('macadamia', 'swamp_red_oak')
 (DEBUG) sap(), a == 77641
 (DEBUG) sap('Anabrus_simplex', 'luminous_intensity_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('milkman', 'Copt')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('sexual_harassment', 'solleret')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Microhylidae', 'summation')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('New_World_least_weasel', 'Tuberaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gentianopsis_detonsa', 'fish_meal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mean_distance', 'swan-neck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Saint_Crispin', 'kudos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Zambian_monetary_unit', 'Delacroix')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('woolly_aphid', 'packaging_company')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sadness', 'Colorado_four_o'clock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('repellant', 'legateship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('comb_jelly', 'semiautomatic')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Dravidian', 'genus_Raphus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('grenadier', 'genus_Malopterurus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('brown_onion_sauce', 'family_Musophagidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Burnside', 'fire_blight')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('monetary_standard', 'Arvicola_amphibius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cranberry', 'point_of_apoapsis')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Dendroica_petechia', 'genus_Arisarum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('relegation', 'eight-spot')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('spatulate_leaf', 'swindler')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('attenuator', 'swallow-tailed_coat')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Blastocladia', 'Martin_Luther_King_Jr.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('potato_peelings', 'Dorothy_Parker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('weathercock', 'exam_paper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('recursive_definition', 'bolivar')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pleonasm', 'crested_swift')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Angus', 'togs')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hymnody', 'Permic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tribalization', 'foreshore')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Martin_Scorsese', 'Anton_van_Leuwenhoek')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('majorette', 'intricacy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hacienda', 'blennioid_fish')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ebbing', 'golosh')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Artur_Rubinstein', 'European_chestnut')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('yellow_bugle', 'guard_dog')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('templet', 'religious_writing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('conservation_of_parity', 'cypriniform_fish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Arethusa_bulbosa', 'Baptist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('garment_bag', 'Associate_in_Nursing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('uppercut', 'Serenoa')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('iron-gray', 'central_office')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vaccinium_angustifolium', 'overflow_incontinence')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('diploma', 'marrowfat_pea')
 (DEBUG) sap(), a == 38003
 (DE
Total: 0/8 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.04 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 09:07:52</td></tr>
        <tr><td>Raw Score</td><td>46.64 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#990000">FAILED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#995A00">13/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#998500">46.64%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 28K
-rw-r--r-- 1 1.3K Apr 30 16:08 Outcast.java
-rw-r--r-- 1 5.4K Apr 30 16:08 SAP.java
-rw-r--r-- 1 8.6K Apr 30 16:08 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 16:08 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------
WordNet.java:10:8: Unused import statement for 'edu.princeton.cs.algs4.StdIn'.
WordNet.java:16:13: Instance variable 'Index' should start with a lowercase letter and use camelCase.
WordNet.java:16:13: Variable 'Index' should be private.
WordNet.java:17:22: Instance variable 'Words' should start with a lowercase letter and use camelCase.
WordNet.java:17:22: Variable 'Words' should be private.
WordNet.java:30:5: Constructor definition in wrong order. The order should be [static variables, instance variables, constructors, methods].
WordNet.java:44:18: Method 'construct_synsets' should start with a lowercase letter and use camelCase.
WordNet.java:49:57: ')' is preceded with whitespace.
WordNet.java:58:57: Do not use the ternary conditional operator on Coursera programming assignments.
WordNet.java:74:18: Method 'construct_hypernyms' should start with a lowercase letter and use camelCase.
WordNet.java:143:32: Method 'get_ids_by_word' should start with a lowercase letter and use camelCase.
WordNet.java:183:25: Method 'should_throw_if_not_rooted_DAG' should start with a lowercase letter and use camelCase.
WordNet.java:183:57: '{' is not preceded with whitespace.
WordNet.java:188:52: ')' is preceded with whitespace.
WordNet.java:200:52: ')' is preceded with whitespace.
WordNet.java:209:25: Method 'should_throw_if_cycles' should start with a lowercase letter and use camelCase.
WordNet.java:209:49: '{' is not preceded with whitespace.
WordNet.java:214:52: ')' is preceded with whitespace.
WordNet.java:226:52: ')' is preceded with whitespace.
WordNet.java:235:25: Method 'should_ancestor_for_worm_and_bird' should start with a lowercase letter and use camelCase.
WordNet.java:235:60: '{' is not preceded with whitespace.
Checkstyle ends with 21 errors.

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
     -  failed on trial 1 of 169
     -  v = 3, w = 3
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 3
  *  digraph2.txt
     -  failed on trial 1 of 36
     -  v = 2, w = 0
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 0
  *  digraph3.txt
     -  failed on trial 1 of 225
     -  v = 7, w = 11
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  digraph4.txt
     -  failed on trial 1 of 100
     -  v = 0, w = 8
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  digraph5.txt
     -  failed on trial 2 of 484
     -  v = 10, w = 10
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 10
  *  digraph6.txt
     -  failed on trial 1 of 64
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  digraph9.txt
     -  failed on trial 1 of 81
     -  v = 1, w = 6
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 3
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 48507, w = 56321
     -  student   length   = -1
     -  reference length   = 21
     -  student   ancestor = -1
     -  reference ancestor = 60600
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3: check length() and ancestor() on directed paths
  *  5
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 1
  *  10
     -  failed on trial 1 of 100
     -  v = 9, w = 3
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 9
  *  20
     -  failed on trial 1 of 400
     -  v = 18, w = 7
     -  student   length   = -1
     -  reference length   = 8
     -  student   ancestor = -1
     -  reference ancestor = 18
  *  50
     -  failed on trial 1 of 2500
     -  v = 19, w = 36
     -  student   length   = -1
     -  reference length   = 39
     -  student   ancestor = -1
     -  reference ancestor = 36
  *  100
     -  failed on trial 1 of 10000
     -  v = 14, w = 89
     -  student   length   = -1
     -  reference length   = 62
     -  student   ancestor = -1
     -  reference ancestor = 89
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 4: check length() and ancestor() on directed cycles
  *  5
     -  failed on trial 1 of 25
     -  v = 1, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  10
     -  failed on trial 1 of 100
     -  v = 8, w = 8
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  20
     -  failed on trial 1 of 400
     -  v = 1, w = 5
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 1
  *  50
     -  failed on trial 1 of 2500
     -  v = 2, w = 7
     -  student   length   = -1
     -  reference length   = 18
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  100
     -  failed on trial 1 of 10000
     -  v = 35, w = 29
     -  student   length   = -1
     -  reference length   = 32
     -  student   ancestor = -1
     -  reference ancestor = 29
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: check length() and ancestor() on complete graphs
  *  5
     -  failed on trial 1 of 25
     -  v = 3, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
  *  10
     -  failed on trial 1 of 100
     -  v = 4, w = 9
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 9
  *  20
     -  failed on trial 1 of 400
     -  v = 10, w = 14
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 14
  *  50
     -  failed on trial 1 of 2500
     -  v = 20, w = 11
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 11
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 6: check length() and ancestor() on tournament digraphs
  *  5
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  10
     -  failed on trial 1 of 100
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 5
  *  20
     -  failed on trial 1 of 400
     -  v = 17, w = 15
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 17
  *  50
     -  failed on trial 1 of 2500
     -  v = 31, w = 43
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 31
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check length() and ancestor() on complete binary trees
  *  5
     -  failed on trial 1 of 25
     -  v = 2, w = 4
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 3
  *  10
     -  failed on trial 1 of 100
     -  v = 5, w = 6
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  20
     -  failed on trial 1 of 400
     -  v = 7, w = 1
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  50
     -  failed on trial 1 of 2500
     -  v = 21, w = 31
     -  student   length   = -1
     -  reference length   = 5
     -  student   ancestor = -1
     -  reference ancestor = 36
  *  100
     -  failed on trial 1 of 10000
     -  v = 75, w = 16
     -  student   length   = -1
     -  reference length   = 11
     -  student   ancestor = -1
     -  reference ancestor = 33
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 1, w = 4
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 7, w = 2
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 7
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 10, w = 18
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 10
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 0, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 6
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 13, w = 0
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 4
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 6, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 12, w = 18
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
     -  failed on trial 1 of 25
     -  v = 4, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 1 of 100
     -  v = 1, w = 1
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 1 of 400
     -  v = 16, w = 17
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 16
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
     -  failed on trial 2 of 25
     -  v = 4, w = 4
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 4 of 100
     -  v = 8, w = 7
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 8
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 6 of 400
     -  v = 17, w = 12
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 17
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 2
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 4, w = 4
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 5
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
     -  v = 0, w = 0
     -  (digraph1.txt) student   length() = -1
     -  (digraph1.txt) reference length() = 0
  *  digraph3.txt and digraph4.txt
     -  v = 0, w = 0
     -  (digraph3.txt) student   length() = -1
     -  (digraph3.txt) reference length() = 0
  *  digraph5.txt and digraph6.txt
     -  v = 0, w = 0
     -  (digraph5.txt) student   length() = -1
     -  (digraph5.txt) reference length() = 0
  *  digraph2.txt and digraph1.txt
     -  v = 0, w = 0
     -  (digraph2.txt) student   length() = -1
     -  (digraph2.txt) reference length() = 0
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 1 6 7 9 , w = 2 8 10 11 
  *  v = 1 6 7 9 , w = -1 2 8 10 11 
  *  v = 13 1 6 7 9 , w = 2 8 10 11 
  *  v = 1 6 7 9 , w = 13 2 8 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 12 of 100
     -  v = 61260 
     -  w = 73490 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v = 81095 
     -  w = 14961 55059 
     -  student   length() = 16
     -  reference length() = 15
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 38975 52899 
     -  w = 79368 
     -  student   length() = 17
     -  reference length() = 16
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 13236 43504 
     -  w = 40808 42071 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 10187 75634 79198 
     -  w size = 11
     -  student   length() = 11
     -  reference length() = 6
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v size = 11
     -  w = 26514 67407 69904 
     -  student   length() = 10
     -  reference length() = 8
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 1 to length()
     -  v                  = 12
     -  w                  = 10
     -  student   length() = -1
     -  reference length() = 1
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 2 to ancestor()
     -  v = 1 5 9 16 
     -  w = 2 7 19 
     -  student   ancestor = 2
     -  distance from v to 2 = 2
     -  distance from w to 2 = 0
     -  reference ancestor = 19
     -  reference length   = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 3/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('ale', 'Kerbala')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cutting_off', 'Synaptomys_cooperi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('editorialist', 'Parkersburg')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lebanese', 'preemie')
 (DEBUG) sap(), a == 60216
     -  student sap() is too far to be a valid common ancestor when testing pair 4 of 1000
     -  nounA = Lebanese
     -  nounB = preemie
     -  student   sap() = 'person'
     -  reference sap() = 'person individual someone somebody mortal soul'
     -  student   distance() = 9
     -  reference distance() to 'person individual someone somebody mortal soul' = 9
     -  actual distance to 'person' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
 (DEBUG) digraph.V() == 6
 (DEBUG) digraph.E() == 6
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 12
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) synsetIndexes.size() == 11
 (DEBUG) words.size() == 11
 (DEBUG) digraph.V() == 11
 (DEBUG) digraph.E() == 16
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 17
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 100
 (DEBUG) words.size() == 157
 (DEBUG) digraph.V() == 100
 (DEBUG) digraph.E() == 100
 (DEBUG) WordNet constructed
 (DEBUG) sap('whopper', 'factor_XI')
 (DEBUG) sap(), a == 15
 (DEBUG) sap('unit_cell', 'factor_II')
 (DEBUG) sap(), a == 93
     -  student returns invalid synset on pair 2 of 1000
     -  nounA = unit_cell
     -  nounB = factor_II
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 500
 (DEBUG) words.size() == 751
 (DEBUG) digraph.V() == 500
 (DEBUG) digraph.E() == 507
 (DEBUG) WordNet constructed
 (DEBUG) sap('oil_of_turpentine', 'polyunsaturated_fat')
 (DEBUG) sap(), a == 268
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = oil_of_turpentine
     -  nounB = polyunsaturated_fat
     -  student   distance() = 5
     -  reference distance() = 5
     -  student   sap() = 'lipid'
     -  reference sap() = 'lipid lipide lipoid'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
 (DEBUG) sap('secretase', 'sunflower-seed_oil')
 (DEBUG) sap(), a == 482
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = secretase
     -  nounB = sunflower-seed_oil
     -  student   distance() = 8
     -  reference distance() = 8
     -  student   sap() = 'macromolecule'
     -  reference sap() = 'macromolecule supermolecule'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets3.txt, hypernyms3InvalidCycle.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 3
 (DEBUG) words.size() == 3
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidTwoRoots.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle+Path.txt')
 (DEBUG) synsetIndexes.size() == 6
 (DEBUG) words.size() == 6
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:128)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) synsetIndexes.size() == 8
 (DEBUG) words.size() == 8
 (DEBUG) digraph.V() == 8
 (DEBUG) digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) synsetIndexes.size() == 15
 (DEBUG) words.size() == 15
 (DEBUG) digraph.V() == 15
 (DEBUG) digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('sweet_rocket', 'direct_primary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('investment_trust', 'lover')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chemical_weapon', 'Sudanese')
 (DEBUG) sap(), a == 81004
     -  student sap() is too far to be a valid common ancestor when testing pair 5 of 100
     -  nounA = chemical_weapon
     -  nounB = Sudanese
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 12
     -  reference distance() to 'whole unit' = 12
     -  actual distance to 'whole' = -1
     -  failed on call 5 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('verbalizer', 'rabbit_test')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fall-blooming_hydrangea', 'funeral_director')
 (DEBUG) sap(), a == 58166
     -  student sap() is too far to be a valid common ancestor when testing pair 5 of 100
     -  nounA = fall-blooming_hydrangea
     -  nounB = funeral_director
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 10
     -  reference distance() to 'organism being' = 10
     -  actual distance to 'organism' = -1
     -  failed on call 5 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('genus_Micromyx', 'deadening')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 100
     -  nounA = genus_Micromyx
     -  nounB = deadening
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 14
     -  reference distance() to 'abstraction abstract_entity' = 14
     -  actual distance to 'abstraction' = -1
     -  failed on call 1 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347848 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 1000
 (DEBUG) words.size() == 1664
 (DEBUG) digraph.V() == 1000
 (DEBUG) digraph.E() == 1008
 (DEBUG) WordNet constructed
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 5000
 (DEBUG) words.size() == 7992
 (DEBUG) digraph.V() == 5000
 (DEBUG) digraph.E() == 5059
 (DEBUG) WordNet constructed
     -  student   memory = 4204480 bytes
     -  reference memory = 6071352 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
 (DEBUG) synsetIndexes.size() == 10000
 (DEBUG) words.size() == 19600
 (DEBUG) digraph.V() == 10000
 (DEBUG) digraph.E() == 10087
 (DEBUG) WordNet constructed
     -  student   memory = 9505880 bytes
     -  reference memory = 14092208 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.00 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  749041.33
     -  student   solution calls per second:    4038.67
     -  reference / student ratio:               185.47

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  217610.67
     -  student   solution calls per second:    4307.33
     -  reference / student ratio:                50.52

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
     -  student constructor time =  0.59 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) synsetIndexes.size() == 82192
 (DEBUG) words.size() == 119188
 (DEBUG) digraph.V() == 82192
 (DEBUG) digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('bit', 'byte')
 (DEBUG) sap(), a == 78703
 (DEBUG) sap('apple', 'orange')
 (DEBUG) sap(), a == 37179
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
 (DEBUG) sap('nailer', 'food_color')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('St._George's', 'Osborne')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('obligato', 'chalcanthite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('paella', 'over-the-counter_medicine')
 (DEBUG) sap(), a == 74081
 (DEBUG) sap('Japanese_banana', 'miterwort')
 (DEBUG) sap(), a == 45813
 (DEBUG) sap('red_ginger', 'family_Microhylidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dent_corn', 'cotton_candy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gregorian_telescope', 'crone')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('impact', 'vat')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sanctimony', 'work_shift')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('transmission_system', 'Chironomidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('US_Military_Academy', 'cipher')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('eggar', 'Rumania')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Mongolian_monetary_unit', 'commonality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sticker', 'art_director')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Prunus_subcordata', 'Prunus_salicina')
 (DEBUG) sap(), a == 61510
 (DEBUG) sap('audience', 'interrupt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Achilles'_heel', 'Limax')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Entomostraca', 'skinny-dipper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Colo.', 'maturity-onset_diabetes_mellitus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ecclesiastical_law', 'filing_system')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('basketball_court', 'autoplasty')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('compartmentalization', 'box_office')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Hindi', 'wild_cranberry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Anastatica', 'rank_order')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sucking', 'pedagogy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tympanic_bone', 'Explorer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fifth_Crusade', 'junket')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Mikolaj_Kopernik', 'Adolph_Simon_Ochs')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('clingstone', 'Khmer_Rouge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Comte_de_Mirabeau', 'carcinoma_in_situ')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Alepisaurus', 'mistiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Edmund_Malone', 'cave_dweller')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('yearner', 'pike-perch')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Clement_Philibert_Leo_Delibes', 'smash_hit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Branta', 'equalitarianism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gulf_of_Akaba', 'Io')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Montmartre', 'capital_of_New_Hampshire')
 (DEBUG) sap(), a == 21475
 (DEBUG) sap('Beowulf', 'Bromus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('coping_stone', 'grist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('revivalism', 'Carangidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tamus_communis', 'tilling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tocology', 'muscle_spasm')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('Rimski-Korsakov', 'gross_margin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('atomic_number_90', 'Tiber')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sweet_flag', 'rebound_tenderness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Le_Chatelier-Braun_principle', 'genus_Crangon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('part-of-speech_tagger', 'Cleome')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sexcapade', 'family_Lycopodiaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lamper_eel', 'Kennewick')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('enzymologist', 'taichichuan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('palaeozoology', 'Duchenne's_muscular_dystrophy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Acacia_melanoxylon', 'Bolanci')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mithramycin', 'trilogy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('little_dictionary', 'sinus_transversus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('princewood', 'pastorate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('New_World_anteater', 'typist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('grass_roots', 'Sparganiaceae')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('inelegance', 'palaeontology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('querier', 'self-heal')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('polymorphism', 'city_room')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nitrogen_fixation', 'Monotremata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('barrage_fire', 'repast')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Archidiskidon', 'spoilation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('orphenadrine', 'dot')
 (DEBUG) sap(), a == 36602
 (DEBUG) sap('Oriental_Studies', 'folium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gush', 'crested_screamer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('seaside_scrub_oak', 'daisy_cutter')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rummy', 'instruction_execution')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('shooting_stick', 'urine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cichorium_endivia', 'moveable_feast')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chabad-Lubavitch', 'Prumnopitys_ferruginea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('great_grey_kangaroo', 'detonating_device')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('table-tennis_table', 'philadelphus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('mocker', 'occupational_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trophobiosis', 'paperclip')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sampling_rate', 'Cycliophora')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('float', 'past_progressive_tense')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('alert', 'courlan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Klamath', 'Bemidji')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sparganium', 'Pretoria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flowering_maple', 'Ignace_Paderewski')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('militancy', 'Kentucy_blue_grass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AMP', 'safety_feature')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('local_anaesthesia', 'Fagus_americana')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Ammodytes', 'squirrel's-foot_fern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('East_Germanic_language', 'malicious_gossip')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('silver_wattle', 'tessella')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('largemouth_bass', 'witch')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lesser_rorqual', 'Jurassic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('manual_dexterity', 'travel_agency')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bulgarian_capital', 'cable's_length')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('habanera', 'biological_clock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pane', 'stochasticity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Great_Victoria_Desert', 'insect_repellant')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('specific', 'ELF')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('spur_track', 'tidewater_river')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cover-up', 'Durer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Harpullia_cupanioides', 'Chlorophthalmidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('linoleum_cutter', 'Chittagong')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('lithia_water', 'central_scotoma')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('capital_of_Iceland', 'Benzoin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('southern_cabbage_butterfly', 'decoding')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deck_chair', 'religiousness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zero_tolerance', 'patternmaker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nitrous_acid', 'kinesthesia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Adiantaceae', 'sunshine')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gnetum', 'hamburger_bun')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Glaucomys', 'monocot_family')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('Pyridium', 'Napoleon')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Cajanus_cajan', 'nautical_signal_flag')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('monoplane', 'genus_Angelica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Streptomyces_scabies', 'family_Uranoscopidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tetrasporangium', 'battle_of_Tannenberg')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mental_process', 'official_emissary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leningrad', 'Booker_T._Washington')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('frier', 'feigning')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Notostraca', 'Brusa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lemon_drop', 'method_acting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Roman_candle', 'watt-hour')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('IX', 'Hangzhou_Bay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mummery', 'mealy_sage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scarlet_hamelia', 'spinach_blight')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('William_Shakespeare', 'suppository')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Aegypius_monachus', 'beneficiation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('eaves', 'squash_pie')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mount_Etna', 'speaking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('briskness', 'straining')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('seediness', 'reverberation')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('arson', 'undergrad')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Akeridae', 'rush-grass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('enlarger', 'wristwatch')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('wallet', 'Alcoholics_Anonymous')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Day_of_Judgment', 'Abukir_Bay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Abkhazian', 'deanship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('red_lead', 'company_union')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('vibrato', 'Francis_Beaumont')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cinder', 'Norman_Conquest')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('macrocytic_anaemia', 'variety_meat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Coelophysis', 'umbrella')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ichthyology', 'alkene')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('suslik', 'family_Xenopodidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('venule', 'genus_Sepia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tanga', 'Carcharinus_longimanus')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('aimlessness', 'dynast')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Landsmaal', 'pennyroyal_oil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('suburban_area', 'farm_worker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('scaffold', 'onion_louse')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('same-sex_marriage', 'algorithmic_language')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Sudafed', 'American_magpie')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Tinamidae', 'bulldozer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dama_dama', 'double_refraction')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('suckling_reflex', 'eye_bank')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('standard_time', 'acid-base_balance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bamboo_shoot', 'sixth_sense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bunion', 'mascarene_grass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('German_police_dog', 'common_calamint')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('military_drill', 'mushiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('screw_propeller', 'thyrotrophic_hormone')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Parnahiba', 'covering_letter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('autobahn', 'confectionary')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('whatchamacallum', 'chiropractor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('timpanist', 'OTC_stock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('poor_person', 'Gymnophiona')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surface_tension', 'observer's_meridian')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gram's_stain', 'citrous_fruit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sac_fungus', 'President_Kennedy')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('skiffle_group', 'oldness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bissextile_year', 'wall_pepper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mental_disorder', 'leaf-nosed_bat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pungapung', 'Vanellus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('aroid', 'Helxine_soleirolia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prognosis', 'ragsorter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slater', 'footstool')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('free_press', 'ai')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Ginkgo', 'Hudson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('monkey_bread', 'marsh_tea')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('date_bread', 'mitzvah')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Costanoan', 'amyl')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ginger', 'Vega')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('schooltime', 'hypertensive')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('guidance_device', 'bioarm')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('Japan', 'impramine_hydrochloride')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('spike_oil', 'booker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dowser', 'crucible_steel')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bell_buoy', 'speaker_identification')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Secretary_of_Commerce', 'regular_payment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('base_pair', 'benniseed')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Rachel_Carson', 'genus_Conium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deprivation', 'tutorship')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Hilo', 'sequin')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('saxist', 'arthroplasty')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('papulovesicle', 'wall_germander')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Queckenstedt's_test', 'pie-dog')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Guiana', 'agnation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('virtual_memory', 'buckram')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('fecal_impaction', 'Bassia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('res_judicata', 'orthodontia')
 (DEBUG) sap(), a == 31638
 (DEBUG) sap('Masai', 'news_report')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('dak', 'tenpin_bowling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Directorate_for_Inter-Services_Intelligence', 'vampire')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Mongol', 'ice_axe')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('dermoid_cyst', 'family_Cetorhinidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('marsupial_mouse', 'Romberg')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('disengagement', 'marathon_runner')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contrafagotto', 'drinking')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tympanuchus_cupido', 'respiratory_tract')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('grey_partridge', 'intruder')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('chemical_change', 'archimandrite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('neonatology', 'pinkness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hypernatremia', 'battle_of_Minden')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('essayer', 'purifier')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('black_rot', 'siskin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('micro_chip', 'Rebekah')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lute', 'Anthriscus_sylvestris')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('observer', 'judicial_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('infield', 'Supermex')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('circumflex_vein', 'extracapsular_surgery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('portiere', 'periodic_event')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slate_club', 'muumuu')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('airburst', 'Fomor')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('feedback_loop', 'umber')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ellipsis', 'secondary_cell')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Stylophorum', 'Salome')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('winter_cress', 'Kendal_green')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('prion', 'contradictory')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Monochamus', 'rhythmicity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('banking_concern', 'botulismotoxin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bentonite', 'Satureia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('beachhead', 'Ouse')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('close', 'steelworks')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('logical_argument', 'merriment')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('court_of_justice', 'foothold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('naboom', 'omphalus')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Kingdom_of_Sweden', 'Egyptian_monetary_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Neohygrophorus', 'family_Dipterocarpaceae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('American_spicebush', 'golden_larch')
 (DEBUG) sap(), a == 81549
 (DEBUG) sap('Nevada', 'exoskeleton')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('electromagnetism', 'touchdown')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('black_locust', 'back-blast')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('incidence', 'family_Tilletiaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ficus_aurea', 'constitution')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('throw', 'Maricopa')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sniff', 'diplegia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dual_inline_package_switch', 'Alnico')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('repository', 'abstractionism')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('poker_face', 'ridgeline')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('string_quartette', 'argentine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cigarette_lighter', 'north-seeking_pole')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('deflagration', 'panic_button')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wall_barley', 'mineral_deficiency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Immigration_and_Naturalization_Service', 'bachelor's_button')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ready-made', 'phalangist')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Appalachian_Mountains', 'red_periwinkle')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('order_Hymenoptera', 'Vincent's_infection')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('swagger', 'toffee')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('iodide', 'pyx')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Maxim_gun', 'Dacrydium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grapple', 'Boletus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jacquard', 'acorn_barnacle')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Pritzelago', 'multiplicity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Verpa_bohemica', 'juniper_bush')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('foothill', 'Nestorius')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('command_processing_overhead_time', 'air_force_academy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('white_dwarf_star', 'Sir_Alexander_Korda')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('dolphin_kick', 'trophozoite')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('meshuggeneh', 'badlands')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('billiard_hall', 'androgenic_hormone')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Muller', 'earthnut_pea')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('willow_aster', 'edible-pod_pea')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('vena_rectalis', 'Hurler's_syndrome')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Muntingia', 'Acorus')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('stone_root', 'firedog')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Laurasia', 'purple_saxifrage')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('poliovirus_vaccine', 'Hottonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('frightening', 'Frenchman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phytotoxin', 'Picea_sitchensis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rock_brake', 'Jambos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gondoliere', 'rearview_mirror')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('crystal_pickup', 'coverage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Japanese_spurge', 'Arkansas_kingbird')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Ginkgoaceae', 'Abramis')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('coral', 'latchstring')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('guano', 'constabulary')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Sarcoptes', 'works')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('home', 'Zangwill')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('syllabicity', 'SSS')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('religious_service', 'snuff_user')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('filature', 'Lactophrys_quadricornis')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Sarcoptidae', 'Ottoman_Empire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Chelydra', 'oyster_fish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Navy_SEAL', 'drinking_chocolate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tribalization', 'longbeard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Maxim_gun', 'misquote')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('money_changer', 'deuteron')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Menippe', 'Jacques_Yves_Costeau')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tricholoma_populinum', 'octameter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cracidae', 'booster_station')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('indicator', 'soldier_grainy_club')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hydrophobicity', 'Abronia_villosa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cupric_sulfate', 'mosquito_net')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stocking_filler', 'Lithocarpus_glabra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('red_grouse', 'Usher')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Bruno', 'genus_Campanula')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sodium_sulphate', 'H')
 (DEBUG) sap(), a == 74082
 (DEBUG) sap('genus_Adenanthera', 'expense')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tansy_leaf_aster', 'rotational_nystagmus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mirror', 'giant_lizard')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Vanessa', 'cosmic_time')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tennessean', 'Jean_Arp')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('malacca', 'falls')
 (DEBUG) sap(), a == 61259
 (DEBUG) sap('liquorice', 'Michener')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Astreus', 'cheatgrass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('merger', 'Oedogoniaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bridged-T', 'hackney_coach')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('minute', 'neuromuscular_junction')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shoreline', 'cardiovascular_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Uzi', 'dark_field_illumination')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chickamauga', 'Fed')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('straightaway', 'oddments')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bronx_cheer', 'mid-July')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Quebec', 'jointer')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('anticoagulation', 'Hemigrammus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('reticule', 'allyl_alcohol')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Assam', 'port-access_coronary_bypass_surgery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Robert_Abram_Bartlett', 'Vultur_gryphus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Mombasa', 'tea_garden')
 (DEBUG) sap(), a == 43104
 (DEBUG) sap('hyperpyrexia', 'chorioretinitis')
 (DEBUG) sap(), a == 74939
 (DEBUG) sap('masking_tape', 'Rhamnaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flatterer', 'glove_doll')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('American_beech', 'chauvinism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Henry_Ward_Beecher', 'strong_gale')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('running_hand', 'Panipat')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('exclusion', 'niter')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jogging', 'Greater_Swiss_Mountain_dog')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Wampanoag', 'scattering')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('interpretive_dancing', 'Clitocybe_dealbata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chasidim', 'kat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('valdecoxib', 'higher_rank')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Riksmaal', 'water-shield')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('becket', 'Psophocarpus_tetragonolobus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Photius', 'guilt_feelings')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Department_of_Commerce_and_Labor', 'genus_Priodontes')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('racketeering', 'Grigori_Potemkin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('viewers', 'central_processor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mercenaria', 'European_Central_Bank')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('smokeless_powder', 'Valetta')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ceriman', 'computer_virus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('continuative', 'thing-in-itself')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('New_Zealand_beech', 'motorbus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('mindfulness', 'Sagittarius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plaudits', 'Obadiah')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('colorlessness', 'radiatio_optica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('captive_finance_company', 'pennycress')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('population_growth', 'Upper_Volta')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dental_appliance', 'parking_zone')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Quechuan_language', 'tract')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('EBV', 'thingmabob')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('inside_track', 'electric_refrigerator')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('silver_wattle', 'magnitude_relation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mockingbird', 'master_key')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('weather_side', 'trochanter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hutchinson', 'Microtus_ochrogaster')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('inquiring', 'Blissus_leucopterus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('officialdom', 'Allium_cepa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('calculator', 'genus_Clusia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('equivocator', 'Petasites_sagitattus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Anacanthini', 'Court')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scarlet_fritillary', 'sonic_barrier')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('thermal', 'sodium_dichromate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('retriever', 'scoring_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('materiel', 'epitaph')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Campanulaceae', 'gaff-headed_sail')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('harmattan', 'sartor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Bucephala', 'University_of_Vermont')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grainy_club', 'infrared_light')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wadi', 'vinegarroon')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Bowling_Green', 'rankness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tv_room', 'family_Hirudinidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Scincus', 'salsify')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Islamism', 'pasteurellosis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('caladium', 'gaseous_state')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Franz_Seraph_Peter_Schubert', 'Euphorbia_amygdaloides')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Wilson's_disease', 'Bartolomeo_Vanzetti')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leprosy_bacillus', 'liver_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('valiancy', 'clavier')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('F._D._Roosevelt', 'internal_representation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('harness_race', 'pipefitting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pyrola_minor', 'sweet_basil')
 (DEBUG) sap(), a == 45813
 (DEBUG) sap('voter', 'Tacca_pinnatifida')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('vascular_structure', 'Terpsichore')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('biotechnology', 'dicky')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Al_Ladhiqiyah', 'cost-plus_contract')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('neurodermatitis', 'California_redwood')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cherry_red', 'Lamarckian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dashiell_Hammett', 'evening-snow')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('blue_jessamine', 'pay-phone')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Helianthemum', 'darning_needle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jugale', '8_May_1945')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Euarctos', 'pinger')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('huon_pine', 'directed_study')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hangover', 'Middle_High_German')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Emile_Coue', 'practical_politics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pel', 'grand_dragon')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('glyceric_acid', 'passenger_vehicle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('congress_gaiter', 'outside_mirror')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('clastic_rock', 'banana_skin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('canthus', 'Polyporaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_Strigiformes', 'sumach')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sun_parlour', 'genus_Dendrobium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tibia_vara', 'stinking_hellebore')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('myrtle_oak', 'sanitary_code')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('doula', 'upstart')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Cunaxa', 'Hodur')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('weeper', 'Oriental_arborvitae')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('eared_grebe', 'hemicrania')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bibos_frontalis', 'waft')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Calla', 'bissextile_day')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('exotoxin', 'marvel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trading_stamp', 'genus_Orbignya')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('block_plane', 'altocumulus_cloud')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('audiometer', 'genus_Mazama')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('round-tailed_muskrat', 'diversionary_attack')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('axillary_cavity', 'bankbook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glyceryl', 'twenty-six')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('limelight', 'understudy')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('vertical_union', 'salpingectomy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Barkley', 'mix')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bottlenose_dolphin', 'laudator')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Butazolidin', 'dosshouse')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('radiophotography', 'William_Henry_Pratt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Physostigma_venenosum', 'genus_Littorina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('smell', 'boulder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Best', 'consulting_service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('exhortation', 'ectasis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('John_Bunyan', 'ankylosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kurchee', 'reverence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Galega', 'active_site')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Republic_of_Venezuela', 'Diocletian')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('corm', 'pachuco')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('electromagnetic_wave', 'small_stores')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Adansonia', 'sursum_corda')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Centrarchidae', 'secretary_of_state')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Saroyan', 'pancake_day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('group_action', 'Atlantic_sailfish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dutchman's-pipe', 'pommy')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Mencken', 'race_meeting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('special', 'face_towel')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Polaroid_Land_camera', 'bobbysoxer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('evergreen_huckleberry', 'prospicience')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Swietinia_mahogani', 'N.J.')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('line_of_products', 'gig')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Lutyens', 'phase_III')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('automobile_factory', 'catchment_area')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('approving', 'round_ligament_of_the_uterus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('checkerbloom', 'unacceptableness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Puccini', 'saint's_day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gauri', 'Naemorhedus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hog_plum', 'student_nurse')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Henry_Alfred_Kissinger', 'cudbear')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Termes', 'culdoscopy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('homogenization', 'induction')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('untangling', 'disc_jockey')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('orgasm', 'POW')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('canistel_tree', 'genus_Ceratopogon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wanderer', 'Hagia_Sophia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('walrus_mustache', 'Moehringia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('autumn_sneezeweed', 'longroot')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Parkinsonia_aculeata', 'tadpole')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('hullabaloo', 'field_mustard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slalom', 'fish_house_punch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bed_wetter', 'Artemisia_frigida')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Riparia', 'income_bracket')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('renouncement', 'Korea_Bay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Calochortus', 'Ferdinand_V')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Helwingia', 'intimidation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('barony', 'genus_Genista')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Howard_Pyle', 'mutton_snapper')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('monocytic_leukaemia', 'spongioblastoma')
 (DEBUG) sap(), a == 78160
 (DEBUG) sap('Liatris', 'Clinopodium')
 (DEBUG) sap(), a == 21963
 (DEBUG) sap('fig', 'embolectomy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('musical_octave', 'Progne')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sweetening', 'topsail')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Peltiphyllum_peltatum', 'Phnom_Penh')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Tsouic', 'Atlantic_white_cedar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Spanish_War', 'suttee')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Bevin', 'racing_start')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('caroche', 'Judas_Iscariot')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sherbert', 'gemfibrozil')
 (DEBUG) sap(), a == 74081
 (DEBUG) sap('Adlumia', 'Scotch_broom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Crax', 'Achaean')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Neomys_anomalus', 'family_Passifloraceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('guelder_rose', 'Connecticut_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Indian_bean', 'vocalizer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('class_Cycadopsida', 'Scolopax_rusticola')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('donkeywork', 'maternal_quality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('first_name', 'hybrid_tuberous_begonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('good_afternoon', 'shoe_leather')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Spiraea', 'firing_pin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surface_soil', 'nutmeg_tree')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('linchpin', 'greenmarket')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('mastoidectomy', 'Kauai')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('picovolt', 'Messina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dog-day_cicada', 'pack_of_cards')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('riches', 'cardroom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flash_lamp', 'unstratified_language')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cant_hook', 'Gothic_architecture')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tarahumara_frog', 'surf_fish')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('billy_goat', 'genus_Echinochloa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('diploma', 'painter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gottfried_Wilhelm_Leibnitz', 'laugh')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('propoxyphene', 'Foeniculum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mud_plantain', 'marblewood')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Maclura_pomifera', 'tree_tobacco')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Cocculus_carolinus', 'unregularity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pudendal_slit', 'order_Uropygi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('safety_fuse', 'leucoma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Darmera_peltata', 'responsibility')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('police_matron', 'Balaena_mysticetus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Paul_Hermann_Muller', 'loather')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('FNMA', 'Fijian')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('asynchronous_operation', 'legitimacy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Matricaria', 'rotter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Corylus_americana', 'genus_Trichecus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Flavius_Claudius_Julianus', 'golden-beard_penstemon')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('carrot_family', 'Actinidia')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('Tunisian', 'play')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('neurology', 'peace_march')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('genus_Hydrilla', 'dearth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('raininess', 'order_Dinornithiformes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gentiana_clausa', 'Viagra')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('plummet', 'Aristopak')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('shepherd_dog', 'collie')
 (DEBUG) sap(), a == 69688
 (DEBUG) sap('Agrippa', 'ruby')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tree_squirrel', 'alluviation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('swamp_cypress', 'portcullis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('thalmencephalon', 'spot_pass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leg_curling', 'brickfield')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('buccinator_muscle', 'Stephen_A._Douglas')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Housman', 'split_ticket')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leaven', 'heights')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('common_carotid', 'Gila_River')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('shandy', 'cheeseburger')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_Collembola', 'Weird')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hospital_occupancy', 'pigmentation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Odobenidae', 'Atlantic_City')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Adolph_Simon_Ochs', 'Rocky-mountain_maple')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Anguilliformes', 'numeral')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('landscape', 'Echinacea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Culbertson', 'cypress_spurge')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('henchman', 'aqua_fortis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pyrolysis', 'marsh_hawk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prizefighter', 'turps')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('underdrawers', 'handshake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lithophragma_affine', 'lemon_grove')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('880_yards', 'genus_Naja')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('connective_tissue', 'Hellenism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('radio_link', 'bialystoker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('chiggerflower', 'genus_Chondrus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cardamum', 'vanilla_extract')
 (DEBUG) sap(), a == 40564
 (DEBUG) sap('half-truth', 'semantic_memory')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Windaus', 'foot_traffic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bus_traffic', 'Liquidambar_styraciflua')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Micronor', 'carbineer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('iron_putty', 'white_matter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('arrester_hook', 'fillet_of_sole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('loop-the-loop', 'duck')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Pieris_rapae', 'Chrysochloris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nergal', 'alpha_software')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('collision', 'Brachychiton_rupestris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('handedness', 'Placido_Domingo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cockfight', 'Scheele')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('imperfectibility', 'Saint_Johns_River')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wee_small_voice', 'sacred_lotus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arborvitae', 'terrier')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('intermittent_tetanus', 'black_bile')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sideropenia', 'genus_Bumelia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Count_Fleet', 'Parrish')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('waggoner', 'Giovanni_Lorenzo_Bernini')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Jafar_Umar_Thalib', 'escapism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('warble_fly', 'Parthia')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Department_of_Justice', 'downy_poplar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Louisiana', 'Wotan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chinese_hibiscus', 'discussion_section')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('petty_jury', 'Baldr')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Toronto', 'lyre_snake')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('legal_action', 'care_delivery')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('blue_fox', 'teras')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('broad-mindedness', 'sheriff')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subclass_Copepoda', 'license')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Antoninus', 'genus_Platylobium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Scomber', 'brent')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rhone_River', 'Samian_ware')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Scirpus_cyperinus', 'Funkaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('work_load', 'cannon')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('hackberry', 'Mugil')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('necromania', 'achievability')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Citrullus_vulgaris', 'natural_language_processing_application')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('restaurateur', 'droshky')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Maillol', 'county_council')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('upstager', 'Peripatopsidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hog_badger', 'brown_snail')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('sexual_abstention', 'microchip')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('somniloquy', 'Pacific_giant_salamander')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lucullus', 'Limosa_haemastica')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('flying_fox', 'Chrysopsis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pansy', 'shophar')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cactus_family', 'naivete')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Congregational_Christian_Church', 'honey')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crumbliness', 'time_constant')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cesarean', 'Isolde')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('circulating_library', 'dangling_participle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('water-skiing', 'overwork')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('Palestine_National_Authority', 'proscription')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('actinium', 'Physalis_peruviana')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('People's_Republic_of_China', 'cubic_inch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('VFW', 'noisomeness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('solar_telescope', 'Neapolitan_ice_cream')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('candlemaker', 'Mick')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('stargazer', 'mimeograph')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('clingfish', 'discovery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sweetwood_bark', 'marine_archaeology')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Clark_Gable', 'Albert_von_Szent-Gyorgyi')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('divorcement', 'course_credit')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Stratford-on-Avon', 'Reye's_syndrome')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('liner_train', 'naked_lady')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lionfish', 'rice_grass')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('blackwood', 'prickly_custard_apple')
 (DEBUG) sap(), a == 77641
 (DEBUG) sap('Australian_pine', 'twerp')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('emulator', 'cholecalciferol')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sir_Noel_Pierce_Coward', 'slime_eels')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('hearing_examiner', 'gradation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cucurbita_pepo', 'lintwhite')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('photoconductivity', 'Euler')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Eriogonum_allenii', 'German_monetary_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rock_hyrax', 'needle_cast')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('telegrapher', 'Citlaltepetl')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lotus_land', 'creating_from_raw_materials')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('signior', 'supernatural_virtue')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chronoperates_paradoxus', 'AN')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('canful', 'collateral_fraud')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('street_fighter', 'Cagliostro')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Decoration_Day', 'eleventh_cranial_nerve')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('number', 'Yevtushenko')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('protoctist', 'framboesia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carya_aquatica', 'confidential_information')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cyma_recta', 'crash_program')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('written_record', 'giant_chinkapin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Campanula', 'introvert')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('riches', 'Bramante')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('serjeant-at-law', 'hardening_of_the_arteries')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('congenital_pancytopenia', 'molded_salad')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sisal_hemp', 'Cheilanthes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('June_3', 'Raphanus_sativus_longipinnatus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Michigan', 'conversancy')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('universal_agent', 'metacarpal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('saxophonist', 'Marie_Goeppert_Mayer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('capsicum', 'exogen')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('shrewmouse', 'Vancocin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('South_Atlantic', 'purchase')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('infertility', 'valor')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('University_of_Paris', 'Thyreophora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Limulus_polyphemus', 'monolith')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('computer_scientist', 'tea_parlour')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Pomolobus', 'exhortation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('marocain', 'rich_person')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('soil_horizon', 'genus_Dimetrodon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sea_raven', 'ammonium_hydroxide')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Euronithopoda', 'protoctist_genus')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('nonsingular_matrix', 'Dilaudid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Artemisia_vulgaris', 'Turk's-cap')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('technical_sergeant', 'sway')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('boy_scout', 'genus_Selenicereus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bosun', 'manner_of_speaking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('escapee', 'flame')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('slop_bowl', 'evasion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('semiprofessional', 'kangaroo-foot_plant')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('iterative', 'Puerto_Rico')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mohria', 'high_commissioner')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('buy', 'bikini')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fringepod', 'M')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cyclamen_neopolitanum', 'musical_soiree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hockey', 'localisation_of_function')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('mask', 'red_bone_marrow')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('social', 'shamble')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('true_pepper', 'Lilliputian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('angiotensin_converting_enzyme', 'Neurontin')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('alpha-naphthol_test', 'DIP_switch')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bog_rosemary', 'Hoder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Planococcus', 'chair_car')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chaetodontidae', 'eroticism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stalked_puffball', 'Washington')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Giuseppe_Melchiorre_Sarto', 'unionisation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('daffodil_garlic', 'genus_Andreaea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('telefilm', 'raw_recruit')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ateliosis', 'fellowship')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('genus_Melogale', 'angularity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('acarophobia', 'cattleship')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nero_Claudius_Caesar_Drusus_Germanicus', 'slave_dealer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Polynemidae', 'source_materials')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Bankia', 'rubeola')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Psophocarpus', 'filter_tip')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sedan', 'Wiesenthal')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hammertoe', 'summer_camp')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('capital_of_Maryland', 'guard_ship')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('ritualist', 'blood_sausage')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('plasterboard', 'hypnoanalysis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Giovanni_da_Verrazano', 'Ezra_Cornell')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('prayer_rug', 'red_pimpernel')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('larcener', 'water_of_crystallization')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('immortelle', 'Trimox')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('caramel_apple', 'farina')
 (DEBUG) sap(), a == 41004
 (DEBUG) sap('single-valued_function', 'yellow_birch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('baby_rose', 'genus_Blechnum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('willowherb', 'gaywings')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Japanese_chess', 'cannon_fire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sea_bird', 'poliomyelitis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('alpha_software', 'vena_hepatica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dreg', 'genus_Conoclinium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mariner's_compass', 'genu_valgum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('buffoonery', 'groundfish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('festering', 'metrification')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('subfamily_Cetoniidae', 'leporid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('collaborationist', 'pointillist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Liaodong_Peninsula', 'Acadia_National_Park')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Atropos', 'bog_rosemary')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('schemozzle', 'genus_Uta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('excrement', 'Salix_fragilis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('property_tax', 'open_fireplace')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pangea', 'monte')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Skuld', 'Lully')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('printing', 'dog_mercury')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('the_Street', 'genus_Gloriosa')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Yucca_whipplei', 'faille')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Lola_Montez', 'chorale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fag', 'muckraking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pair_of_scissors', 'suborder_Anisoptera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('educator', 'Musa_textilis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Lomotil', 'coast_redwood')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('stab', 'grand_duchess')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Utug', 'longhand')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dictamnus_alba', 'detraction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('salesmanship', 'truncated_pyramid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crab-eating_macaque', 'Mahdism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cape_jessamine', 'Gentianopsis_holopetala')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('arbitrageur', 'citrange_tree')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('corrie', 'fording')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('public_house', 'Edmund_Wilson')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('public_treasury', 'genus_Upupa')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('prairie_fowl', 'accessory_vertebral_vein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('noisiness', 'genus_Cassia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Invar', 'diving_dress')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sorex_araneus', 'Tancred')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Isolde', 'speakerphone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kingdom_Monera', 'polecat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('church_doctrine', 'Prunus_capuli')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('litterer', 'bolide')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('medallist', 'legless_lizard')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('garden_rocket', 'declarative_mood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('IDA', 'rickets')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Savonarola', 'genus_Doryopteris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dappled-grey', 'pack_of_cards')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Solidago', 'northern_flying_squirrel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('know', 'White_Russia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('one_thousand', 'half_volley')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('conference_room', 'fingerpost')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('town_planning', 'oophorosalpingectomy')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('castle', 'centre_bit')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('Coccoidea', 'mountain_peak')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('duality', 'horse_cassia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cobaltite', 'granadillo')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('machete', 'Cape_Canaveral')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Lake_Clark_National_Park', 'lemon_geranium')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('oil_stain', 'raffle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Sarcocystis', 'genital_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contradistinction', 'rumen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chunk', 'Sinningia_speciosa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glimmer', 'millilitre')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('substratum', 'allgood')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('carbide', 'flame_fish')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Hercules', 'ern')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('enzyme-linked-immunosorbent_serologic_assay', 'bailment')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('whispering_gallery', 'Alzheimer's_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scrapheap', 'colon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('flight_attendant', 'Kirghiz')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Sheetrock', 'commercial_artist')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('super', 'chess_player')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('fumaric_acid', 'Ulanova')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('thymine', 'subunit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Coumarouna', 'linemen')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('genus_Crocus', 'lake_duck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leptodactylid', 'Carl_Orff')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Lucas', 'roster')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cell', 'Andricus')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('riser_pipe', 'takings')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Salmonidae', 'Master_in_Business')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Japanese_angelica_tree', 'Gloria_Swanson')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('exogenous_depression', 'bioarm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('corn_field', 'ordinary_bicycle')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('preventive_strike', 'Sphenodon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Chaldean', 'prince's-plume')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('beachwear', 'cart')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('double_door', 'racetrack_tout')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('papier-mache', 'ulcerative_colitis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('blue_stone', 'black_huckleberry')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sogginess', 'Marine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Transcaucasia', 'arm_band')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('jook', 'bocconia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('documentary', 'cycloserine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mean_time', 'vac')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('actinia', 'Aquila')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('class_Euglenophyceae', 'varlet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('load-shedding', 'sleepiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mathematical_operation', 'persona_non_grata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('watchstrap', 'possessiveness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Harold_Lloyd', 'mean_solar_day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('law-breaking', 'Aleksandr_Prokhorov')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adsorbate', 'Pedilanthus_pavonis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bleachers', 'Paul_Bustill_Robeson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('quicksand', 'digital_photography')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wits', 'phalanx')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('vesica', 'symphonic_music')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coal-tar_creosote', 'partial')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fire-swallower', 'George_III')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Japanese_leaf', 'Vatican_I')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cirrocumulus_cloud', 'inopportuneness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('inhomogeneity', 'sperm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('carib_wood', 'lymph_cell')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('lymphadenoma', 'low_level_flight')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Saladin', 'apatosaur')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('gluteus', 'norepinephrine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rock_penstemon', 'genus_Entomophthora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('oculus_sinister', 'stockjobber')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Aranyaka', 'pillar_of_Islam')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mincing_machine', 'testifier')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('three-hitter', 'Sudan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('auxiliary_verb', 'genus_Guaiacum')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('genus_Hexagrammos', 'musculus_rhomboideus_major')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cribbage_board', 'presbyope')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('human_process', 'xenophobia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rhizopod', 'avaritia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lubricant', 'subconscious_mind')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deontic_logic', 'museum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('undertaker', 'Dneprodzerzhinsk')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cox', 'pastrami')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('maltreater', 'girlhood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sea_milkwort', 'water_lettuce')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('oil_business', 'saltbox')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Parthia', 'riverbed')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('probability', 'gamecock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('theatre_ticket', 'vista')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('herb_bennet', 'os_triquetrum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('word-painting', 'Sino-Tibetan')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('Iguania', 'bearskin')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Sison', 'frisson')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('carpet_slipper', 'physical_exercise')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Psophiidae', 'hybrid_petunia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Walter_John_de_la_Mare', 'pantyhose')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('perishable', 'unavoidable_casualty')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Teucrium_canadense', 'Muenster')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('acceleration', 'Rn')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('finagler', 'thermal_resistor')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('military_strength', 'lacewing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sweet_corn_plant', 'Iron_Chancellor')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Josef_Albers', 'handicapped')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Carabidae', 'paraphysis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Duke_of_Edinburgh', 'telephone_circuit')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Calliandra', 'Harrisia')
 (DEBUG) sap(), a == 35097
 (DEBUG) sap('family_Mullidae', 'bomb')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('waiting_room', 'budget_items')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dolmen', 'booster_amplifier')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('decal', 'Iroquois')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('argali', 'Fujinoyama')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('ilama_tree', 'horned_asp')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('kidney_failure', 'tenor')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('styrene', 'walrus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('statin_drug', 'psychology_department')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('symboliser', 'arbovirus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('thermos', 'great_grandson')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Nelumbo_nucifera', 'Gulf_of_St._Lawrence')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('domesticated_animal', 'prostheon')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('iterative', 'cholecystitis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jook', 'cummings')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('amphibious_aircraft', 'changelessness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lucius_Licinius_Luculus', 'IJsselmeer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('windlessness', 'oxygenation')
 (DEBUG) sap(), a == 63065
 (DEBUG) sap('sunshine', 'M.M.')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('expansive_bit', 'coelenterate_family')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hyperope', 'baldy')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('copalite', 'pact')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shammy_leather', 'workman')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lyrebird', 'awareness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Otaria', 'Krakow')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Placuna', 'catalexis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('horse_tick', 'humor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('XVI', 'Kennelly-Heaviside_layer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Home_Office', 'Granville_Stanley_Hall')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sales_event', 'mimeograph_machine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leading_lady', 'Mercalli_scale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('buffalo_bur', 'Cretaceous_period')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Calochortus', 'non-flowering_plant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('marque', 'dismissal')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Arvicola', 'Sir_Stephen_Harold_Spender')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arc_cotangent', 'stake_driver')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cascades_frog', 'focussing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('television_transmitter', 'walleyed_pike')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('woodworm', 'calendar_day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('silent_movie', 'Latvian')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('public_domain', 'Stan_Musial')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hot_air', 'rabbit_hutch')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fuck', 'Rwanda')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('William_Wordsworth', 'tapioca_plant')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Hindoo', 'decampment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hash_head', 'half_hitch')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('aliquot', 'genus_Endamoeba')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Mesembryanthemum', 'prehensor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('George_Frideric_Handel', 'Lathyrus_pratensis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('clove_tree', 'self-knowledge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('postulation', 'semantics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('business_executive', 'Prophets')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Bradypodidae', 'waxiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tachogram', 'Castanea_dentata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wood_avens', 'record_sleeve')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('dalliance', 'Pelew')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tallis', 'medial_geniculate_body')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Steele', 'tree_toad')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('airmailer', 'King_Harold_II')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('delirium_tremens', 'bo_tree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('whirlybird', 'Swiss_stone_pine')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Haplopappus_phyllocephalus', 'Federal_Home_Loan_Mortgage_Corporation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('populist', 'electronic_stylus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('top_dog', 'primary_cell')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('simperer', 'spire')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fuzzy_logic', 'Jesuits'_nut')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Kingdom_of_Cambodia', 'commandery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('funambulism', 'myosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hexachlorophene', 'clinker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ten-day_fern', 'dice_box')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('kieserite', 'cystoplegia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('prairie_berry', 'cherry_tree')
 (DEBUG) sap(), a == 81549
 (DEBUG) sap('Gypaetus_barbatus', 'cabman')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('draftsperson', 'patrolman')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('mammalogist', 'burn_plant')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('acoustic_guitar', 'Precambrian_aeon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('totara', 'Rhode_Islander')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ponce', 'Pydna')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hired_hand', 'toy_soldier')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sweet_birch', 'ungainliness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lifeboat', 'Kuchean')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Sylvilagus', 'bromothymol_blue')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cantaloup_vine', 'beefsteak_begonia')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('XXY-syndrome', 'Garry_oak')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stile', 'coffee_rose')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('INR', 'John_Huss')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('faucial_tonsil', 'Vatican_City')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('psycho', 'joint')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('maharanee', 'Capek')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Ku_Klux_Klan', 'palm')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Oglala', 'preciseness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('aortitis', 'point_of_entry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sunbather', 'free_lunch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('viceroyship', 'California_newt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_Wilkes_Booth', 'Parathelypteris_simulata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('oldwife', 'volatile')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('good_will', 'chickeree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crackerjack', 'Yagi_aerial')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lemongrass', 'profit_and_loss')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('evening-primrose_family', 'American_widgeon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('workmen's_compensation', 'Polypodium_glycyrrhiza')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lacuna', 'ballistic_trajectory')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tinker's_dam', 'lutetium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Victoria_Day', 'La_Crosse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flyspeck', 'Hypericum_ascyron')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Fairbanks', 'Buteo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pool', 'technical_analyst')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('housemaid', 'Green_Beret')
 (DEBUG) sap(), a == 81626
 (DEBUG) sap('apex', 'cosmographist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fig_marigold', 'hairstylist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('pass_completion', 'Quadrigesima_Sunday')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('logic', 'duomo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Roystonea', 'turnip-rooted_celery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Trichys', 'Angora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Texas_millet', 'icon')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('totterer', 'wild_card')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('drogue', 'semiconductor_device')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('elf_cup', 'twenty-five')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Alstonia', 'producer_price_index')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('priapism', 'defining')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Maurice_Ravel', 'Tragelaphus_strepsiceros')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Nentsi', 'telephone_company')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Python_molurus', 'homework')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('skin_rash', 'Prosopis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Hydrocharis_morsus-ranae', 'private_security_force')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cotula_coronopifolia', 'common_nutcracker')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('chebab', 'familiar_spirit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ethical_drug', 'aerogram')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('down', 'BoP')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Malaysian_monetary_unit', 'youth-on-age')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trained_nurse', 'Rembrandt_van_Ryn')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('family_Cleridae', 'cerivastatin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gaseous_state', 'pentlandite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('extended_order', 'genus_Prionotus')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Burt', 'Albee')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('exteriorisation', 'iliac_vein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pilus', 'Numenius_arquata')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('acrocephaly', 'ready-to-wear')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('two-toed_sloth', 'Croat')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Galbulidae', 'Loxia')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('babassu_oil', 'greenockite')
 (DEBUG) sap(), a == 53454
 (DEBUG) sap('auxiliary', 'schmalz')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Christmas_Day', 'Samuel_Houston')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lothian_Region', 'cocktail')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Entolomataceae', 'cup_tie')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('heaviness', 'associateship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('trend-setter', 'chafe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('poppycock', 'Gypsophila_paniculata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mimamsa', 'melancholy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('plaster_bandage', 'Moreau_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('echinoderm', 'provost_court')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leucadendron', 'rigamarole')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('brompheniramine_maleate', 'spike_mike')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mesmer', 'nonalinement')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pointel', 'steatite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('malediction', 'genus_Cimex')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('northern_flying_squirrel', 'dartboard')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('faintheartedness', 'angle_bracket')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Typha', 'Pseudomonas_pyocanea')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('pump_room', 'genus_Geastrum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Guadeloupe', 'epididymis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Viola_canina', 'Loxomataceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('penoncel', 'theelin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('time_clock', 'achondrite')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sociableness', 'countermortar_fire')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shadiness', 'embossment')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('cards', 'spotted_water_hemlock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('psychiatrist', 'unappetizingness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('seal_bomb', 'Jekyll_and_Hyde')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('garden_plant', 'Compositae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nova_Zembla', 'nanomia')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('diversification', 'nectarine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arteria_ileocolica', 'breadcrumb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypospadias', 'false_truffle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hero', 'grumble')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('German_tamarisk', 'macula_lutea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Centriscidae', 'marocain')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('earflap', 'Uniate')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ass', 'Loch_Linnhe')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('sweat_suit', 'Vladimir_Ilyich_Ulyanov')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Nouakchott', 'lima_bean')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Trichostema_dichotomum', 'Havana')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('NAWCWPNS', 'organization_chart')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Alliaceae', 'hypertrophic_rosacea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('erythema_nodosum_leprosum', 'capitulum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Asclepia_meadii', 'improper_fraction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Rhizophoraceae', 'Kemal_Ataturk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Reticulitermes', 'Nemophila_maculata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vargas', 'Lord_of_Misrule')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('sand_dune', 'picornavirus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cartilaginification', 'cognitive_scientist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('North_Platte_River', 'shedder')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fauteuil', 'subjunctive_mood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('udder', '2-hitter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('equipment_failure', 'impoundment')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('Winslow', 'amputator')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('American_quaking_aspen', 'earth_god')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arc', 'past_perfect_tense')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Heteroscelus_incanus', 'oil_painter')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('color_television', 'pepperwood')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Crotalaria_spectabilis', 'propanoic_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Dayton_axe', 'President_Taft')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('charter', 'departure_lounge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('transfer_payment', 'tamarillo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('garrote', 'bastille')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('infant_death', 'metrical_unit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Electra', 'drumfire')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('genus_Parkinsonia', 'citadel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('babies'-breath', 'ragtag')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bermuda_maidenhair', 'consecutive_operation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cedarwood', 'pigeonhole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('caranday', 'washerwoman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('practician', 'adrenal_medulla')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('self-heal', 'Tussilago_farfara')
 (DEBUG) sap(), a == 45813
 (DEBUG) sap('dog_hobble', 'Helen_Hayes')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('seventy-eight', 'auricle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('urinary_incontinence', 'Tetraonidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jalalabad', 'Eschrichtius_robustus')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('crabmeat', 'source_program')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('drug_addict', 'weather_sheet')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('loan_approval', 'sodium_salicylate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stamp_album', 'ABO_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('perfectionism', 'megestrol_acetate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('multivariate_analysis', 'scarabaeus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('racialist', 'padre')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('thickening', 'bot')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Gymnocladus', 'pharyngeal_vein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cyclopes', 'issuing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Antidorcas_euchore', 'Promised_Land')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Centrosema', 'smooth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Indian_agent', 'ground_rattler')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('coattails_effect', 'Rushdie')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lagerstroemia_indica', 'genus_Eptatretus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('miotic_drug', 'Boswellia_carteri')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('frijol', 'flip_chart')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('womb', 'Helen_of_Troy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spell-checker', 'vitamin_P')
 (DEBUG) sa
Total: 0/8 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.05 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 08:21:38</td></tr>
        <tr><td>Raw Score</td><td>46.64 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#990000">FAILED</font>
Findbugs:     <font color="#009900">No potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#995A00">13/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#998500">46.64%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 24K
-rw-r--r-- 1 1.2K Apr 30 15:21 Outcast.java
-rw-r--r-- 1 4.3K Apr 30 15:21 SAP.java
-rw-r--r-- 1 7.7K Apr 30 15:21 WordNet.java
-rw-r--r-- 1 3.8K Apr 30 15:21 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------
SAP.java:1: Do not use .* in import statements.
SAP.java:10:1: File contains tab characters (this is the first instance). Configure your editor to replace tabs with spaces.
SAP.java:10:21: Instance variable '_g' should start with a lowercase letter and use camelCase.
SAP.java:32:14: 'while' is not followed by whitespace.
SAP.java:35:15: 'if' is not followed by whitespace.
SAP.java:37:19: 'if' is not followed by whitespace.
SAP.java:66:14: 'while' is not followed by whitespace.
SAP.java:68:15: 'if' is not followed by whitespace.
SAP.java:70:19: 'if' is not followed by whitespace.
SAP.java:89:11: 'if' is not followed by whitespace.
SAP.java:97:12: 'for' is not followed by whitespace.
SAP.java:101:14: 'while' is not followed by whitespace.
SAP.java:103:15: 'if' is not followed by whitespace.
SAP.java:119:11: 'if' is not followed by whitespace.
SAP.java:126:12: 'for' is not followed by whitespace.
SAP.java:129:14: 'while' is not followed by whitespace.
SAP.java:131:15: 'if' is not followed by whitespace.
WordNet.java:4: Do not use .* in import statements.
WordNet.java:7:8: Unused import statement for 'edu.princeton.cs.algs4.StdIn'.
WordNet.java:12:1: File contains tab characters (this is the first instance). Configure your editor to replace tabs with spaces.
WordNet.java:13:13: Instance variable 'Index' should start with a lowercase letter and use camelCase.
WordNet.java:13:13: Variable 'Index' should be private.
WordNet.java:14:22: Instance variable 'Words' should start with a lowercase letter and use camelCase.
WordNet.java:14:22: Variable 'Words' should be private.
WordNet.java:18:48: Instance variable '_words' should start with a lowercase letter and use camelCase.
WordNet.java:19:38: Instance variable '_synsetIndexes' should start with a lowercase letter and use camelCase.
WordNet.java:20:21: Instance variable '_digraph' should start with a lowercase letter and use camelCase.
WordNet.java:27:4: Constructor definition in wrong order. The order should be [static variables, instance variables, constructors, methods].
WordNet.java:29:10: 'if' is not followed by whitespace.
WordNet.java:31:10: 'if' is not followed by whitespace.
WordNet.java:41:17: Method 'construct_synsets' should start with a lowercase letter and use camelCase.
WordNet.java:46:13: 'while' is not followed by whitespace.
WordNet.java:46:55: ')' is preceded with whitespace.
WordNet.java:53:15: 'for' is not followed by whitespace.
WordNet.java:55:56: Do not use the ternary conditional operator on Coursera programming assignments.
WordNet.java:71:17: Method 'construct_hypernyms' should start with a lowercase letter and use camelCase.
WordNet.java:77:13: 'while' is not followed by whitespace.
WordNet.java:81:15: 'for' is not followed by whitespace.
WordNet.java:88:15: 'for' is not followed by whitespace.
WordNet.java:95:10: 'if' is not followed by whitespace.
WordNet.java:100:10: 'if' is not followed by whitespace.
WordNet.java:116:10: 'if' is not followed by whitespace.
WordNet.java:124:10: 'if' is not followed by whitespace.
WordNet.java:126:10: 'if' is not followed by whitespace.
WordNet.java:128:10: 'if' is not followed by whitespace.
WordNet.java:130:10: 'if' is not followed by whitespace.
WordNet.java:140:31: Method 'get_ids_by_word' should start with a lowercase letter and use camelCase.
WordNet.java:143:11: 'for' is not followed by whitespace.
WordNet.java:152:10: 'if' is not followed by whitespace.
WordNet.java:154:10: 'if' is not followed by whitespace.
WordNet.java:156:10: 'if' is not followed by whitespace.
WordNet.java:158:10: 'if' is not followed by whitespace.
WordNet.java:168:10: 'if' is not followed by whitespace.
WordNet.java:180:24: Method 'should_throw_if_not_rooted_DAG' should start with a lowercase letter and use camelCase.
WordNet.java:180:56: '{' is not preceded with whitespace.
WordNet.java:185:51: ')' is preceded with whitespace.
WordNet.java:188:10: 'if' is not followed by whitespace.
WordNet.java:197:51: ')' is preceded with whitespace.
WordNet.java:200:10: 'if' is not followed by whitespace.
WordNet.java:206:24: Method 'should_throw_if_cycles' should start with a lowercase letter and use camelCase.
WordNet.java:206:48: '{' is not preceded with whitespace.
WordNet.java:211:51: ')' is preceded with whitespace.
WordNet.java:214:10: 'if' is not followed by whitespace.
WordNet.java:223:51: ')' is preceded with whitespace.
WordNet.java:226:10: 'if' is not followed by whitespace.
WordNet.java:232:24: Method 'should_ancestor_for_worm_and_bird' should start with a lowercase letter and use camelCase.
WordNet.java:232:59: '{' is not preceded with whitespace.
WordNet.java:236:10: 'if' is not followed by whitespace.
Outcast.java:1: Do not use .* in import statements.
Outcast.java:3:8: Unused import statement for 'edu.princeton.cs.algs4.Queue'.
Outcast.java:4:8: Unused import statement for 'edu.princeton.cs.algs4.Digraph'.
Outcast.java:5:8: Unused import statement for 'edu.princeton.cs.algs4.StdIn'.
Outcast.java:9:1: File contains tab characters (this is the first instance). Configure your editor to replace tabs with spaces.
Outcast.java:9:21: Instance variable '_wordNet' should start with a lowercase letter and use camelCase.
Outcast.java:20:12: 'for' is not followed by whitespace.
Outcast.java:23:16: 'for' is not followed by whitespace.
Outcast.java:24:19: 'if' is not followed by whitespace.
Outcast.java:28:15: 'if' is not followed by whitespace.
Outcast.java:28:47: '{' is not preceded with whitespace.
Checkstyle ends with 79 errors.

================================================================


% findbugs *.class
*-----------------------------------------------------------

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
     -  failed on trial 1 of 169
     -  v = 3, w = 3
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 3
  *  digraph2.txt
     -  failed on trial 1 of 36
     -  v = 2, w = 0
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 0
  *  digraph3.txt
     -  failed on trial 1 of 225
     -  v = 7, w = 11
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  digraph4.txt
     -  failed on trial 1 of 100
     -  v = 0, w = 8
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  digraph5.txt
     -  failed on trial 2 of 484
     -  v = 10, w = 10
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 10
  *  digraph6.txt
     -  failed on trial 1 of 64
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  digraph9.txt
     -  failed on trial 1 of 81
     -  v = 1, w = 6
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 3
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 48507, w = 56321
     -  student   length   = -1
     -  reference length   = 21
     -  student   ancestor = -1
     -  reference ancestor = 60600
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3: check length() and ancestor() on directed paths
  *  5
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 1
  *  10
     -  failed on trial 1 of 100
     -  v = 9, w = 3
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 9
  *  20
     -  failed on trial 1 of 400
     -  v = 18, w = 7
     -  student   length   = -1
     -  reference length   = 8
     -  student   ancestor = -1
     -  reference ancestor = 18
  *  50
     -  failed on trial 1 of 2500
     -  v = 19, w = 36
     -  student   length   = -1
     -  reference length   = 39
     -  student   ancestor = -1
     -  reference ancestor = 36
  *  100
     -  failed on trial 1 of 10000
     -  v = 14, w = 89
     -  student   length   = -1
     -  reference length   = 62
     -  student   ancestor = -1
     -  reference ancestor = 89
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 4: check length() and ancestor() on directed cycles
  *  5
     -  failed on trial 1 of 25
     -  v = 1, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  10
     -  failed on trial 1 of 100
     -  v = 8, w = 8
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  20
     -  failed on trial 1 of 400
     -  v = 1, w = 5
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 1
  *  50
     -  failed on trial 1 of 2500
     -  v = 2, w = 7
     -  student   length   = -1
     -  reference length   = 18
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  100
     -  failed on trial 1 of 10000
     -  v = 35, w = 29
     -  student   length   = -1
     -  reference length   = 32
     -  student   ancestor = -1
     -  reference ancestor = 29
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: check length() and ancestor() on complete graphs
  *  5
     -  failed on trial 1 of 25
     -  v = 3, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
  *  10
     -  failed on trial 1 of 100
     -  v = 4, w = 9
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 9
  *  20
     -  failed on trial 1 of 400
     -  v = 10, w = 14
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 14
  *  50
     -  failed on trial 1 of 2500
     -  v = 20, w = 11
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 11
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 6: check length() and ancestor() on tournament digraphs
  *  5
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  10
     -  failed on trial 1 of 100
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 5
  *  20
     -  failed on trial 1 of 400
     -  v = 17, w = 15
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 17
  *  50
     -  failed on trial 1 of 2500
     -  v = 31, w = 43
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 31
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check length() and ancestor() on complete binary trees
  *  5
     -  failed on trial 1 of 25
     -  v = 2, w = 4
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 3
  *  10
     -  failed on trial 1 of 100
     -  v = 5, w = 6
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  20
     -  failed on trial 1 of 400
     -  v = 7, w = 1
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  50
     -  failed on trial 1 of 2500
     -  v = 21, w = 31
     -  student   length   = -1
     -  reference length   = 5
     -  student   ancestor = -1
     -  reference ancestor = 36
  *  100
     -  failed on trial 1 of 10000
     -  v = 75, w = 16
     -  student   length   = -1
     -  reference length   = 11
     -  student   ancestor = -1
     -  reference ancestor = 33
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 1, w = 4
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 7, w = 2
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 7
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 10, w = 18
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 10
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 0, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 6
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 13, w = 0
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 4
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 6, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 12, w = 18
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
     -  failed on trial 1 of 25
     -  v = 4, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 1 of 100
     -  v = 1, w = 1
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 1 of 400
     -  v = 16, w = 17
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 16
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
     -  failed on trial 2 of 25
     -  v = 4, w = 4
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 4 of 100
     -  v = 8, w = 7
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 8
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 6 of 400
     -  v = 17, w = 12
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 17
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 2
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 4, w = 4
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 5
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
     -  v = 0, w = 0
     -  (digraph1.txt) student   length() = -1
     -  (digraph1.txt) reference length() = 0
  *  digraph3.txt and digraph4.txt
     -  v = 0, w = 0
     -  (digraph3.txt) student   length() = -1
     -  (digraph3.txt) reference length() = 0
  *  digraph5.txt and digraph6.txt
     -  v = 0, w = 0
     -  (digraph5.txt) student   length() = -1
     -  (digraph5.txt) reference length() = 0
  *  digraph2.txt and digraph1.txt
     -  v = 0, w = 0
     -  (digraph2.txt) student   length() = -1
     -  (digraph2.txt) reference length() = 0
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 1 6 7 9 , w = 2 8 10 11 
  *  v = 1 6 7 9 , w = -1 2 8 10 11 
  *  v = 13 1 6 7 9 , w = 2 8 10 11 
  *  v = 1 6 7 9 , w = 13 2 8 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 12 of 100
     -  v = 61260 
     -  w = 73490 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v = 81095 
     -  w = 14961 55059 
     -  student   length() = 16
     -  reference length() = 15
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 38975 52899 
     -  w = 79368 
     -  student   length() = 17
     -  reference length() = 16
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 13236 43504 
     -  w = 40808 42071 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 10187 75634 79198 
     -  w size = 11
     -  student   length() = 11
     -  reference length() = 6
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v size = 11
     -  w = 26514 67407 69904 
     -  student   length() = 10
     -  reference length() = 8
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 1 to length()
     -  v                  = 12
     -  w                  = 10
     -  student   length() = -1
     -  reference length() = 1
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 2 to ancestor()
     -  v = 1 5 9 16 
     -  w = 2 7 19 
     -  student   ancestor = 2
     -  distance from v to 2 = 2
     -  distance from w to 2 = 0
     -  reference ancestor = 19
     -  reference length   = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 3/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
 (DEBUG) _digraph.V() == 6
 (DEBUG) _digraph.E() == 6
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 12
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 16
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 17
 (DEBUG) WordNet constructed
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 100
 (DEBUG) _words.size() == 157
 (DEBUG) _digraph.V() == 100
 (DEBUG) _digraph.E() == 100
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 500
 (DEBUG) _words.size() == 751
 (DEBUG) _digraph.V() == 500
 (DEBUG) _digraph.E() == 507
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 1000
 (DEBUG) _words.size() == 1664
 (DEBUG) _digraph.V() == 1000
 (DEBUG) _digraph.E() == 1008
 (DEBUG) WordNet constructed
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Regiomontanus', 'Aegypiidae')
 (DEBUG) sap(), a == 58166
     -  student sap() is too far to be a valid common ancestor when testing pair 1 of 1000
     -  nounA = Regiomontanus
     -  nounB = Aegypiidae
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 11
     -  reference distance() to 'organism being' = 11
     -  actual distance to 'organism' = -1
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
 (DEBUG) _digraph.V() == 6
 (DEBUG) _digraph.E() == 6
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 12
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 16
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 17
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 100
 (DEBUG) _words.size() == 157
 (DEBUG) _digraph.V() == 100
 (DEBUG) _digraph.E() == 100
 (DEBUG) WordNet constructed
 (DEBUG) sap('unit_cell', 'factor_XII')
 (DEBUG) sap(), a == 93
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = unit_cell
     -  nounB = factor_XII
     -  student   distance() = 7
     -  reference distance() = 7
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 500
 (DEBUG) _words.size() == 751
 (DEBUG) _digraph.V() == 500
 (DEBUG) _digraph.E() == 507
 (DEBUG) WordNet constructed
 (DEBUG) sap('carboxyl_group', 'Cox-2')
 (DEBUG) sap(), a == 478
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = carboxyl_group
     -  nounB = Cox-2
     -  student   distance() = 8
     -  reference distance() = 8
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 1000
 (DEBUG) _words.size() == 1664
 (DEBUG) _digraph.V() == 1000
 (DEBUG) _digraph.E() == 1008
 (DEBUG) WordNet constructed
 (DEBUG) sap('muscular_structure', 'ricin_toxin')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('thyroid_vein', 'axolemma')
 (DEBUG) sap(), a == 104
 (DEBUG) sap('motor_nerve', 'content')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('oculomotor_nerve', 'tenth_cranial_nerve')
 (DEBUG) sap(), a == 213
 (DEBUG) sap('uranyl_radical', 'wishing_bone')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('nugget', 'marbling')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('splint', 'pennyroyal_oil')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('horseradish_peroxidase', 'cyano_group')
 (DEBUG) sap(), a == 928
     -  student returns invalid synset on pair 8 of 1000
     -  nounA = horseradish_peroxidase
     -  nounB = cyano_group
     -  student   distance() = 9
     -  reference distance() = 9
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidTwoRoots.txt')
 (DEBUG) _synsetIndexes.size() == 3
 (DEBUG) _words.size() == 3
  *  synsets3.txt, hypernyms3InvalidCycle.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidCycle.txt')
 (DEBUG) _synsetIndexes.size() == 3
 (DEBUG) _words.size() == 3
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidTwoRoots.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle+Path.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:125)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:125)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:125)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:125)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Kavrin', 'pant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Pacific_tripletail', 'true_fir')
 (DEBUG) sap(), a == 58166
     -  student sap() is too far to be a valid common ancestor when testing pair 4 of 100
     -  nounA = Pacific_tripletail
     -  nounB = true_fir
     -  student   sap() = 'organism'
     -  reference sap() = 'organism being'
     -  student   distance() = 18
     -  reference distance() to 'organism being' = 18
     -  actual distance to 'organism' = -1
     -  failed on call 4 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('state_treasurer', 'Erianthus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('White_Nile', 'Lucius_Quinctius_Cincinnatus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('FAS', 'knock_rummy')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Thiosulfil', 'long_sleeve')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('talking_picture', 'reducer')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Dialeurodes', 'willow_bell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Barber', 'impreciseness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cracidae', 'barberry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eye_surgery', 'Rosa_Ponselle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('much', 'monody')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 22 of 100
     -  nounA = much
     -  nounB = monody
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 8
     -  reference distance() to 'abstraction abstract_entity' = 8
     -  actual distance to 'abstraction' = -1
     -  failed on call 22 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('inessentiality', 'introversion')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Barbary', 'king's_ransom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sprite', 'enfolding')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('carbon_tetrahalide', 'Euonymous_alatus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('precipitin', 'pasturage')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bioluminescence', 'Harlan_F._Stone')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('married_man', 'armillary_sphere')
 (DEBUG) sap(), a == 81004
     -  student sap() is too far to be a valid common ancestor when testing pair 22 of 100
     -  nounA = married_man
     -  nounB = armillary_sphere
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 11
     -  reference distance() to 'whole unit' = 11
     -  actual distance to 'whole' = -1
     -  failed on call 22 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast4.txt
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8a.txt
     -  nouns = Banti's_disease hyperadrenalism German_measles gargoylism Q_fever amebiosis anthrax playboy 
     -  student   outcast() = Banti's_disease
     -  reference outcast() = playboy
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast9a.txt
     -  nouns = hair eyes arm mouth nose ear cheek brow chin 
     -  student   outcast() = hair
     -  reference outcast() = eyes
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast10a.txt
     -  nouns = blue green yellow brown black white orange violet red serendipity 
     -  student   outcast() = blue
     -  reference outcast() = serendipity
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
  *  outcast12.txt
     -  nouns = Dylan folk Guthrie idol Minneapolis music musical playing public recognition review thunderbird 
     -  student   outcast() = Dylan
     -  reference outcast() = Minneapolis
  *  outcast12a.txt
     -  nouns = competition cup event fielding football level practice prestige team tournament world mongoose 
     -  student   outcast() = competition
     -  reference outcast() = mongoose
  *  outcast17.txt
     -  nouns = art canvas china culture kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast20.txt
     -  nouns = art Buddha Buddhism canvas china culture India kingdom particularism point portable ritual road script sculpture silk style transmission wall toluene 
     -  student   outcast() = art
     -  reference outcast() = particularism
  *  outcast29.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
     -  nouns = Turing von_Neumann Mickey_Mouse 
     -  student   outcast() = Turing
     -  reference outcast() = Mickey_Mouse
  *  outcast5.txt
     -  nouns = horse zebra cat bear table 
     -  student   outcast() = horse
     -  reference outcast() = table
  *  outcast5a.txt
     -  nouns = earth fire air water heart 
     -  student   outcast() = earth
     -  reference outcast() = heart
  *  outcast7.txt
     -  nouns = Asia Australia North_America India Europe Antarctica South_America 
     -  student   outcast() = Asia
     -  reference outcast() = India
  *  outcast8.txt
     -  nouns = water soda bed orange_juice milk apple_juice tea coffee 
     -  student   outcast() = water
     -  reference outcast() = bed
  *  outcast8b.txt
     -  nouns = apple orange banana grape strawberry cabbage mango watermelon 
     -  student   outcast() = apple
     -  reference outcast() = cabbage
  *  outcast8c.txt
     -  nouns = car auto truck plane tree train vehicle van 
     -  student   outcast() = car
     -  reference outcast() = tree
  *  outcast9.txt
     -  nouns = lumber wood tree leaf nail house building edifice structure 
     -  student   outcast() = lumber
     -  reference outcast() = tree
  *  outcast10.txt
     -  nouns = cat cheetah dog wolf albatross horse zebra lemur orangutan chimpanzee 
     -  student   outcast() = cat
     -  reference outcast() = albatross
  *  outcast11.txt
     -  nouns = apple pear peach banana lime lemon blueberry strawberry mango watermelon potato 
     -  student   outcast() = apple
     -  reference outcast() = potato
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 0/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347848 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 1000
 (DEBUG) _words.size() == 1664
 (DEBUG) _digraph.V() == 1000
 (DEBUG) _digraph.E() == 1008
 (DEBUG) WordNet constructed
     -  student   memory = 859552 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 5000
 (DEBUG) _words.size() == 7992
 (DEBUG) _digraph.V() == 5000
 (DEBUG) _digraph.E() == 5059
 (DEBUG) WordNet constructed
     -  student   memory = 4204568 bytes
     -  reference memory = 6071352 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 10000
 (DEBUG) _words.size() == 19600
 (DEBUG) _digraph.V() == 10000
 (DEBUG) _digraph.E() == 10087
 (DEBUG) WordNet constructed
     -  student   memory = 9505976 bytes
     -  reference memory = 14089584 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.7
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.00 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  520131.33
     -  student   solution calls per second:    3712.00
     -  reference / student ratio:               140.12

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  168072.67
     -  student   solution calls per second:    3936.67
     -  reference / student ratio:                42.69

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
     -  student constructor time =  0.76 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('bit', 'byte')
 (DEBUG) sap(), a == 78703
 (DEBUG) sap('apple', 'orange')
 (DEBUG) sap(), a == 37179
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
 (DEBUG) sap('haddock', 'Saint_Christopher-Nevis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Pholas', 'external_oblique_muscle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nonconformism', 'synovitis')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('opiate', 'Saturnia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tibeto-Burman_language', 'unperson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('excavation', 'courser')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('World_Trade_Organization', 'flippancy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('teasel', 'Mount_Hubbard')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Guatemalan_monetary_unit', 'green_douglas_fir')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('great_care', 'caraway_seed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('preclusion', 'ammonium_chloride')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('paper_trail', 'Prunellidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('oxybenzene', 'War_of_the_Roses')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sob_stuff', 'scientific_agriculture')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('basic_training', 'bullnosed_plane')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Calocedrus', 'diagnostics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('spinning_jenny', 'butut')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('football_score', 'symbololatry')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('forefoot', 'genetic_counseling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('infrared_therapy', 'Fosbury_flop')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('non-Catholic', 'rough-skinned_newt')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Hickock', 'lipreading')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('form_of_address', 'Quercus_nigra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shipping_clerk', 'contradistinction')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bother', 'West_Germanic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('R._Buckminster_Fuller', 'stachyose')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('front_line', 'Gandhi')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sulla', 'nopal')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Thecodontia', 'Leptotyphlopidae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('block_grant', 'dictum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('plagal_cadence', 'pricker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('colonial', 'mangabey')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Great_Salt_Desert', 'panhandle')
 (DEBUG) sap(), a == 43104
 (DEBUG) sap('Saint_John', 'fraud_in_fact')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('accommodation_reflex', 'prairie_gourd_vine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Old_World_crayfish', 'tailwind')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tiger', 'threads')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Periactin', 'Democratic_Party')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Penstemon_barbatus', 'clobber')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Tanzania', 'biplane')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Muhammad_Ali_Jinnah', 'valley_fever')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Astilbe', 'pink_lady')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('co-ordinate', 'Hasid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mountain_alder', 'Allionia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('carbide', 'two-base_hit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('October_12', 'Wodan')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('aerodynamic_force', 'strain_gauge')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('striver', 'Sundanese')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crossing', 'Afghanistani')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gentiana_thermalis', 'dollar_bill')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ketubim', 'Ku_Kluxer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bas_bleu', 'cream_puff')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Caesar', 'Preussen')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pecan', 'vocational_school')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('triple_time', 'Lavandula')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dowager', 'genus_Araucaria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('star_saxifrage', 'used-car_lot')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('hypnotiser', 'Pteretis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('submaxillary_salivary_gland', 'Hamamelis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trainee', 'Moluccas')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('acroanesthesia', 'paper_nautilus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ohm's_law', 'Robert_William_Service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Southern_Baptist', 'neural_impulse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surprint', 'fatalist')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('visibility', 'Embiotocidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('brown_bent', 'white-coat_hypertension')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rabbit_test', 'boaster')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sponge_mushroom', 'update')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spline', 'New_World_opah')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('scouring_rush', 'finger_cymbals')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Carnot', 'figure_of_speech')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('longanberry', 'ring-stalked_fungus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('solar_calendar', 'copybook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('human_foot', 'camping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('brunet', 'Humpty_Dumpty')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cold_weather', 'kaffir_bread')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pheasant_coucal', 'bacillary_white_diarrhea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('common_good', 'genus_Elanus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Flavius_Theodosius', 'mountain_viscacha')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('department_store', 'sprouting')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cerebral_hemisphere', 'main_street')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('raising_hell', 'improbability')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Barbuda', 'astringency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('line_of_destiny', 'Ray_Cattell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sailplaning', 'lipaemia')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Alexander_Calder', 'gavage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('musculus_sternocleidomastoideus', 'South_Korean')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Hesse', 'stalwart')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('agoraphobia', 'repetitiveness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Ledum', 'webbing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('new_line', 'grounds')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('kitchen', 'frambesia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stockpot', 'recoding')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jupati_palm', 'Sempach')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wistaria', 'bank_draft')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jibboom', 'limewater')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Jasper_Johns', 'Sir_David_Alexander_Cecil_Low')
 (DEBUG) sap(), a == 21765
 (DEBUG) sap('unguiculate', 'neckband')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('unpleasingness', 'Reiter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hoodoo', 'pheasant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Richmondena', 'Centaur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('balaclava', 'sensorium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('common_stock_equivalent', 'self-incrimination')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('strategian', 'river_blindness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bayes', 'rota')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('austereness', 'resin')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('coin_machine', 'dyscalculia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Petasites_fragrans', 'pisser')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Halcyon', 'porphyria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('conditioned_emotional_response', 'Little_Dipper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('oldie', 'abscess')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Rhamnus_croceus', 'radio_observation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coyol', 'teach-in')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Wolverine_State', 'horse')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('categorisation', 'alter_ego')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('margrave', 'genus_Todus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bertram_Brockhouse', 'St._Jerome')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('family_Malvaceae', 'bulgur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Aptenodytes_forsteri', 'grinding_wheel')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('dribble', 'homburg')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('branding', 'Karl_Landsteiner')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('descriptive_geometry', 'ricochet')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('rechauffe', 'lampshell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Erythroxylon', 'nineteen')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lunatic_fringe', 'Newcomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Adolf_Eichmann', 'fall_equinox')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('benzocaine', 'Sitta_carolinensis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ridicule', 'desertic_soil')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sallying_forth', 'diesel_locomotive')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('programme', 'cup')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('abiogenesis', 'Ashcan_school')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Boell', 'Hungary')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mobula', 'torque_wrench')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curly-coated_retriever', 'tuberculoid_leprosy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Phasmidae', 'regional_enteritis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('golden_retriever', 'duodenal_ulcer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hemostasis', 'dry-wood_termite')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sphecidae', 'Hippoboscidae')
 (DEBUG) sap(), a == 21719
 (DEBUG) sap('hexadecimal_notation', 'Acer_argutum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scarlet_cup', 'Oscar_Palmer_Robertson')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('spiccato', 'gender_agreement')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('safety_squeeze', 'water_vascular_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jacquard', 'middle-aged_man')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Trinidad_and_Tobago_dollar', 'aconite')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Education_Secretary', 'coral_bush')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Peziza', 'counteroffer')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('drop-down_menu', 'licensing_agreement')
 (DEBUG) sap(), a == 54044
 (DEBUG) sap('Planck's_constant', 'cockateel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('on/off_switch', 'Armillariella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('democratisation', 'Queen's_English')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tom_turkey', 'heterodyne_receiver')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('brachium', 'tillage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Badger_State', 'de_Mille')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('working_capital', 'gelechiid_moth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Metasequoia_glyptostrodoides', 'lacrimal_gland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Colorado_spruce', 'biodefense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bankrupt', 'venturesomeness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ABCs', 'horned_poppy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('reality_principle', 'southern_cabbage_butterfly')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prospector', 'price-fixing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Uncle_Sam', 'family_Cercopidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('haemothorax', 'Aegean_Sea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pillory', 'black_medick')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('grey_whale', 'private_instructor')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Gentiana_andrewsii', 'oriel')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pyramidal_tract', 'trillionth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dacron', 'spring_chicken')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('yellow_lady's_slipper', 'rhinophyma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('quantum_physics', 'phonics')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('adipose_cell', 'telecaster')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('inverse_cosine', 'sausage_roll')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('radio_signal', 'prairie_vole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('safety_bolt', 'Kakatoe_galerita')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('securities_analyst', 'carissa_plum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Firmiana', 'fen_orchid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Weil', 'genus_Butea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Martes_zibellina', 'vacuolisation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('picul', 'bay_lynx')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hurly_burly', 'total_aphasia')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('pneumonoconiosis', 'creeping_thyme')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Peltiphyllum', 'major_suit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rosary', 'Clara_Josephine_Schumann')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('end_matter', 'winged_pigweed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('careerism', 'Basotho')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('exponent', 'camera_lens')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('inconspicuousness', 'valley_girl')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('United_States_Army', 'endoneurium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mercurial_ointment', 'tailing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phaeochromocytoma', 'Barrow's_goldeneye')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('metamere', 'Asian_crocodile')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Marcus_Antonius', 'identity_verification')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_Paul_I', 'Book_of_Malachi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pigment', 'Hellenic_language')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('triple_creme', 'alpha-tocopheral')
 (DEBUG) sap(), a == 74081
 (DEBUG) sap('Orczy', 'pneumococcal_pneumonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('catalytic_converter', 'prickly_pear')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Arctic_wolf', 'yew')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('playground_ball', 'Lemaitre')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rectorship', 'witch_alder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('antherozoid', 'nomia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hussar', 'genus_Bruckenthalia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('telephone_box', 'plexus_hypogastricus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gibbosity', 'shuttle_diplomacy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('random_number_generator', 'genus_Digitalis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('aldol_reaction', 'St._Cloud')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('brushwood', 'strep')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('butte', 'Academy_of_Motion_Picture_Arts_and_Sciences')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('flood_tide', 'Hakenkreuz')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('serratus_anterior', 'school-age_child')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('local_department', 'ferromagnetism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Monochamus', 'capric_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('soda_pop', 'Connemara_heath')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('commercialization', 'physique')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stork', 'Old_French')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('helmet_flower', 'Cycloloma_atriplicifolium')
 (DEBUG) sap(), a == 61246
 (DEBUG) sap('genus_Ilex', 'genus_Dipsosaurus')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('hardstemmed_bulrush', 'grackle')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Kurdistan', 'pauperism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subclass_Rosidae', 'biosafety_level_4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('basileus', 'genus_Brevoortia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tanzanian', 'least_resistance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Microstrobos', 'gofer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('President_Harrison', 'genus_Dolichotis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('western_big-eared_bat', 'mustard_plaster')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('seasoning', 'white_pelican')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('starting_buffer', 'hebdomad')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('runaway_robin', 'freshwater_bass')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bbl', 'Theridiidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Phalaris', 'curb_market')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bernoulli's_law', 'endurance')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('serum_disease', 'common_wolffia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('operating_capability', 'cachet')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bushel', 'valve-in-head_engine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Pteridium', 'battle_of_Trafalgar')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Royal_Canadian_Mounted_Police', 'Annamite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Roger_Huntington_Sessions', 'Bridgeport')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Archaeozoic', 'kangaroo_paw')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Prunus_angustifolia', 'fishing_worm')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Barbara_Wertheim_Tuchman', 'Bonete')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('amoebic_dysentery', 'fall-board')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kangaroo_paw', 'Petaurus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sheep-tick', 'Golda_Meir')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Brezhnev', 'rayon')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Stephane_Mallarme', 'Charles_Digby_Harrod')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('holy_terror', 'os_tarsi_fibulare')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('guidance', 'Skaw')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_Phallales', 'summarisation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('eyehole', 'swimming_hole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('silent_person', 'genus_Tropaeolum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Princess_Grace_of_Monaco', 'stela')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('kraurosis_vulvae', 'frogfish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kid', 'republic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('otologist', 'juvenile_wart')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gyps', 'one-hundred-thousandth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jack-a-lantern', 'boxthorn')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('wild_calla', 'encroacher')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('machinist's_vise', 'Tereshkova')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('purple_fringeless_orchis', 'Scott')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('orange_rind', 'playback')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Pyralidae', 'trou-de-loup')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Antonio_Lucio_Vivaldi', 'fimbria')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cost_of_capital', 'lighter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dreadnought', 'evasive_answer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('volute_spring', 'Japanese_ivy')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('class_fellow', 'sending')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Moranzanist_Patriotic_Front', 'learning')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('thyme-leaved_sandwort', 'polar_star')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('states'_rights', 'Bligh')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('POB', 'manners')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('yellow_sand_verbena', 'pretext')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sydney_Pollack', 'dagga')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Lindsay', 'dyer's_weed')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('TiB', 'rugby_football')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Empirin', 'Alaskan_malamute')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dropseed', 'whacking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tartar', 'illumination_unit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('whang', 'ground_bait')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('BPH', 'wattage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Holy_Scripture', 'bock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tanacetum_camphoratum', 'Prag')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Gambian', 'Andrija_Mohorovicic')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('fifth_column', 'emolument')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('egg', 'self-torment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pholiota_astragalina', 'Pythagoras')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('lummox', 'Ceratonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('billion-dollar_grass', 'superior_planet')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('substantive_dye', 'guessing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Wolffia', 'white_matter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('social_activity', 'reflecting_telescope')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dehiscence', 'anti-sway_bar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Noah's_flood', 'metallic')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Pseudowintera', 'radio_beam')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Nephrops_norvegicus', 'Thomas_Willis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('toddler', 'bridge_hand')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bete_noire', 'frittata')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gong_buoy', 'iron_maiden')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('damselfish', 'genus_Eira')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adynamia', 'petty_larceny')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sodium-vapor_lamp', 'numen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('purplish_blue', 'lip_sync')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('colligation', 'polo-neck_collar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ailurus_fulgens', 'Culvers_root')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hugo_Wolf', 'root_canal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Hirschsprung's_disease', 'dika_bread')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Schwarzwald', 'thundercloud')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('onomasticon', 'Marcel_Marceau')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('required_course', 'Alexander_Calder')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mustang', 'rattlesnake_orchid')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('titivation', 'Alan_Seeger')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('RN', 'archivist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('family_Dasyatidae', 'membrane')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('catabolism', 'genus_Weigela')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fissurella_apertura', 'cert')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ethnic_joke', 'Navratilova')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('farmer's_lung', 'shoulder_vise')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Silphium', 'compost_heap')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('medium_of_exchange', 'coefficient_of_concordance')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('melt', 'bride')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('recovery', 'GU')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('German_mark', 'bootjack')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Loire_River', 'Joyce_Carol_Oates')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Salvia', 'Molisch_test')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('inkwell', 'acute-angled_triangle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('soporific', 'virusoid')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Gan_Jiang', 'monte')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Euclid's_fourth_axiom', 'cruciality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pension_plan', 'hindquarter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('symboliser', 'crookneck')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Long_Island_Sound', 'matelote')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stipend', 'family_Aspleniaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('double_chin', 'Mary')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tachistoscope', 'rabbit_test')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('factor_IV', 'melange')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('snapper', 'dayspring')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('one-half', 'Caesalpinia_bonducella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cotula_coronopifolia', 'sable')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pichiciago', 'family_Viverrinae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adventitia', 'transliteration')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('semicoma', 'vernacular')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Raffia', 'Te_Kanawa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('histidine', 'Daniel_Jones')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('canned_meat', 'American_turkey_oak')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cleanup_position', 'comprehensibility')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Catharanthus_roseus', 'diplopia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Agrippina_the_Elder', 'sphenoidal_fontanelle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stupefaction', 'metacarpus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_Sphaerocarpales', 'perfective_tense')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Dolichos_lablab', 'western_chimpanzee')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('freestone', 'desert_sand_verbena')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('nicotine', 'lambency')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('resultant', 'main')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sergei_Vasilievich_Rachmaninov', 'dental_procedure')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('oxcart', 'green_peach_aphid')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Nile', 'jolt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('campaign_hat', 'fish_lure')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Australian_pea', 'metronome_marking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('state_highway', 'trace_program')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('toffee', 'Ceratophyllaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coordinate_system', 'annual_ring')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ceras', 'Alfred_Joseph_Hitchcock')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sphaerocarpales', 'dissociation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('employment_interview', 'security_measure')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lowercase', 'entrance_exam')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ludian', 'bull_thistle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Oneida', 'easiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('throes', 'judgment_on_the_pleadings')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('firkin', 'playboy')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sacred_text', 'pigman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tra-la', 'Khmer_Rouge')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Orbignya_cohune', 'Geoffrey_Chaucer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Nigerian', 'ism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Constant_Lambert', 'watermark')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('macrophage', 'Curie_point')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('traverser', 'Pluviose')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('straw_mushroom', 'leipoa')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('grebe', 'spinal_nerve')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rating_system', 'drop-seed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Florida', 'tea_biscuit')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('line_of_duty', 'Jatropha_urens')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Beethoven', 'tineoid')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('age', 'cottonwick')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Arctocephalus', 'Maarianhamina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kickshaw', 'patrikin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('subway_train', 'Agave_americana')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('macho', 'Francois_Rabelais')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('review_copy', 'spinning_top')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Proxima', 'cockspur_hawthorn')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('steerageway', 'tapis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('letterman', 'steed')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Scopolia', 'chromatic_vision')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('diabolatry', 'sleeve')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cowry', 'cascades_frog')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('water_softener', 'calendar_day')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('commissar', 'starlight')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Roosevelt', 'Andrew_Huxley')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('mydriatic_drug', 'Iron_Chancellor')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('Cambrian', 'Crotalus_scutulatus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('lamp_house', 'limbers')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('Gheg', 'dwarf_gray_willow')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leonid_Fyodorovich_Myasin', 'Aphasmidia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('New_River_Gorge_Bridge', 'Leningrad')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Parthenium_hysterophorus', 'indulgence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bone_china', 'push-button_radio')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('patrilineage', 'Gheg')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('article_of_faith', 'family_Apocynaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('crackle_china', 'Chippendale')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('deception', 'latent_diabetes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Peter_Goldmark', 'ganglion')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('examination_paper', 'vice_crime')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('thiodiphenylamine', 'fairytale')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pansexual', 'rayon')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Phytomastigina', 'mysophobia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('perishableness', 'jokester')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lesser_bullrush', 'garbage_can')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Elymus_trachycaulos', 'capital_of_Israel')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('jocoseness', 'Bahama_Islands')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Babesiidae', 'real_life')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ursinia', 'Alexander_Wilson')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('inefficacy', 'tall_field_buttercup')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fictitious_name', 'slipperwort')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('business_sector', 'coffee_shop')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('folk_song', 'Frederick')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('churchman', 'paralipsis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('conjugal_visitation_right', 'toasting_fork')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lenard', 'literalness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_unit', 'ice_cream')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fulmar', 'Alpine_lift')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('limerick', 'microradian')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('black_fly', 'extremist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('PAYE', 'extracapsular_surgery')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Indian_currant', 'capital_of_Peru')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('barrelfish', 'chimney_corner')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('leafy_spurge', 'candle_holder')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Coptis', 'candlestick')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Robert', 'Otididae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('field_line', 'Spodoptera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dichondra', 'family_Cercidiphyllaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dreissena_polymorpha', 'Ray_Douglas_Bradbury')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Diodon_hystrix', 'state_of_matter')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('electronic_converter', 'emir')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hip_bath', 'transposition')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mountain_skink', 'great_white_hope')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Sivan', 'cook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('magneto', 'Amorphophallus_campanulatus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Raffaello_Sanzio', 'tri-chad')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('paper-back_book', 'insularism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spikemoss', 'bear_claw')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Ulugh_Muz_Tagh', 'bell_glass')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Communist_Party_of_Kampuchea', 'Brother')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('keratoscleritis', 'billiard_marker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cartilaginous_structure', 'death_duty')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('new_penny', 'turnabout')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mustard_family', 'grocer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tubal_ligation', 'Noah's_flood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('common_sunflower', 'switchboard_operator')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('withering', 'Republic_of_Slovenia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Picris_echioides', 'Lord_Rayleigh')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('staplegun', 'English_person')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('market_price', 'civic_center')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('overthrust_fault', 'Carassius_carassius')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('appellation', 'nucleoside_reverse_transcriptase_inhibitor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Queckenstedt's_test', 'counter_tube')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Peter_the_Great', 'IIS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cheatgrass', 'beacon_fire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('free_morpheme', 'phylum_Aschelminthes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('arere', 'genus_Verbesina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pilot_experiment', 'Collinsia_bicolor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('judicial_writ', 'fair-trade_agreement')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('Tupac_Amaru_Revolutionary_Movement', 'nybble')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Caesalpinia_echinata', 'Areopagite')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Bellini', 'vocational_training')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Istiophorus', 'porkfish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('extrovert', 'finger_paint')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pluralisation', 'stratosphere')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lillie_Langtry', 'Chaim_Soutine')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('screw_augur', 'phoneme')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cardiogenic_shock', 'Ulysses_Grant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Symplocus_tinctoria', 'Persepolis')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('hypovitaminosis', 'unboundedness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('dampening', 'Rodgers')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('color_force', 'headcheese')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('SI_unit', 'hue_and_cry')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('heteroploid', 'Russian_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('particle_physics', 'zinc_sulfate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bushido', 'toxicognath')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mulled_wine', 'toby')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('bassine', 'banjo')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fine_art', 'genus_Lobotes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('theatrical_poster', 'haemothorax')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Erodium', 'upper_balcony')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anecdote', 'stripping')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('major_form_class', 'dermabrasion')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('junior_middleweight', 'English_bean')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('superfamily_Hominoidea', 'tipper_truck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Marley', 'Entoprocta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('purse_strings', 'teapot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ortega', 'pendant_earring')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('arere', 'bait')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cadmium_yellow', 'Donald_Duck')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('acrostic', 'film_director')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Anne_Sexton', 'special_K')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('raffle', 'law_of_constant_proportion')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('moviemaking', 'gunpoint')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('adobe_lily', 'genus_Sphenodon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('candyfloss', 'visual_image')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cynodont', 'birdfeeder')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Baiomys', 'June_bug')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hail', 'budgerygah')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('electron_shell', 'reorder')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Nepa', 'Hindostani')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('TOPV', 'pressure_cabin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Rosicrucianism', 'hypermarket')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sympathetic_vibration', 'Democratic_and_Popular_Republic_of_Algeria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('smidgeon', 'Yom_Kippur')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('control_character', 'lateral_line')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('distinctive_feature', 'Kingdom_of_Belgium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prairie_lotus', 'market_penetration')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('green_hellebore', 'gooseberry_family')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('British', 'Isaiah')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('smiley', 'marsh_marigold')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Colbert_butter', 'family_Psocidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('continuo', 'transubstantiation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('enlistment', 'Felicia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Prenanthes_purpurea', 'pine-barren_sandwort')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('pave', 'Ulmus_campestris_sarniensis')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('alkaline_metal', 'sourdough_bread')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('drawback', 'Libyan_Islamic_Group')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('idiot_light', 'Flavian_dynasty')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ESOP', 'Branta_canadensis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('materialist', 'BVD')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pumpkin', 'coast_white_cedar')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('re-experiencing', 'recursive_routine')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('wire-haired_terrier', 'left_hemisphere')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('aspergillosis', 'teddy_boys')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('threadfin', 'scattering')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('joint_return', 'developmental_psychology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('notepaper', 'sway')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Loch_Linnhe', 'Wollstonecraft')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('turf', 'computer-aided_design')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('star_fruit', 'government_office')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('supraorbital_vein', 'Hilary_Rodham_Clinton')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hypogastric_artery', 'outlet')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('champerty', 'demilitarized_zone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Australian_crawl', 'Fomes_igniarius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('metadata', 'Gossypium_peruvianum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arteria_pudenda', 'southern_buckthorn')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Elagatis_bipinnulata', 'usurpation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rubus_cuneifolius', 'faery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('heliopsis', 'logic_element')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Joseph_Hooker', 'Marie_Jeanne_Becu')
 (DEBUG) sap(), a == 81626
 (DEBUG) sap('screw-pine_family', 'orthography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('properness', 'Leaning_Tower')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Northern_Ireland', 'dinoceras')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Asimina_triloba', 'Johann_Wolfgang_von_Goethe')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('bitchery', 'northwester')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('combat_neurosis', 'Ruta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tonsil', 'Ptolemy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('treasury', 'parasail')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('petulance', 'ullage')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fryer', 'Grenoble')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('thyroxin', 'escalator')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('capital_of_Tibet', 'irridentist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('celery_stick', 'queen_regent')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('transactinide', 'quahog')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Juglandales', 'covered_stand')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stabiliser', 'ethic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mohammad', 'facility')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('battle_of_Pittsburgh_Landing', 'enterprise')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('observation_tower', 'Lower_Tunguska')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('musical_note', 'gunk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sideboard', 'zoril')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Monday', 'fern_palm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Islamic_calendar', 'genus_Dasyatis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('American_plaice', 'Lascaux')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Batis_maritima', 'leisure_time')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phenolphthalein', 'block')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('offbeat', 'zinc_blende')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tiberius_Claudius_Nero_Caesar_Augustus', 'nodal_rhythm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Elisha_Graves_Otis', 'psyche')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('organophosphate_nerve_agent', 'Paxton')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('ginger', 'Jacob')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('goody', 'meter_reading')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Sciaenops', 'sorting_program')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Valium', 'garden_pink')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sawing_machine', 'tektite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('puppet_state', 'artillery_shell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('caprine_animal', 'Robert_Mitchum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('steerer', '1960s')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('penicillin_G', 'marker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('stencil', 'crack-up')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('true_toad', 'downiness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('duckpins', 'Sunni')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Reno', 'sitar_player')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Republic_of_Indonesia', 'houseboat')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Physeteridae', 'contact_microphone')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('conveyancing', 'comb-out')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('reproval', 'Bath')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scimitar', 'ion_pump')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('semitrance', 'calcium_hydride')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Helipterum', 'wholeheartedness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('thurible', 'maw')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('restitution', 'REM')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('coffee_table', 'lady_crab')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Buxaceae', 'pop_bottle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('public_defender', 'Hylocichla_guttata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('moving_picture', 'dozens')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('devoutness', 'German_tamarisk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cleft', 'heart_urchin')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('anatomical_reference', 'opposition')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jade_green', 'Giambattista_Marini')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('protrusion', 'Oceanus')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('ground_plan', 'Carnot's_ideal_cycle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('quadruple_time', 'Pakistan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('EDS', 'genus_Thryothorus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('disposable', 'ski_jumping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('red_fox', 'defibrillator')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('digitalisation', 'remand')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('genus_Helianthus', 'adipic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sandalwood', 'goora_nut')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Cirsium', 'awe')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('practice_session', 'merit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('law_of_multiple_proportions', 'traction')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('genus_Trilisa', 'Strait_of_Ormuz')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dragon_arum', 'Native_Hawaiian')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('transubstantiation', 'Saxe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tabi', 'balloon_bomb')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('orach', 'tensiometer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('rosin_bag', 'jumping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Angara', 'serving_cart')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dipole', 'combination_lock')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('Dae-Han-Min-Gook', 'death_duty')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('barbecuing', 'imagination_image')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('common_carrier', 'Boston_brown_bread')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tympanum', 'family_Apiaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Rhyacotriton', 'arteria_infraorbitalis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stargazer', 'adverse_witness')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('nosebleed', 'canebrake_rattlesnake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('danger_line', 'archduke')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ordinal_number', 'telepathy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('he-goat', 'Ethiopian')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('deck_of_cards', 'Epstein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cape_Verde', 'perithecium')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Napier's_bones', 'Revolutionary_Organization_of_Socialist_Muslims')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dingbat', 'sackbut')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('pyxidium', 'common_bean_plant')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hardwood', 'Eira_barbara')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('draw_poker', 'rambutan_tree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Canadian_Maritime_Provinces', 'book_bag')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('genus_Pagrus', 'Gustav_Hertz')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('androgyne', 'maglev')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Burgoyne', 'speckled_alder')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Panonychus', 'sun_porch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chomsky', 'pet_sitting')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('class_Mastigophora', 'Geryon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('reverse_gear', 'esprit_de_corps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cell_doctrine', 'daily_round')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('family_Cordaitaceae', 'spelaeologist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('table_knife', 'garden_balm')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('backband', 'breast_of_veal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('toweling', 'furniture_maker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Angus', 'John_the_Baptist')
 (DEBUG) sap(), a == 34389
 (DEBUG) sap('entoparasite', 'oyster_plant')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('toner', 'family_Alismataceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('radiotelegraph', 'Ismailism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('track_and_field', 'Richard_Morris_Hunt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Moses_Maimonides', 'western_coral_snake')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Carolina_moonseed', 'library_catalog')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('myxovirus', 'Allium_haematochiton')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('fecal_occult_test', 'dogmatist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('riskiness', 'Loretta_Young')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cambodia', 'Chippewaian')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('The_Star-Spangled_Banner', 'El-Aksur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('DDS', 'rockery')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('var.', 'envoi')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('IWW', 'grey_snapper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pompadour', 'Mustagh_Range')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pud', 'eclogue')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('metronome', 'Occitan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('disentanglement', 'embryoma_of_the_kidney')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bucket_shop', 'Nile_River')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ineptness', 'supper_club')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Viola_tricolor_hortensis', 'puddingwife')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('circlet', 'prostitution')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('nun's_habit', 'frontal_lobotomy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('briard', 'titania')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('centimo', 'diplotene')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('sumac_family', 'Hippolyte_Jean_Giraudoux')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Windy_City', 'antiflatulent')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('frozen_orange_juice', 'hunting_licence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rembrandt_van_Rijn', 'tendonitis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Tenrecidae', 'Lavatera')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('filtration', 'Ligularia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Cryptobranchus', 'coadjutor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pesantren', 'Epilobium_canum_canum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crypt', 'trinity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('PA_system', 'glucoside')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Bercy', 'Amen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('laetrile', 'Senhor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('term_of_office', 'disrupting_explosive')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Amaryllis', 'Usnea')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('suffrage', 'hangar_queen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('puckerbush', 'token_payment')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Anoa', 'deformation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Tautoga', 'turreae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Stylomecon', 'unearned_increment')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mineshaft', 'impotence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('looking-glass_plant', 'campong')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('ovipositor', 'transmission_channel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('compsognathus', 'genus_Lomatia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('encephalography', 'congo_gum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('belemnite', 'concoction')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('acoustic_delay_line', 'bordelaise')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Ranunculaceae', 'winkle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contemptuousness', 'sender')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('meerkat', 'Ulmus_hollandica')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('line_of_scrimmage', 'Fortuna')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Kendal_green', 'bolognese_pasta_sauce')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('van_Gogh', 'Indochina')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Marattia', 'overlordship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sense_of_movement', 'Paliurus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('spiritualty', 'Juncaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('filaggrin', 'documentation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ayatollah', 'accusative')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cessation', 'excogitation')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('acetanilide', 'Siberian')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('peeress', 'minesweeper')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Manchu_dynasty', 'masquer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Corsican_Army', 'Pecos_River')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Karelia', 'Nanna')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('heath_hen', 'orchestra')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trinitrotoluene', 'cross-eye')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pood', 'cheese_spread')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Passamaquody', 'ridiculousness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('horse_breeding', 'pteroylmonoglutamic_acid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Bucephala', 'galvanic_cell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cinchonine', 'real_McCoy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sagacity', 'genus_Lophophora')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('eggbeater', 'confidant')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Eastertide', 'family_Euphorbiaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('oculus_sinister', 'broad_bean')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('inclination', 'rydberg')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('eager', 'genus_Onoclea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Nationalist_China', 'stiff_upper_lip')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Malayan', 'cirripede')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('uttermost', 'rec_room')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lesvos', 'heaps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_Bach_McMaster', 'Prunus_padus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Lubumbashi', 'Windy_City')
 (DEBUG) sap(), a == 29509
 (DEBUG) sap('blue_lotus', 'inorganic_chemistry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Elsa_Schiaparelli', 'genus_Arethusa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('suet', 'Bordeaux_wine')
 (DEBUG) sap(), a == 74082
 (DEBUG) sap('indeterminateness', 'penis_envy')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Japanese_oyster', 'Sanchez')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('nondirectional_antenna', 'cattle_egret')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('azo_group', 'trekker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hunter-gatherer', 'film_making')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('great_skua', 'genus_Podiceps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dasypus', 'viremia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hemoglobinuria', 'cockatoo_parrot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Acanthuridae', 'Markov_chain')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('xanthomonad', 'honcho')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('department_of_English', 'human_language_technology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('blue_flag', 'Chilean_peso')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('inferno', 'cola')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ostensorium', 'Davys')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Antonio_Allegri_da_Correggio', 'nuclear_reaction')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('penetrability', 'Thomas_Carew')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('singleton', 'bauxite')
 (DEBUG) sap(), a == 53454
 (DEBUG) sap('vibrato', 'macumba')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cubic_measure', 'pool_ball')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Galton', 'toque')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('blank_verse', 'spinach_mustard')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('teacher's_pet', 'Argonauta_argo')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('tristearin', 'dado')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sulcus', 'Quercus_nigra')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Myliobatidae', 'beth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Canadian_goose', 'komondor')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('boiling_water_reactor', 'choky')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('central_office', 'Blennioidea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vector_decomposition', 'eiderdown')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pinata', 'disappearance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('horseradish', 'letter_carrier')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('sego_lily', 'digs')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Calycanthus_occidentalis', 'Greek_architecture')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Liatris', 'Phlox_bifida')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('atomic_number_96', 'Austrian')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Loxitane', 'Pyrrhuloxia_sinuata')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('government_department', 'Baphia_nitida')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('uterine_tube', 'rabbet_joint')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('treasure_chest', 'stirrup')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('Erythrocebus', 'black_marlin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gospel', 'hemoprotein')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Wynnea_americana', 'blinking')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('callback', 'California_black_walnut')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('James_Bowie', 'Flying_Dutchman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Oxyuranus', 'ticket_book')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sphyrna_tiburo', 'Nicholas_Vachel_Lindsay')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('sunray_pleat', 'automobile')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('critter', 'genus_Pavonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plains_lemon_monarda', 'Ciconia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypercholesteremia', 'sculpture')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('whitebarked_pine', 'Jelly_Roll_Morton')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('hooligan', 'innervation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('LBJ', 'insect_powder')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Socrates', 'rug')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('foster_care', 'coal_scuttle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Silverstein', 'gooney_bird')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('sight_bill', 'fingerboard')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('bull_terrier', 'climb')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Remembrance_Day', 'coconut_milk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Euglenaceae', 'genus_Hazardia')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('neurological_disease', 'NH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deluge', 'University_of_Paris')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Anglican_Church', 'title_bar')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('lindy_hop', 'Smyrna')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cardsharp', 'Canadian_fleabane')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('psi_particle', 'peptidase')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('anime', 'Sabbath_school')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('raillery', 'samsara')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Wollstonecraft', 'venture_capitalism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('represser', 'hyperkinetic_syndrome')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gram's_procedure', 'great_adductor_muscle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('insured_person', 'Tb')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('obligate_anaerobe', 'Atriplex_mexicana')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Station_of_the_Cross', 'standard_time')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hydrazine', 'family_Leitneriaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('akaryocyte', 'Henry')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('Decumaria_barbara', 'mutation')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('steam_heating', 'fuschia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('inconsideration', 'Oscar_Palmer_Robertson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dogcart', 'plain_wanderer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('moving-picture_show', 'harum-scarum')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('roofy', 'garden_webworm')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('light_time', 'supertitle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dactylis', 'hart')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Heliobacter', 'ling_ko')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nurse-patient_relation', 'Crocethia_alba')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Republic_of_Moldova', 'methionine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('trucking_rig', 'dump')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('crude_oil', 'scenario')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Etna', 'fop')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dry_wall', 'Clydesdale_terrier')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Tragelaphus_buxtoni', 'robin')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('clearance_sale', 'dust_wrapper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('harakiri', 'Ariadne')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('seedbed', 'patriot')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('quickset', 'armed_services')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Lobeliaceae', 'flying_bird')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('siphon', 'cubeb')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('battle_of_Minden', 'thermonuclear_bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hagiographa', 'midden')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('capital_of_Nevada', 'Arundo_donax')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Ophiodon', 'ADHD')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('drum_brake', 'mascara')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('genus_Certhia', 'ticker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Robert_Bruce_Mathias', 'cavalier_hat')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('handcraft', 'Coregonus_artedi')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('shoulder_flash', 'realgar')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('thirty-second_part', 'octonary')
 (DEBUG) sap(), a == 57187
 (DEBUG) sap('photoelectricity', 'curmudgeon')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('empty_talk', 'subdivision_Ginkgophytina')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Scarface', 'Gulliver')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('educatee', 'parlay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('colonization', 'mores')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('paigle', 'NSU')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coming_together', 'financial_organisation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('revision', 'Republic_of_Panama')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('file_cabinet', 'ketone')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Trusteeship_Council', 'K-Dur_20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('polyphonic_prose', 'Bang's_disease')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cannibal', 'Pneumovax')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Equus_kiang', 'visiting_fireman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('family_Formicidae', 'malfeasance')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gambol', 'Isospondyli')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('warehouseman', 'genus_Proteles')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vocal_band', 'barker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sweet_balm', 'Turkmen_monetary_unit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ackee', 'James_Prescott_Joule')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('candlenut', 'Cochlearius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bleaching_clay', 'genus_Gloxinia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('caramel', 'order_Siphonaptera')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('estimation', 'visible_horizon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('powdery_mildew', 'immediate_apprehension')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('danseur_noble', 'Gossypium_barbadense')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('electromagnetic_radiation', 'hanky_panky')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('myeloblast', 'prairie_rattler')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('cigar_band', 'genus_Mycoplasma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('palanquin', 'Maritimes')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('genus_Balsamorhiza', 'modality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('heat_engine', 'vigilantism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kink', 'grey_poplar')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ditch_spade', 'stone_fly')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('subordination', 'chump')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gulf_of_Thailand', 'mire')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('grandson', 'scorpion_shell')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('John_Bartlett', 'dark_field_illumination')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pimozide', 'tribe_synercus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('centner', 'clangoring')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('macadamia', 'card_shark')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('holm_oak', 'foxhound')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('mopes', 'ozocerite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('batting_cage', 'travel_plan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cormous_plant', 'fading_away')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Myotis', 'low_comedy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('inebriant', 'laurel_family')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('goldbrick', 'droshky')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gospel_truth', 'stake_race')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Galahad', 'Restoration')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Polynesian_tattler', 'poundal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Decumaria', 'St._Mary_Magdalene')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('red-legged_partridge', 'Coereba')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bellarmine', 'thimbleful')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('degeneracy', 'homecoming')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pesantren', 'genus_Myriophyllum')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('lepidophobia', 'language_system')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('surmounter', 'smooth_winterberry_holly')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('coastal_plain', 'drug_of_abuse')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Silvia_atricapilla', 'pamphleteer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('experimentation', 'Holocentridae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chorioretinitis', 'Luculus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blasting_cap', 'flat_wash')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('cranial_orbit', 'James_Dewey_Watson')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('deference', 'highland_fling')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Boer_War', 'Idria_columnaris')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Toxicodendron_radicans', 'cascades_frog')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('lamentation', 'show_window')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Phyllostomus', 'Aepyceros')
 (DEBUG) sap(), a == 52887
 (DEBUG) sap('Hohenzollern', 'pyrotechnics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Afghanistani', 'fullback')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('jumping_gene', 'pauper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('daylight_saving', 'free_trade')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('star_grass', 'Milky_Way_Galaxy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crash', 'text')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Fritillaria_recurva', 'James_Wyatt')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Houdini', 'geographer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('genus_Lysichitum', 'glutamate')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('old_witchgrass', 'tonsure')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('tinfoil', 'winemaking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cottonseed_oil', 'cajan_pea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Alepisaurus', 'pusillanimousness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('tea_maker', 'Ian_Douglas_Smith')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('megalosaurus', 'linolenic_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sounding_board', 'sago_fern')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Passover', 'genus_Chamaemelum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('kenosis', 'majolica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mythology', 'fuller')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('working_out', 'jotting')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('linguistic_performance', 'surface_tension')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('commencement', 'R-2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('red_silk-cotton_tree', 'glade')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('cord', 'David_Barnard_Steinman')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Oryzopsis', 'Ilex_decidua')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('homestead_law', 'caesarian_section')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('commercial_treaty', 'Rejoicing_of_the_Law')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ailey', 'menadione')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('maidservant', 'Onopordum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('madness', 'Coprinus_comatus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Notemigonus', 'uraninite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ecdysiast', 'home_front')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Cyprus', 'poor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mahdist', 'Verbascum_phoeniceum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('flower_garden', 'ice_plant')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('family_Vombatidae', 'grotesquery')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('green_lacewing', 'Robert_Anson_Heinlein')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('fuel_oil', 'cretonne')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('equilibrium_constant', 'Sindhi')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('skeg', 'transmutation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bertholletia_excelsa', 'Cornwallis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('coterie', 'Justice')
 (DEBUG) sap(), a == 71315
 (DEBUG) sap('life_scientist', 'genus_Cynoscion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hebbel', 'smiler')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('alleyway', 'gristle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('political_science', 'global_organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('center_fielder', 'Blackfriar')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('scratch_test', 'Ehadhamen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gray_matter', 'Greta_Louisa_Gustafsson')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('inguinal_hernia', 'tetrachloride')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Corticium_salmonicolor', 'Lehar')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Canada_anemone', 'Kinosternon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('arbutus', 'daddy_longlegs')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('myocarditis', 'melancholy_thistle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('McCartney', 'bar_mask')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lower_respiratory_tract_smear', 'nurse')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Poephila_castanotis', 'baccarat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grandniece', 'bottle_bill')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('St._Simon', 'suicide_bomber')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('self-adapting_program', 'Dinka')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('Branta_bernicla', 'Frankliniella')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cupbearer', 'sudorific')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('striation', 'cream_sauce')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Lecythidaceae', 'trash_dump')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('order_Apodiformes', 'slate_club')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Telopea_speciosissima', 'Tarheel')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Megadermatidae', 'sedateness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('karakul', 'faecal_occult_test')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tsuga_canadensis', 'Sarpanitu')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Viola_blanda', 'canfield')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contract', 'congo_snake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coureur_de_bois', 'tsine')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('mediateness', 'toothed_spurge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sea_aster', 'nosiness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sawm', 'tootle')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('subclass_Homobasidiomycetes', 'infantry')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('mining_bee', 'highland')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('ferricyanic_acid', 'Samuel_Pepys')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Arrhenatherum', 'Colorado_blue_spruce')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Hipposideridae', 'sport_jacket')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('selenology', 'dough')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sabbatia', 'deriving')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('plumpness', 'Laminaria')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('criminal_conversation', 'Mercator_projection')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gallows_bird', 'Nutmeg_State')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('IVP', 'Danish_blue')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('solar_system', 'whitehead')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('eosinophile', 'Christian_Church')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Boltzmann_distribution_law', 'liposarcoma')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cold_cereal', 'alalia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('warfarin', 'Hogan')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('third_eye', 'Lilium_longiflorum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('visual_percept', 'diamante')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Transfiguration_Day', 'sparkle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('English-Gothic_architecture', 'dressing_station')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sylvanus', 'calf_roping')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Robert_Anson_Heinlein', 'commonplaceness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Myroxylon_toluiferum', 'expanding_upon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Empirin', 'southwestern_toad')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cookie', 'Santa_Lucia_fir')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('inkle', 'Cephalotus_follicularis')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Western_Empire', 'drawbar')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('chop_shop', 'Meconopsis_cambrica')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Lactarius_delicioso', 'genus_Grindelia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('California_white_oak', 'Salix_sericea')
 (DEBUG) sap(), a == 77641
 (DEBUG) sap('genus_Atherurus', 'radiophoto')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('must', 'preferred_shares')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phot', 'whaling_gun')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('swamp_lily', 'sheikh')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('aspartame', 'peak_season')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('United_Nations_Children's_Fund', 'egomania')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('common_scold', 'public_square')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('austerity', 'map_maker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anterior_pituitary_gland', 'hematoidin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Adlumia', 'Przevalski's_horse')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('James_IV', 'energy_of_activation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Eumetopias_jubatus', 'jodhpur')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Seiurus', 'Haliaeetus_pelagicus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bucksaw', 'obscurity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Actiniopteris', 'thirty-something')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Phillyrea', 'banality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('filaree', 'golf_cart')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('vaccinum', 'marasca')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('workstation', 'ironweed')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('transmutability', 'battle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pin', 'men's')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('icosahedron', 'hurdy-gurdy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('thousand', 'footwall')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('broadcasting_station', 'Yahwe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('knob', 'gas_system')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('mechanism', 'rainbow')
 (DEBUG) sap(), a == 23790
 (DEBUG) sap('one_dollar_bill', 'propitiousness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Australian_sword_lily', 'exoderm')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('partisanship', 'Wotan')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('order_Erysiphales', 'manglietia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('obsolescence', 'inaugural_address')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clear_sailing', 'warhead')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Symphytum', 'gallous')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('earth_god', 'everlasting_pea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('subfamily_Carpinaceae', 'snowdrop_tree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clip_art', 'Nikita_Sergeyevich_Khrushchev')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Magnolia_State', 'Giulio_de'_Medici')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Grim_Reaper', 'reading_material')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('jungle_gym', 'merino')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gomuti_palm', 'Megalobatrachus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Surmontil', 'collection')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Holy_Joe', 'capital_of_Tanzania')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Marcel_Marceau', 'impressiveness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Selenicereus', 'law_of_proximity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('red_jungle_fowl', 'thruway')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Fatimah', 'spectre')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fringe_bush', 'hamadryad')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Ulex', 'honey_mesquite')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spin-off', 'kiss_curl')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('class_Sporozoa', 'dill_seed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('idiot_light', 'puller')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pectoralis', 'June_grass')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('garlic', 'barony')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('parfait', 'anathematization')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Rochambeau', 'honour')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Charles_Henry_Harrod', 'leavening')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lorgnette', 'rubber')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('East_Midland', 'New_South_Wales')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curtailment', 'South_of_Houston')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sarcocephalus', 'eyedness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Fomor', 'twiddle')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('contextualism', 'leucaemia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('five', 'fresh_breeze')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Bengal_rose', 'fat_embolism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crottal', 'sal_volatile')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('cassia-bark_tree', 'cottonseed_cake')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Afghanistani', 'undergraduate')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Rosa_Ponselle', 'browsing')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Oenothera', 'judicature')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('churchgoer', 'sheik')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('speech', 'Matthias_Schle
Total: 0/8 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.40 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.00
  outcast29.txt   29     0.00
=&gt; passed, total elapsed time: 0.01

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 08:10:21</td></tr>
        <tr><td>Raw Score</td><td>50.36 / 100.00</td></tr>
                <tr><td>Feedback</td><td>See the <a href="https://class.coursera.org/algs4partII-007/wiki/view?page=Assessments">Assessment Guide</a> for information on how to interpret this report. <h2>
Assessment Summary</h2>
<pre>Compilation:  <font color="#009900">PASSED</font>
Style:        <font color="#990000">FAILED</font>
Findbugs:     <font color="#990000">Potential bugs found.</font>
API:          <font color="#009900">PASSED</font>

Correctness:  <font color="#997200">15/35 tests passed</font>
Memory:       <font color="#009900">4/4 tests passed</font>
Timing:       <font color="#999900">8/16 tests passed</font>

Aggregate score: <font color="#969900">50.36%</font> [Correctness: 65%, Memory: 10%, Timing: 25%, Style: 0%]</pre><h2>


Assessment Details
</h2>
<pre>The following files were submitted:
----------------------------------
total 24K
-rw-r--r-- 1 1.2K Apr 30 15:09 Outcast.java
-rw-r--r-- 1 4.3K Apr 30 15:09 SAP.java
-rw-r--r-- 1 7.9K Apr 30 15:09 WordNet.java
-rw-r--r-- 1 3.7K Apr 30 15:09 studentSubmission.zip


********************************************************************************
*          COMPILING                                                           *
********************************************************************************


% javac SAP.java
*-----------------------------------------------------------

================================================================

% javac WordNet.java
*-----------------------------------------------------------

================================================================

% javac Outcast.java
*-----------------------------------------------------------

================================================================



% checkstyle *.java
*-----------------------------------------------------------
SAP.java:1: Do not use .* in import statements.
SAP.java:10:1: File contains tab characters (this is the first instance). Configure your editor to replace tabs with spaces.
SAP.java:10:21: Instance variable '_g' should start with a lowercase letter and use camelCase.
SAP.java:32:14: 'while' is not followed by whitespace.
SAP.java:35:15: 'if' is not followed by whitespace.
SAP.java:37:19: 'if' is not followed by whitespace.
SAP.java:66:14: 'while' is not followed by whitespace.
SAP.java:68:15: 'if' is not followed by whitespace.
SAP.java:70:19: 'if' is not followed by whitespace.
SAP.java:89:11: 'if' is not followed by whitespace.
SAP.java:97:12: 'for' is not followed by whitespace.
SAP.java:101:14: 'while' is not followed by whitespace.
SAP.java:103:15: 'if' is not followed by whitespace.
SAP.java:119:11: 'if' is not followed by whitespace.
SAP.java:126:12: 'for' is not followed by whitespace.
SAP.java:129:14: 'while' is not followed by whitespace.
SAP.java:131:15: 'if' is not followed by whitespace.
WordNet.java:4: Do not use .* in import statements.
WordNet.java:7:8: Unused import statement for 'edu.princeton.cs.algs4.StdIn'.
WordNet.java:12:1: File contains tab characters (this is the first instance). Configure your editor to replace tabs with spaces.
WordNet.java:13:13: Instance variable 'Index' should start with a lowercase letter and use camelCase.
WordNet.java:13:13: Variable 'Index' should be private.
WordNet.java:14:22: Instance variable 'Words' should start with a lowercase letter and use camelCase.
WordNet.java:14:22: Variable 'Words' should be private.
WordNet.java:15:16: Instance variable 'Description' should start with a lowercase letter and use camelCase.
WordNet.java:15:16: Variable 'Description' should be private.
WordNet.java:18:48: Instance variable '_words' should start with a lowercase letter and use camelCase.
WordNet.java:19:38: Instance variable '_synsetIndexes' should start with a lowercase letter and use camelCase.
WordNet.java:20:21: Instance variable '_digraph' should start with a lowercase letter and use camelCase.
WordNet.java:25:10: 'if' is not followed by whitespace.
WordNet.java:27:10: 'if' is not followed by whitespace.
WordNet.java:37:17: Method 'construct_synsets' should start with a lowercase letter and use camelCase.
WordNet.java:42:13: 'while' is not followed by whitespace.
WordNet.java:42:55: ')' is preceded with whitespace.
WordNet.java:49:15: 'for' is not followed by whitespace.
WordNet.java:51:56: Do not use the ternary conditional operator on Coursera programming assignments.
WordNet.java:67:17: Method 'construct_hypernyms' should start with a lowercase letter and use camelCase.
WordNet.java:73:13: 'while' is not followed by whitespace.
WordNet.java:77:15: 'for' is not followed by whitespace.
WordNet.java:84:15: 'for' is not followed by whitespace.
WordNet.java:91:10: 'if' is not followed by whitespace.
WordNet.java:96:10: 'if' is not followed by whitespace.
WordNet.java:112:10: 'if' is not followed by whitespace.
WordNet.java:120:10: 'if' is not followed by whitespace.
WordNet.java:122:10: 'if' is not followed by whitespace.
WordNet.java:124:10: 'if' is not followed by whitespace.
WordNet.java:126:10: 'if' is not followed by whitespace.
WordNet.java:136:31: Method 'get_ids_by_word' should start with a lowercase letter and use camelCase.
WordNet.java:139:11: 'for' is not followed by whitespace.
WordNet.java:148:10: 'if' is not followed by whitespace.
WordNet.java:150:10: 'if' is not followed by whitespace.
WordNet.java:152:10: 'if' is not followed by whitespace.
WordNet.java:154:10: 'if' is not followed by whitespace.
WordNet.java:164:10: 'if' is not followed by whitespace.
WordNet.java:176:24: Method 'should_throw_if_not_rooted_DAG' should start with a lowercase letter and use camelCase.
WordNet.java:176:56: '{' is not preceded with whitespace.
WordNet.java:181:51: ')' is preceded with whitespace.
WordNet.java:184:10: 'if' is not followed by whitespace.
WordNet.java:193:51: ')' is preceded with whitespace.
WordNet.java:196:10: 'if' is not followed by whitespace.
WordNet.java:202:24: Method 'should_throw_if_cycles' should start with a lowercase letter and use camelCase.
WordNet.java:202:48: '{' is not preceded with whitespace.
WordNet.java:207:51: ')' is preceded with whitespace.
WordNet.java:210:10: 'if' is not followed by whitespace.
WordNet.java:219:51: ')' is preceded with whitespace.
WordNet.java:222:10: 'if' is not followed by whitespace.
WordNet.java:228:24: Method 'should_ancestor_for_worm_and_bird' should start with a lowercase letter and use camelCase.
WordNet.java:228:59: '{' is not preceded with whitespace.
WordNet.java:232:10: 'if' is not followed by whitespace.
Outcast.java:1: Do not use .* in import statements.
Outcast.java:3:8: Unused import statement for 'edu.princeton.cs.algs4.Queue'.
Outcast.java:4:8: Unused import statement for 'edu.princeton.cs.algs4.Digraph'.
Outcast.java:5:8: Unused import statement for 'edu.princeton.cs.algs4.StdIn'.
Outcast.java:9:1: File contains tab characters (this is the first instance). Configure your editor to replace tabs with spaces.
Outcast.java:9:21: Instance variable '_wordNet' should start with a lowercase letter and use camelCase.
Outcast.java:20:12: 'for' is not followed by whitespace.
Outcast.java:23:16: 'for' is not followed by whitespace.
Outcast.java:24:19: 'if' is not followed by whitespace.
Outcast.java:28:15: 'if' is not followed by whitespace.
Outcast.java:28:47: '{' is not preceded with whitespace.
Checkstyle ends with 80 errors.

================================================================


% findbugs *.class
*-----------------------------------------------------------
H D DLS_DEAD_LOCAL_STORE DLS: Dead store to $L1 in WordNet.should_throw_if_not_rooted_DAG()  At WordNet.java:[line 191]
H D DLS_DEAD_LOCAL_STORE DLS: Dead store to $L1 in WordNet.should_throw_if_cycles()  At WordNet.java:[line 217]
M B ES_COMPARING_STRINGS_WITH_EQ ES: Comparison of String objects using == or != in Outcast.outcast(String[])   At Outcast.java:[line 24]
M P URF_UNREAD_FIELD UrF: Unread field: WordNet$Synset.Description  At WordNet.java:[line 47]
Warnings generated: 4

================================================================


Testing the APIs of your programs.
*-----------------------------------------------------------
SAP:

WordNet:

Outcast:

================================================================


******************************************************************************
*          CORRECTNESS
******************************************************************************

Testing methods in SAP
*-----------------------------------------------------------
Running 19 total tests.

Test 1: test length() and ancestor() on fixed digraphs
  *  digraph1.txt
     -  failed on trial 1 of 169
     -  v = 3, w = 3
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 3
  *  digraph2.txt
     -  failed on trial 1 of 36
     -  v = 2, w = 0
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 0
  *  digraph3.txt
     -  failed on trial 1 of 225
     -  v = 7, w = 11
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  digraph4.txt
     -  failed on trial 1 of 100
     -  v = 0, w = 8
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  digraph5.txt
     -  failed on trial 2 of 484
     -  v = 10, w = 10
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 10
  *  digraph6.txt
     -  failed on trial 1 of 64
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  digraph9.txt
     -  failed on trial 1 of 81
     -  v = 1, w = 6
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 3
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 2: check length() and ancestor() on WordNet digraph
  *  100 random vertex pairs in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 48507, w = 56321
     -  student   length   = -1
     -  reference length   = 21
     -  student   ancestor = -1
     -  reference ancestor = 60600
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3: check length() and ancestor() on directed paths
  *  5
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 1
  *  10
     -  failed on trial 1 of 100
     -  v = 9, w = 3
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 9
  *  20
     -  failed on trial 1 of 400
     -  v = 18, w = 7
     -  student   length   = -1
     -  reference length   = 8
     -  student   ancestor = -1
     -  reference ancestor = 18
  *  50
     -  failed on trial 1 of 2500
     -  v = 19, w = 36
     -  student   length   = -1
     -  reference length   = 39
     -  student   ancestor = -1
     -  reference ancestor = 36
  *  100
     -  failed on trial 1 of 10000
     -  v = 14, w = 89
     -  student   length   = -1
     -  reference length   = 62
     -  student   ancestor = -1
     -  reference ancestor = 89
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 4: check length() and ancestor() on directed cycles
  *  5
     -  failed on trial 1 of 25
     -  v = 1, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  10
     -  failed on trial 1 of 100
     -  v = 8, w = 8
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 8
  *  20
     -  failed on trial 1 of 400
     -  v = 1, w = 5
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 1
  *  50
     -  failed on trial 1 of 2500
     -  v = 2, w = 7
     -  student   length   = -1
     -  reference length   = 18
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  100
     -  failed on trial 1 of 10000
     -  v = 35, w = 29
     -  student   length   = -1
     -  reference length   = 32
     -  student   ancestor = -1
     -  reference ancestor = 29
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: check length() and ancestor() on complete graphs
  *  5
     -  failed on trial 1 of 25
     -  v = 3, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
  *  10
     -  failed on trial 1 of 100
     -  v = 4, w = 9
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 9
  *  20
     -  failed on trial 1 of 400
     -  v = 10, w = 14
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 14
  *  50
     -  failed on trial 1 of 2500
     -  v = 20, w = 11
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 11
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 6: check length() and ancestor() on tournament digraphs
  *  5
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  10
     -  failed on trial 1 of 100
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 5
  *  20
     -  failed on trial 1 of 400
     -  v = 17, w = 15
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 17
  *  50
     -  failed on trial 1 of 2500
     -  v = 31, w = 43
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 31
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check length() and ancestor() on complete binary trees
  *  5
     -  failed on trial 1 of 25
     -  v = 2, w = 4
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 3
  *  10
     -  failed on trial 1 of 100
     -  v = 5, w = 6
     -  student   length   = -1
     -  reference length   = 3
     -  student   ancestor = -1
     -  reference ancestor = 2
  *  20
     -  failed on trial 1 of 400
     -  v = 7, w = 1
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 4
  *  50
     -  failed on trial 1 of 2500
     -  v = 21, w = 31
     -  student   length   = -1
     -  reference length   = 5
     -  student   ancestor = -1
     -  reference ancestor = 36
  *  100
     -  failed on trial 1 of 10000
     -  v = 75, w = 16
     -  student   length   = -1
     -  reference length   = 11
     -  student   ancestor = -1
     -  reference ancestor = 33
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 8: check length() and ancestor() on random DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 1, w = 4
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 7, w = 2
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 7
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 10, w = 18
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 10
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 9: check length() and ancestor() on random rooted-in DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 1
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 0, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 6
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 13, w = 0
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check length() and ancestor() on random rooted-out DAGs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 0, w = 4
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 6, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 12, w = 18
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 11: check length() and ancestor() on random rooted-in trees
  *  5 vertices
     -  failed on trial 1 of 25
     -  v = 4, w = 0
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 0
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 1 of 100
     -  v = 1, w = 1
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 1
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 1 of 400
     -  v = 16, w = 17
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 16
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 12: check length() and ancestor() on random rooted-out trees
  *  5 vertices
     -  failed on trial 2 of 25
     -  v = 4, w = 4
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  10 vertices
     -  failed on trial 4 of 100
     -  v = 8, w = 7
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 8
     -  failed on trial 1 of 100
  *  20 vertices
     -  failed on trial 6 of 400
     -  v = 17, w = 12
     -  student   length   = -1
     -  reference length   = 4
     -  student   ancestor = -1
     -  reference ancestor = 17
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 13: check length() and ancestor() on random simple digraphs
  *  5 vertices, 8 edges
     -  failed on trial 1 of 25
     -  v = 4, w = 2
     -  student   length   = -1
     -  reference length   = 1
     -  student   ancestor = -1
     -  reference ancestor = 2
     -  failed on trial 1 of 100
  *  10 vertices, 40 edges
     -  failed on trial 1 of 100
     -  v = 4, w = 4
     -  student   length   = -1
     -  reference length   = 0
     -  student   ancestor = -1
     -  reference ancestor = 4
     -  failed on trial 1 of 100
  *  20 vertices, 100 edges
     -  failed on trial 1 of 400
     -  v = 3, w = 5
     -  student   length   = -1
     -  reference length   = 2
     -  student   ancestor = -1
     -  reference ancestor = 5
     -  failed on trial 1 of 100
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 14: check whether two SAP objects can be created at the same time
  *  digraph1.txt and digraph2.txt
     -  v = 0, w = 0
     -  (digraph1.txt) student   length() = -1
     -  (digraph1.txt) reference length() = 0
  *  digraph3.txt and digraph4.txt
     -  v = 0, w = 0
     -  (digraph3.txt) student   length() = -1
     -  (digraph3.txt) reference length() = 0
  *  digraph5.txt and digraph6.txt
     -  v = 0, w = 0
     -  (digraph5.txt) student   length() = -1
     -  (digraph5.txt) reference length() = 0
  *  digraph2.txt and digraph1.txt
     -  v = 0, w = 0
     -  (digraph2.txt) student   length() = -1
     -  (digraph2.txt) reference length() = 0
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 15: check whether SAP is immutable
  *  digraph1.txt
  *  digraph2.txt
  *  digraph3.txt
  *  digraph4.txt
  *  digraph5.txt
  *  digraph6.txt
  *  digraph-ambiguous-ancestor.txt
==&gt; passed

Test 16: test invalid arguments to length() and ancestor() in digraph1.txt
  *  v = -1, w = 0
  *  v = 0, w = -1
  *  v = 13, w = 0
  *  v = 0, w = 13
  *  v = -1 1 6 7 9 , w = 2 8 10 11 
  *  v = 1 6 7 9 , w = -1 2 8 10 11 
  *  v = 13 1 6 7 9 , w = 2 8 10 11 
  *  v = 1 6 7 9 , w = 13 2 8 10 11 
==&gt; passed

Test 17: test length() and ancestor() with Iterable arguments
  *  100 random subsets of 1 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 12 of 100
     -  v = 61260 
     -  w = 73490 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 1 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 3 of 100
     -  v = 81095 
     -  w = 14961 55059 
     -  student   length() = 16
     -  reference length() = 15
  *  100 random subsets of 2 and 1 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 38975 52899 
     -  w = 79368 
     -  student   length() = 17
     -  reference length() = 16
  *  100 random subsets of 2 and 2 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 13236 43504 
     -  w = 40808 42071 
     -  student   length() = 10
     -  reference length() = 9
  *  100 random subsets of 3 and 11 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v = 10187 75634 79198 
     -  w size = 11
     -  student   length() = 11
     -  reference length() = 6
  *  100 random subsets of 11 and 3 vertices in digraph-wordnet.txt
     -  failed on trial 1 of 100
     -  v size = 11
     -  w = 26514 67407 69904 
     -  student   length() = 10
     -  reference length() = 8
  *  100 random subsets of 0 and 5 vertices in digraph-wordnet.txt
  *  100 random subsets of 5 and 0 vertices in digraph-wordnet.txt
  *  100 random subsets of 0 and 0 vertices in digraph-wordnet.txt
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 18: Check Iterable version of length() and ancestor() with null arguments
==&gt; passed

Test 19: random calls to length() and ancestor(), with probabilities
         p1 and p2, respectively
  *  random calls in a random rooted DAG (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     -  failed on call 1 to length()
     -  v                  = 12
     -  w                  = 10
     -  student   length() = -1
     -  reference length() = 1
  *  random calls in a random digraph (20 vertices, 100 edges)
     (p1 = 0.5, p2 = 0.5)
     ancestor() is not ancestor on shortest ancestral path
     -  failed on call 2 to ancestor()
     -  v = 1 5 9 16 
     -  w = 2 7 19 
     -  student   ancestor = 2
     -  distance from v to 2 = 2
     -  distance from w to 2 = 0
     -  reference ancestor = 19
     -  reference length   = 1
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 3/19 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java)
******************************************************************************

Testing methods in WordNet
*-----------------------------------------------------------
Running 14 total tests.

Test 1: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
==&gt; passed

Test 2: test distance() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
 (DEBUG) _digraph.V() == 6
 (DEBUG) _digraph.E() == 6
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 12
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 16
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 17
 (DEBUG) WordNet constructed
==&gt; passed

Test 3: test distance() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 100
 (DEBUG) _words.size() == 157
 (DEBUG) _digraph.V() == 100
 (DEBUG) _digraph.E() == 100
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 500
 (DEBUG) _words.size() == 751
 (DEBUG) _digraph.V() == 500
 (DEBUG) _digraph.E() == 507
 (DEBUG) WordNet constructed
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 1000
 (DEBUG) _words.size() == 1664
 (DEBUG) _digraph.V() == 1000
 (DEBUG) _digraph.E() == 1008
 (DEBUG) WordNet constructed
==&gt; passed

Test 4: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('transmission_time', 'grama')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pudendal_artery', 'fug')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('European_fly_honeysuckle', 'New_Zealand_spinach')
 (DEBUG) sap(), a == 79211
     -  student returns invalid synset on pair 3 of 1000
     -  nounA = European_fly_honeysuckle
     -  nounB = New_Zealand_spinach
     -  student   distance() = 6
     -  reference distance() = 6
     -  student   sap() = 'vascular_plant'
     -  reference sap() = 'vascular_plant tracheophyte'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 5: test sap() of all noun pairs
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 14
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets15.txt; hypernyms = hypernyms15Tree.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'l')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'm')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'n')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'o')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('g', 'n')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'o')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'l')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'm')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'n')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('i', 'o')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'l')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'm')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'n')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'o')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('l', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('l', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('l', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'l')
 (DEBUG) sap(), a == 11
 (DEBUG) sap('l', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('l', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('m', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'g')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('m', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('m', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'm')
 (DEBUG) sap(), a == 12
 (DEBUG) sap('m', 'n')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('m', 'o')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('n', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('n', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('n', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('n', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('n', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('n', 'o')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('o', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('o', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'i')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('o', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('o', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'l')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'm')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('o', 'n')
 (DEBUG) sap(), a == 13
 (DEBUG) sap('o', 'o')
 (DEBUG) sap(), a == 14
  *  synsets = synsets6.txt; hypernyms = hypernyms6TwoAncestors.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6TwoAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
 (DEBUG) _digraph.V() == 6
 (DEBUG) _digraph.E() == 6
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
  *  synsets = synsets11.txt; hypernyms = hypernyms11AmbiguousAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11AmbiguousAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 12
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 10
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets8.txt; hypernyms = hypernyms8WrongBFS.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8WrongBFS.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
  *  synsets = synsets11.txt; hypernyms = hypernyms11ManyPathsOneAncestor.txt
 (DEBUG) WordNet('synsets11.txt', 'hypernyms11ManyPathsOneAncestor.txt')
 (DEBUG) _synsetIndexes.size() == 11
 (DEBUG) _words.size() == 11
 (DEBUG) _digraph.V() == 11
 (DEBUG) _digraph.E() == 16
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('b', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('d', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('e', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'k')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('g', 'k')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('h', 'k')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('i', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('i', 'j')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('i', 'k')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('j', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'g')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'h')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'i')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('j', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('j', 'k')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'b')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'd')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'e')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('k', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('k', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('k', 'i')
 (DEBUG) sap(), a == 8
 (DEBUG) sap('k', 'j')
 (DEBUG) sap(), a == 9
 (DEBUG) sap('k', 'k')
 (DEBUG) sap(), a == 10
  *  synsets = synsets8.txt; hypernyms = hypernyms8ManyAncestors.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ManyAncestors.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 17
 (DEBUG) WordNet constructed
 (DEBUG) sap('a', 'a')
 (DEBUG) sap(), a == 0
 (DEBUG) sap('a', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('a', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('a', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('a', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('a', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('a', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('a', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'a')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'c')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('b', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('b', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('c', 'b')
 (DEBUG) sap(), a == 1
 (DEBUG) sap('c', 'c')
 (DEBUG) sap(), a == 2
 (DEBUG) sap('c', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('c', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('c', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('c', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('c', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'a')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'c')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'd')
 (DEBUG) sap(), a == 3
 (DEBUG) sap('d', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('d', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'a')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'c')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'e')
 (DEBUG) sap(), a == 4
 (DEBUG) sap('e', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('e', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'a')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'c')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'f')
 (DEBUG) sap(), a == 5
 (DEBUG) sap('f', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('f', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'a')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'c')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('g', 'g')
 (DEBUG) sap(), a == 6
 (DEBUG) sap('g', 'h')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'a')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'b')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'c')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'd')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'e')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'f')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'g')
 (DEBUG) sap(), a == 7
 (DEBUG) sap('h', 'h')
 (DEBUG) sap(), a == 7
==&gt; passed

Test 6: test sap() of random noun pairs
  *  1000 pairs using synsets = synsets100-subgraph.txt; hypernyms = hypernyms100-subgraph.txt
 (DEBUG) WordNet('synsets100-subgraph.txt', 'hypernyms100-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 100
 (DEBUG) _words.size() == 157
 (DEBUG) _digraph.V() == 100
 (DEBUG) _digraph.E() == 100
 (DEBUG) WordNet constructed
 (DEBUG) sap('hematohiston', 'SOD')
 (DEBUG) sap(), a == 60
 (DEBUG) sap('immune_gamma_globulin', 'coagulation_factor')
 (DEBUG) sap(), a == 53
 (DEBUG) sap('antihaemophilic_globulin', 'supermolecule')
 (DEBUG) sap(), a == 44
     -  student returns invalid synset on pair 3 of 1000
     -  nounA = antihaemophilic_globulin
     -  nounB = supermolecule
     -  student   distance() = 4
     -  reference distance() = 4
     -  student   sap() = 'macromolecule'
     -  reference sap() = 'macromolecule supermolecule'
  *  1000 pairs using synsets = synsets500-subgraph.txt; hypernyms = hypernyms500-subgraph.txt
 (DEBUG) WordNet('synsets500-subgraph.txt', 'hypernyms500-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 500
 (DEBUG) _words.size() == 751
 (DEBUG) _digraph.V() == 500
 (DEBUG) _digraph.E() == 507
 (DEBUG) WordNet constructed
 (DEBUG) sap('DEAE_cellulose', 'hydrazo_radical')
 (DEBUG) sap(), a == 478
     -  student returns invalid synset on pair 1 of 1000
     -  nounA = DEAE_cellulose
     -  nounB = hydrazo_radical
     -  student   distance() = 8
     -  reference distance() = 8
     -  student   sap() = 'unit'
     -  reference sap() = 'unit building_block'
  *  1000 pairs using synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 1000
 (DEBUG) _words.size() == 1664
 (DEBUG) _digraph.V() == 1000
 (DEBUG) _digraph.E() == 1008
 (DEBUG) WordNet constructed
 (DEBUG) sap('pectus', 'mesoblast')
 (DEBUG) sap(), a == 104
 (DEBUG) sap('dipole_molecule', 'system_of_macrophages')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('lymphatic_system', 'posterior_root')
 (DEBUG) sap(), a == 104
 (DEBUG) sap('immunoglobulin_G', 'nervus_femoralis')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('scleroprotein', 'humerus')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('IgA', 'dentine')
 (DEBUG) sap(), a == 867
 (DEBUG) sap('clinker', 'system_of_macrophages')
 (DEBUG) sap(), a == 612
     -  student returns invalid synset on pair 7 of 1000
     -  nounA = clinker
     -  nounB = system_of_macrophages
     -  student   distance() = 5
     -  reference distance() = 5
     -  student   sap() = 'part'
     -  reference sap() = 'part piece'
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 7: check whether WordNet is immutable
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
 (DEBUG) sap(''hood', ''s_Gravenhage')
 (DEBUG) sap(), a == 65579
 (DEBUG) sap('.22', '0')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1', '1-dodecanol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1-hitter', '10')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('100', '1000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('10000', '100000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000', '1000000000')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('1000000000000', '11')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('11-plus', '11_November')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12', '12-tone_music')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('12-tone_system', '120')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('13', '14')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('144', '14_July')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15', '1530s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('15_August_1945', '15_May_Organization')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('15_minutes', '16')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('16_PF', '17')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1728', '1750s')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1760s', '1770s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1780s', '1790s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('17_November', '18')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('18-karat_gold', '1820s')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1830s', '1840s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1850s', '1860s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1870s', '1880s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1890s', '19')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('1900s', '1920s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1930s', '1940s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1950s', '1960s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1970s', '1980s')
 (DEBUG) sap(), a == 34093
 (DEBUG) sap('1990s', '1_Chronicles')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('1_Esdras', '1_Kings')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1_Maccabees', '1_Samuel')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('1st-class_mail', '1st_Baron_Beaverbrook')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_Baron_Verulam', '1st_Earl_Attlee')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Earl_Baldwin_of_Bewdley', '1st_Earl_of_Balfour')
 (DEBUG) sap(), a == 72990
 (DEBUG) sap('1st_Viscount_Montgomery_of_Alamein', '1st_class')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('1st_lieutenant', '2')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('2-hitter', '2-hydroxybenzoic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('2-methylpropenoic_acid', '20')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('20/20', '21')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('22', '22-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('23', '24')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('24-hour_interval', '24-karat_gold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('24/7', '25')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('26', '27')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('28', '29')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('2_Chronicles', '2_Esdras')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Kings', '2_Maccabees')
 (DEBUG) sap(), a == 25303
 (DEBUG) sap('2_Samuel', '2nd_lieutenant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('3', '3-D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3-hitter', '30')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('30_minutes', '365_days')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('366_days', '3D')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('3TC', '3d_radar')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('3rd_October_Organization', '4')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('4-hitter', '40')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('401-k', '401-k_plan')
 (DEBUG) sap(), a == 19
 (DEBUG) sap('440_yards', '4WD')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('4to', '5')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hitter', '5-hydroxy-3-methylglutaryl-coenzyme_A_reductase')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('5-hydroxytryptamine', '50')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('500', '6')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('60', '60_minutes')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('6_June_1944', '7')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('70', '78')
 (DEBUG) sap(), a == 50439
 (DEBUG) sap('8', '80')
 (DEBUG) sap(), a == 48461
 (DEBUG) sap('880_yards', '8_May_1945')
 (DEBUG) sap(), a == 53619
 (DEBUG) sap('8vo', '9')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('9-11', '9/11')
 (DEBUG) sap(), a == 20
 (DEBUG) sap('90', 'A')
 (DEBUG) sap(), a == 34326
 (DEBUG) sap('A'man', 'A-bomb')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A-horizon', 'A-line')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('A-list', 'A-scan_ultrasonography')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('A-team', 'A.E.')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('A._A._Michelson', 'A._A._Milne')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._Conan_Doyle', 'A._E._Burnside')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._Housman', 'A._E._Kennelly')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._E._W._Mason', 'A._Noam_Chomsky')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('A._testudineus', 'A/C')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('AA', 'AAA')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AARP', 'AAS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('AAVE', 'AB')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('ABA_transit_number', 'ABB')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABC', 'ABC's')
 (DEBUG) sap(), a == 67245
 (DEBUG) sap('ABCs', 'ABLS')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ABM', 'ABO_antibodies')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ABO_blood_group_system', 'ABO_group')
 (DEBUG) sap(), a == 31
 (DEBUG) sap('ABO_system', 'ABS')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AC', 'ACC')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ACE', 'ACE_inhibitor')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('ACLANT', 'ACTH')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADA', 'ADA-SCID')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ADD', 'ADH')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADHD', 'ADP')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ADPS', 'ADP_system')
 (DEBUG) sap(), a == 31124
 (DEBUG) sap('AEC', 'AFISR')
 (DEBUG) sap(), a == 19649
 (DEBUG) sap('AFL', 'AFL-CIO')
 (DEBUG) sap(), a == 39553
 (DEBUG) sap('AFP', 'AFRL')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('AFSPC', 'AHPCRC')
 (DEBUG) sap(), a == 78698
==&gt; passed

Test 8: check that constructor throws an IllegalArgumentException when the input is not a rooted DAG
  *  synsets3.txt, hypernyms3InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidTwoRoots.txt')
 (DEBUG) _synsetIndexes.size() == 3
 (DEBUG) _words.size() == 3
  *  synsets3.txt, hypernyms3InvalidCycle.txt
 (DEBUG) WordNet('synsets3.txt', 'hypernyms3InvalidCycle.txt')
 (DEBUG) _synsetIndexes.size() == 3
 (DEBUG) _words.size() == 3
  *  synsets6.txt, hypernyms6InvalidTwoRoots.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidTwoRoots.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
  *  synsets6.txt, hypernyms6InvalidCycle+Path.txt
 (DEBUG) WordNet('synsets6.txt', 'hypernyms6InvalidCycle+Path.txt')
 (DEBUG) _synsetIndexes.size() == 6
 (DEBUG) _words.size() == 6
==&gt; passed

Test 9: check that distance() and sap() throw an IllegalArgumentException
        when either argument is not a WordNet noun
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = invalid
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:121)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:394)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = b 
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:121)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:395)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = eleventeen
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:121)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:396)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
  *  synsets15.txt, hypernyms15Tree.txt, invalid noun = INVALID
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
     java.lang.NullPointerException

     WordNet.distance(WordNet.java:121)
     TestWordNet.testInvalidNoun(TestWordNet.java:372)
     TestWordNet.test9(TestWordNet.java:397)
     TestWordNet.main(TestWordNet.java:752)

     -  failed to throw a java.lang.IllegalArgumentException
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 10: check isNoun()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 11: check nouns()
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  synsets = synsets15.txt; hypernyms = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets = synsets8.txt; hypernyms = hypernyms8ModTree.txt
 (DEBUG) WordNet('synsets8.txt', 'hypernyms8ModTree.txt')
 (DEBUG) _synsetIndexes.size() == 8
 (DEBUG) _words.size() == 8
 (DEBUG) _digraph.V() == 8
 (DEBUG) _digraph.E() == 8
 (DEBUG) WordNet constructed
==&gt; passed

Test 12: check whether two WordNet objects can be created at the same time
  *  synsets1 = synsets15.txt; hypernyms1 = hypernyms15Tree.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Tree.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
  *  synsets1 = synsets.txt; hypernyms1 = hypernyms.txt
     synsets2 = synsets15.txt; hypernyms2 = hypernyms15Path.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 13: call distance(), sap(), and isNoun() with null arguments
  *  synsets15.txt, hypernyms15Path.txt
 (DEBUG) WordNet('synsets15.txt', 'hypernyms15Path.txt')
 (DEBUG) _synsetIndexes.size() == 15
 (DEBUG) _words.size() == 15
 (DEBUG) _digraph.V() == 15
 (DEBUG) _digraph.E() == 14
 (DEBUG) WordNet constructed
==&gt; passed

Test 14: random calls to isNoun(), distance(), and sap(), with
         probabilities p1, p2, and p3, respectively
  *  100 random calls (p1 = 0.5, p2 = 0.5, p3 = 0.0)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
  *  100 random calls (p1 = 0.5, p2 = 0.0, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('scoke', 'word_structure')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lepiota_morgani', 'lymphogranuloma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('apophasis', 'chloroquine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('manoeuvrer', 'Cancer')
 (DEBUG) sap(), a == 60216
     -  student sap() is too far to be a valid common ancestor when testing pair 6 of 100
     -  nounA = manoeuvrer
     -  nounB = Cancer
     -  student   sap() = 'person'
     -  reference sap() = 'person individual someone somebody mortal soul'
     -  student   distance() = 3
     -  reference distance() to 'person individual someone somebody mortal soul' = 3
     -  actual distance to 'person' = -1
     -  failed on call 6 to sap()
  *  100 random calls (p1 = 0.0, p2 = 0.5, p3 = 0.5)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('Lightning_Hurler', 'skirting_board')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nigella_sativa', 'palladium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('borsht_belt', 'camphor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Eton_College', 'gobbler')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blacklist', 'gray_hen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sauce_Albert', 'galea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('domestic_help', 'pataca')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('national_holiday', 'leukoma')
 (DEBUG) sap(), a == 18840
     -  student sap() is too far to be a valid common ancestor when testing pair 15 of 100
     -  nounA = national_holiday
     -  nounB = leukoma
     -  student   sap() = 'abstraction'
     -  reference sap() = 'abstraction abstract_entity'
     -  student   distance() = 17
     -  reference distance() to 'abstraction abstract_entity' = 17
     -  actual distance to 'abstraction' = -1
     -  failed on call 15 to sap()
  *  100 random calls (p1 = 0.2, p2 = 0.4, p3 = 0.4)
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('swamp_plant', 'sinuosity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('calabash_pipe', 'huntsman's_horns')
 (DEBUG) sap(), a == 81004
     -  student sap() is too far to be a valid common ancestor when testing pair 3 of 100
     -  nounA = calabash_pipe
     -  nounB = huntsman's_horns
     -  student   sap() = 'whole'
     -  reference sap() = 'whole unit'
     -  student   distance() = 15
     -  reference distance() to 'whole unit' = 15
     -  actual distance to 'whole' = -1
     -  failed on call 3 to sap()
==&gt; <font color="#990000"><b>FAILED</b></font>


Total: 10/14 tests passed!


================================================================

******************************************************************************
*          correctness (substituting reference SAP.java and WordNet.java)
******************************************************************************

Testing methods in Outcast
*-----------------------------------------------------------
Running 2 total tests.

Test 1: test outcast() on WordNet digraph
        (synsets.txt and hypernyms.txt)
  *  outcast2.txt
  *  outcast3.txt
  *  outcast4.txt
  *  outcast5.txt
  *  outcast5a.txt
  *  outcast7.txt
  *  outcast8.txt
  *  outcast8a.txt
  *  outcast8b.txt
  *  outcast8c.txt
  *  outcast9.txt
  *  outcast9a.txt
  *  outcast10.txt
  *  outcast10a.txt
  *  outcast11.txt
  *  outcast12.txt
  *  outcast12a.txt
  *  outcast17.txt
  *  outcast20.txt
  *  outcast29.txt
==&gt; passed

Test 2: test outcast() on WordNet subgraph
        (synsets50000-subgraph.txt and hypernyms50000-subgraph.txt)
  *  outcast2.txt
  *  outcast3.txt
  *  outcast5.txt
  *  outcast5a.txt
  *  outcast7.txt
  *  outcast8.txt
  *  outcast8b.txt
  *  outcast8c.txt
  *  outcast9.txt
  *  outcast10.txt
  *  outcast11.txt
==&gt; passed


Total: 2/2 tests passed!


================================================================

******************************************************************************
*          MEMORY
******************************************************************************

Computing memory of SAP
*-----------------------------------------------------------
Running 1 total tests.

student     memory    = 8347848 bytes
reference   memory    = 10320584 bytes
ratio                 = 0.81
maximum allowed ratio = 2.50

vertices = 82192
edges    = 84505

Total: 1/1 tests passed!

================================================================



Computing memory of WordNet
*-----------------------------------------------------------
Running 3 total tests.

Test 1a: test memory of WordNet object
  *  synsets = synsets1000-subgraph.txt; hypernyms = hypernyms1000-subgraph.txt
 (DEBUG) WordNet('synsets1000-subgraph.txt', 'hypernyms1000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 1000
 (DEBUG) _words.size() == 1664
 (DEBUG) _digraph.V() == 1000
 (DEBUG) _digraph.E() == 1008
 (DEBUG) WordNet constructed
     -  student   memory = 1092560 bytes
     -  reference memory = 1222920 bytes
     -  number vertices  = 1000
     -  number of edges  = 1008
     -  student / reference ratio  =  0.9
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1b: test memory of WordNet object
  *  synsets = synsets5000-subgraph.txt; hypernyms = hypernyms5000-subgraph.txt
 (DEBUG) WordNet('synsets5000-subgraph.txt', 'hypernyms5000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 5000
 (DEBUG) _words.size() == 7992
 (DEBUG) _digraph.V() == 5000
 (DEBUG) _digraph.E() == 5059
 (DEBUG) WordNet constructed
     -  student   memory = 5369576 bytes
     -  reference memory = 6071624 bytes
     -  number vertices  = 5000
     -  number of edges  = 5059
     -  student / reference ratio  =  0.9
     -  maximum allowed rato       =  2.0

==&gt; passed

Test 1c: test memory of WordNet object
  *  synsets = synsets10000-subgraph.txt; hypernyms = hypernyms10000-subgraph.txt
 (DEBUG) WordNet('synsets10000-subgraph.txt', 'hypernyms10000-subgraph.txt')
 (DEBUG) _synsetIndexes.size() == 10000
 (DEBUG) _words.size() == 19600
 (DEBUG) _digraph.V() == 10000
 (DEBUG) _digraph.E() == 10087
 (DEBUG) WordNet constructed
     -  student   memory = 11924736 bytes
     -  reference memory = 14090704 bytes
     -  number vertices  = 10000
     -  number of edges  = 10087
     -  student / reference ratio  =  0.8
     -  maximum allowed rato       =  2.0

==&gt; passed

Total: 3/3 tests passed!

================================================================



******************************************************************************
*          TIMING
******************************************************************************

Timing SAP
*-----------------------------------------------------------
Running 7 total tests.

Test 1: time SAP constructor
   *  digraph-wordnet.txt
      -  student solution time =  0.00 seconds
      -  maximum allowed  time =  1.00 seconds
==&gt; passed

Test 2a-c: time length() and ancestor() with random pairs of vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  560429.33
     -  student   solution calls per second:    4024.67
     -  reference / student ratio:               139.25

=&gt; passed    student &lt;= 50000x reference
=&gt; passed    student &lt;=  5000x reference
=&gt; passed    student &lt;=   500x reference

Test 3a-c: time length() and ancestor() with random sets of 5 vertices
  *  digraph-wordnet.txt
     -  reference solution calls per second:  218577.33
     -  student   solution calls per second:    4334.67
     -  reference / student ratio:                50.43

=&gt; passed    student &lt;= 20000x reference
=&gt; passed    student &lt;=  2000x reference
=&gt; passed    student &lt;=   200x reference


Total: 7/7 tests passed!

================================================================



******************************************************************************
*          timing (substituting reference SAP.java)
******************************************************************************

Timing WordNet
*-----------------------------------------------------------
Running 8 total tests.

Test 1: timing WordNet constructor
  *  synsets = synsets.txt; hypernyms = hypernyms.txt
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
     -  student constructor time =  0.64 seconds
     -  maximum allowed     time = 10.00 seconds
==&gt; passed

Test 2: check that exactly one SAP object created per WordNet object
 (DEBUG) WordNet('synsets.txt', 'hypernyms.txt')
 (DEBUG) _synsetIndexes.size() == 82192
 (DEBUG) _words.size() == 119188
 (DEBUG) _digraph.V() == 82192
 (DEBUG) _digraph.E() == 84505
 (DEBUG) WordNet constructed
 (DEBUG) sap('bit', 'byte')
 (DEBUG) sap(), a == 78703
 (DEBUG) sap('apple', 'orange')
 (DEBUG) sap(), a == 37179
==&gt; <font color="#990000"><b>FAILED</b></font>

Test 3a-c: timing sap() and distance() with random nouns
 (DEBUG) sap('snapshot', 'North_Atlantic')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Cyperus_longus', 'arteriole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Beatles', 'Kleist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lobipes', 'Freudian_psychology')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Joint_Chiefs', 'double_bind')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Sun_City', 'Marquise_de_Montespan')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('iconology', 'limper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('securities_industry', 'shlimazel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Passiflora_maliformis', 'William_Tindal')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Circinus', 'Latimeridae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rabbit-eye_blueberry', 'carelessness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Salah-ad-Din_Yusuf_ibn-Ayyub', 'Bahasa_Malaysia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Van_Dyck', 'direct_tax')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Asphodeline_lutea', 'imperative_mood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('post-rotational_nystagmus', 'Abelmoschus_moschatus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hysteric', 'tessellation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('J._R._Firth', 'United_Arab_Emirate_dirham')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('automotive_engineering', 'crayon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('muesli', 'aromatic_aster')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pia', 'Emilie_Charlotte_le_Breton')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('classified_stock', 'baccarat')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Antido', 'Ascension_of_Christ')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('patronne', 'syndicalism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('assistant_professor', 'PET')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Erythroxylon_coca', 'telecommerce')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pursued', 'Liberal_Democrat_Party')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prime_number', 'self-confidence')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('motormouth', 'hog')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('interlude', 'Cochimi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dankness', 'genus_Agkistrodon')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('guild_socialism', 'judicial_separation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fancy_goods', 'Hippolyte_Jean_Giraudoux')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('family_Sciuridae', '23')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Phasmida', 'municipal_bond')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Berkshire_Hills', 'Neanderthal_man')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Brodmann's_area', 'arteria_palatina')
 (DEBUG) sap(), a == 25115
 (DEBUG) sap('cow_shark', 'Apocynum_cannabinum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('neology', 'grass_bacillus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('business_people', 'Macbeth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('foulard', 'sitting_room')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('straight', 'elytron')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('confervoid_algae', 'ileum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('scouter', 'wreckage')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Marshall_McLuhan', 'Commodore_Vanderbilt')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('beta_endorphin', 'Moreton_Bay_pine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('reasoning_backward', 'ketosis-prone_diabetes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('small_fortune', 'Manihot_esculenta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ticktack', 'Marie_Henri_Beyle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Strepera', 'spatterdock')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gluteus', 'centrosome')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('shallow', 'asclepiad')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fire-worship', 'short-tailed_shrew')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blastomere', 'American_cress')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('Lysichiton', 'Cheviot_Hills')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Dipper', 'workhouse')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Wheatstone_bridge', 'spoilation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('parlour_game', 'disc_drive')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Iris_florentina', 'Gianni_Versace')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cantata', 'Doroteo_Arango')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Earhart', 'mama')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('mantis', 'seaway')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Cydonia', 'ostiary')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('body_fluid', 'eating_disorder')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('harrow', 'yellow_giant_hyssop')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('showiness', 'pet_food')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wine_merchant', 'epicene_person')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('correspondence', 'axolemma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('head_blight', 'speed_demon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Andrija_Mohorovicic', 'Uigur')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('showerhead', 'genus_Stokesia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gesture', 'family_Kalotermitidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('political_system', 'cease_and_desist_order')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Malone', 'skincare')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Mobulidae', 'time-out')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('electric_doublet', 'genus_Pleurosorus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Huntington's_chorea', 'aftertaste')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('watercress', 'powder_flask')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('vociferation', 'auk')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('emcee', 'European_red_elder')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Phyllocladus_alpinus', 'babies'-breath')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('English_person', 'antlion_fly')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('crawling', 'Artemis')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('untrustworthiness', 'personal_chattel')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('nag', 'Athrotaxis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Prunella_vulgaris', 'capsicum')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Phegopteris', 'apheresis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('surprise', 'Thlaspi_arvense')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Ophiodon', 'Ophrys_muscifera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lithuanian_monetary_unit', 'Manchu')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('day_jessamine', 'Agaricus_campestris')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Hadean_eon', 'telegraphist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grandad', 'Miles_Standish')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('quadrivium', 'sphacelus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sulfapyridine', 'caustic_lime')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Scottish_Lallans', 'Pachysandra_terminalis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jimmy_Carter', 'handline')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('alkylbenzenesulfonate', 'drizzle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fake', 'common_snowberry')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Indigirka', 'sight')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sarajevo', 'pricing_system')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hyperbaric_chamber', 'provitamin_A')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('geographical_mile', 'yard_line')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('shoulder_girdle', 'aminobenzoic_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Platanthera', 'rubber_band')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('coping_stone', 'Antalya')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Guinea_grains', 'Siluriformes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('country_store', 'jackpot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('preterition', 'intersex')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Romneya', 'Iapetus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('black-billed_cuckoo', 'haik')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('adhocracy', 'canape')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sixteenth_part', 'software_product')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bitter_lemon', 'genus_Cistothorus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hypnotic_trance', 'adjusting_entry')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mine_field', 'genus_Cynips')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('azure_aster', 'phase_modulation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cuculus', 'camphor_dune_tansy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('partial_breach', 'propellant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Martha_Graham', 'work_study')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('General_Baptist', 'genus_Leiophyllum')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('aphanite', 'Camassia_leichtlinii')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('single_file', 'gastralgia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Geiger_counter', 'crematorium')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('fuel_oil', 'soft-shell_crab')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Pressburg', 'off_year')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('engine_block', 'Zsigmondy')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hydrogen_peroxide', 'Sylvanus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('calcite', 'ease')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Patrick_Henry', 'MI')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Viminaria', 'poster_colour')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('continuing_trespass', 'genus_Trachipterus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('subdivision_Gnetophytina', 'purple_rock_brake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rial', 'Homo_rhodesiensis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gila', 'Phrynosoma_cornutum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('booby_prize', 'microphotometer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('newssheet', 'anointing_of_the_sick')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Luigi_Pirandello', 'mcg')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Times_Square', 'Dutch_elm_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('volcano', 'gazelle')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('goosefoot_maple', 'Marcus_Tullius_Cicero')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Agavaceae', 'Solanopteris_bifrons')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lathe', 'blue-blindness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bird_of_Minerva', 'extravasation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Anemia', 'mishmash')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Incan', 'wax-chandler')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Fraxinus_ornus', 'silver_thatch')
 (DEBUG) sap(), a == 77641
 (DEBUG) sap('Bloemfontein', 'ghostliness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('holography', 'family_Cycadaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fishing_line', 'two-base_hit')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('complaisance', 'Lycaon_pictus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('freeway', 'Euarctos')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('safeguard', 'gospeller')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mine_disposal', 'phot')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Johann_Maier', 'durian_tree')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('willing', 'powder_blue')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sled_dog', 'aortitis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Veadar', 'radio_observation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bond-trading_activity', 'approaching')
 (DEBUG) sap(), a == 38545
 (DEBUG) sap('Mexican-American', 'sildenafil')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('palimpsest', 'Artemisia_annua')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Constitution', 'family_Tetranychidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('yellow_root', 'sludge')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gauguin', 'dysarthria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('procursive_epilepsy', 'Luther_Burbank')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pollinosis', 'Robertson')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Benjamin_Thompson', 'New_York_City')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Eelam', 'polyamide')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cucumber_tree', 'American_pulsatilla')
 (DEBUG) sap(), a == 61246
 (DEBUG) sap('white_willow', 'zymolysis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('odontoglossum', 'trans-Alaska_pipeline')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('poker_game', 'codicil')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('biodefense', 'Hyla_arenicolor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gas_line', 'shot_glass')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('arthrocentesis', 'marsh_orchid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('circumflex_iliac_artery', 'extrasensory_perception')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pasha', 'computer_technology')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curtness', 'Brighton')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('climatology', 'siltstone')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('worthy', 'knobkerry')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('singular_matrix', 'puffball')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tombigbee_River', 'Roman_nose')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('Surgeon_General', 'U.K.')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('locking', 'Kahn')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('article_of_faith', 'Chelonia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Buphthalmum_salicifolium', 'trombonist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('meatloaf', 'capital_of_Zambia')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sambar', 'Francis_Ford_Coppola')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Robert_Maynard_Hutchins', 'Proverbs')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pheasant's-eye', 'Andaman_Sea')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('repository', 'matriarchy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('life_mask', 'percolate')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('slip_carriage', 'chimney_breast')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('positive_fraud', 'pencil_eraser')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Muztagh', 'kahikatea')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('mediastinum', 'groundnut_oil')
 (DEBUG) sap(), a == 76251
 (DEBUG) sap('ethylene_glycol', 'Ulster_Defence_Association')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dragonfly', 'Meuse')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('binary_digit', 'curvaceousness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('transactions', 'sectional')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phrasal_idiom', 'genus_Ictalurus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gray_whale', 'back_country')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('backhand_shot', 'copula')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('total_aphasia', 'lues_venerea')
 (DEBUG) sap(), a == 60598
 (DEBUG) sap('incasement', 'kidney_pie')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Polygonaceae', 'ricinoleic_acid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('oat', 'genetic_disease')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gangboard', 'corpuscular_theory_of_light')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('leading_indicator', 'Pomolobus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('arteria_musculophrenica', 'Scotch_marigold')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Eacles_imperialis', 'particularism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('musical_note', 'dwarf_buffalo')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trial', 'schnaps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ailuropoda', 'San_Juan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('toothed_spurge', 'dry_gangrene')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cruciferous_vegetable', 'verruca')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pudding_face', 'Catharacta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gongora', 'sleeping_accommodation')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('sheepfold', 'thysanuron')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('arachnophobia', 'sand_dropseed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('perfecter', 'mirid')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Rubiales', 'Bowiea_volubilis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('balkiness', 'stubbornness')
 (DEBUG) sap(), a == 48697
 (DEBUG) sap('curtate_cycloid', 'Bidens_coronata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('aetiology', 'Japanese_barberry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('theatre_of_operations', 'Brunnhilde')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Squillidae', 'Savannah')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('make-up', 'Great_Australian_Bight')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('micromicron', 'China_rose')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kalemia', 'cranberry_sauce')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('magnetic_declination', 'Carver')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('international_scale', 'Erodium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Prosopium_cylindraceum', 'wild_geranium')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('aptitude', 'southern_porgy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('canyonside', 'veterinary_surgeon')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gatehouse', 'C_horizon')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('episodic_memory', 'parachutist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mommsen', 'hemodynamics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carduelis_flammea', 'metamorphosis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('colour_TV_tube', 'swimming_crab')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('change_of_mind', 'Strachey')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scintillation_counter', 'tributary')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dandyism', 'reluctance')
 (DEBUG) sap(), a == 77374
 (DEBUG) sap('conscientious_objector', 'Mahonia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gerbera_jamesonii', 'genus_Velociraptor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Potoroinae', 'handloom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('power_walking', 'logical_quantifier')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Erinyes', 'epic')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('oligodendroglia', 'Mutillidae')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cathouse', 'leucocyte')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('travelling_bag', 'Manchu')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('bicorne', 'sanguinary_ant')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('parental_quality', 'typhoid_bacillus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('slide_projector', 'Anthophyta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('emaciation', 'genus_Bubulcus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('railroad', 'trademark')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lug', 'Xiphias')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('crystal_mike', 'St._Ambrose')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('social_organization', 'shark_repellent')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Atrichornithidae', 'Floreal')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stepping_stone', 'disarmament')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('Chablis', 'genetic_marker')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('overnight_bag', 'labyrinth')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('internal_carotid_artery', 'Jean_Louis_Charles_Garnier')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('liturgics', 'ethyl')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lechanorales', 'boatswain_bird')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('corporate_trust', 'gourmandizer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sideroblastic_anemia', 'sniper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('weather_forecasting', 'hen_harrier')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('commercial_letter_of_credit', 'Marattia_salicina')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kiwi_vine', 'magical_power')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('bitternut', 'Burger')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Bida', 'Franz_Josef_I')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('square_meal', 'meadow_rue')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Primula_veris', 'Avesta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('demonolatry', 'sanitization')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('divulgence', 'Beninese')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hyaline_membrane_disease', 'genus_Plagianthus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('isobar', 'direct_correlation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Anthurium_scherzerianum', 'declarer')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('greaseproof_paper', 'St._Paul')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('map_maker', 'tube_wrench')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('goat_antelope', 'xeroderma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Marcus_Junius_Brutus', 'family_Antedonidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Saint_Bernard', 'genus_Zygnema')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('guy', 'Cardamine_pratensis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('manicurist', 'genus_Epidendrum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('conditioner', 'Turing_machine')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('occluded_front', 'bargeman')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('moneylender', 'space-time_continuum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sweetness', 'smallmouthed_black_bass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('basileus', 'Franz_Joseph')
 (DEBUG) sap(), a == 67277
 (DEBUG) sap('blain', 'John_Millington_Synge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dye', 'Lolium_temulentum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('candymaker', 'temporary_hookup')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('au_revoir', 'sweet_pepperbush')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contact', 'impracticality')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('blood_platelet', 'James_Earl_Carter_Jr.')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('anterior_naris', 'beaked_salmon')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('entablature', 'fetish')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('rib_roast', 'genital_wart')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('telephone_order', 'rhizopodan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cresol', 'genus_Haliotis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Colobus', 'ARDA')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('surplice', 'chicken_run')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('necrotizing_enteritis', 'necklet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scribble', 'peal')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('skyhook', 'adult_male_body')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('genus_Callorhinus', '15_May_Organization')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('pilot_bit', 'genus_Casmerodius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('microwave_bomb', 'mujahidin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_Chrysostom', 'signification')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cage', 'genus_Lactuca')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('denatured_alcohol', 'legal_relation')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('loneliness', 'angular_distance')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('capillary_tubing', 'academism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('war_paint', 'riding_light')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('water_hazard', 'common_lilac')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Mulla', 'residual_soil')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Phocoena', 'ousel')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sensory_neuron', 'showroom')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('illuminance', 'compassionateness')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('advertizer', 'Festuca')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('unicameral_script', 'Baptisia_tinctoria')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Phalaropus', 'zestfulness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('security_consultant', 'waddler')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('hr', 'intelligence_test')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('promisee', 'Malus_baccata')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('sun_tea', 'whistling_buoy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stoic', 'Lower_Saxony')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('vituperation', 'Haman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ombudsman', 'campaign_hat')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Apollinaire', 'Punicaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('golden_clematis', 'class_period')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Alexis_Carrel', 'woodland_white_violet')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cocoa', 'specific_gravity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gymnadenia', 'saltwater')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('buna', 'Zizania_aquatica')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('rundle', 'eastern_red-backed_salamander')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('saran', 'Dorado')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('workfellow', 'impulsiveness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('brass_ring', 'Hero')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('syntactician', 'strange_attractor')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rocket_launcher', 'Callas')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('strawberry_jam', 'Walking_horse')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Phyllitis_scolopendrium', 'subfamily_Merginae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rope_tow', 'cardcastle')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('amphictyony', 'Apterygidae')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('brush_cut', 'reciter')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('John_Doe', 'malaprop')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('capital_of_Mexico', 'DAT')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('blolly', 'mist')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Stanley', 'Christ's-thorn')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('typhoid', 'pluperfect')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hemiplegic', 'cyborg')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('acupressure', 'Port_Sudan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hydroxybenzoic_acid', 'Esther')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Gyps', 'Ken_Russell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eupatorium_aya-pana', 'common_garter_snake')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('capital_loss', 'bottom_rot')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('fthm', 'tamponage')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('spotted_bonytongue', 'sheet_pile')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('topos', 'fervour')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Carnegie', 'Stations_of_the_Cross')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('science_teacher', 'space_laboratory')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('voltaic_battery', 'cayenne_pepper')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Minamata_disease', 'Tenzing_Norgay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('big_shellbark', 'tansy-leaved_rocket')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('Guyana', 'Anne')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('immigrant_class', 'quasi-NGO')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('woodgraining', 'Cnemidophorus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Chinese_chequers', 'noncitizen')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sprit', 'centaury')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Negroid', 'greenhouse_warming')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('reconnoitering', 'bimetallism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('stealthiness', 'beaver_fur')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bolivian_monetary_unit', 'ivorybill')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('eutherian', 'suborder_Alcyonacea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cylindricality', 'stocker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('civil_libertarian', 'Phyllidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clock-watching', 'garment_worker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('historian', 'promotion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leitneriaceae', 'Afghani')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Persian_lamb', 'celandine_poppy')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('negative_charge', 'rock_sunfish')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('durum_wheat', 'point_of_reference')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('SSS', 'Culex_fatigans')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('academic_relation', 'demijohn')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ten', 'New_Zealand_wren')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('leading_tone', 'diamagnetism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Machaeranthera_tortifoloia', 'family_Anomalopidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bam', 'patronymic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('father-in-law', 'fallout_shelter')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ecosystem', 'brow_ptosis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Centrolobium_robustum', 'raja')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Tragulidae', 'maiden_aunt')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fritter', 'override')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sea_rover', 'airliner')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('marshland', 'paperweight')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('censure', 'Pangea')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jap_clover', 'Dardic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('rattail', 'Islamism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('appreciativeness', 'pool_ball')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hardening', 'palimpsest')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Esme_Stuart_Lennox_Robinson', 'Lycopodium_clavitum')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('confidant', 'bluethroat')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('ischemic_hypoxia', 'unearned_run')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('mastoid', 'perihelion')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('operating_expense', 'Wernher_von_Braun')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lemon_geranium', 'genus_Entomophthora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('moot', 'James_Thurber')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Harvard_University', 'Akaba')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('swan-neck', 'sick_list')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stammel', 'genetics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Aum', 'gene_expression')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('George_Lucas', 'inosculation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chambered_nautilus', 'shogunate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Quercus_prinus', 'driving_school')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Viagra', 'corrie')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Champollion', 'put-put')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Carduelis_hornemanni', 'genus_Amorphophallus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Laconian', 'shovelhead')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('American_blight', 'electric')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('volleyball_player', 'hackwork')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pieris', 'Edward_Fitzgerald')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('DLE', 'ESE')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('trespass_quare_clausum_fregit', 'boot_maker')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('melt', 'laager')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('seabeach_sandwort', 'linin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('annexe', 'adage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sylvilagus', 'estradiol_patch')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zealotry', 'truncated_cone')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Planera', 'partial_differential_equation')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('bewitchment', 'choirmaster')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('trifoliolate_leaf', 'threnody')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('conima', 'crew_neck')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('backup_file', 'Platymiscium_trinitatis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pyrographer', 'stumping')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fountain', 'orthostatic_hypotension')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('triple_crown', 'Synchytrium_endobioticum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('high_treason', 'photomicrograph')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Foreign_Intelligence_Service', 'slam_dunk')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('capitation', 'accounts_receivable')
 (DEBUG) sap(), a == 62178
 (DEBUG) sap('code_flag', 'impala')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Kalapuya', 'Sturnella_magna')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('beneficiary', 'wind_tee')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('synod', 'child_neglect')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('WAC', 'buffel_grass')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Megalobatrachus', 'Lanthanotidae')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('Purkinje_fiber', 'mechanical_system')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('eclecticist', 'Post-impressionist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('alma_mater', 'Leontocebus_oedipus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pyralid_moth', 'idiot')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Oxyuranus', 'Friend')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mathematical_function', 'tuna_oil')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('mantelet', 'discombobulation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Gambelia', 'silk_oak')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Amazona', 'toccata')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genitalia', 'upper_respiratory_infection')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('female_circumcision', 'kapeika')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('December_31', 'Dutchman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Torpedinidae', 'pneumatics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Beadle', 'John_Fitzgerald_Kennedy')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('bougainvillea', 'essential_thrombocytopenia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('four-poster', 'fellatio')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Aristotelia_racemosa', 'Montgomery')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Acroclinium', 'writ_of_certiorari')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Eschscholtzia_californica', 'trestle_table')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('II_Esdras', 'heliosphere')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Lambis', 'creche')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('albumen', 'sublimate')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('scrubbing', 'Lygodium_microphyllum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('feminism', 'maturity-onset_diabetes_mellitus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('beta-adrenoceptor', 'purple_sanicle')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('social_democracy', 'nut-leaved_screw_tree')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('countess', 'racial_profiling')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cornus', 'bookkeeper')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pulchritude', 'lampshell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Conuropsis_carolinensis', 'tike')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('dredger', 'Ney')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('communicator', 'fetal_monitor')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('drying_agent', 'paperboard')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('Sebastodes', 'flying_boat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Leitneria_floridana', 'Mikolaj_Kopernik')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('blackface', 'injury')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('lambskin', 'menhaden_oil')
 (DEBUG) sap(), a == 20754
 (DEBUG) sap('Komodo_lizard', 'raptus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cave', 'aster_family')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('breakbone_fever', 'subfamily_Bassariscidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Mon-Khmer', 'explosive_trace_detection')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('presupposition', 'electromagnetic_unit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('heath_aster', 'Corylopsis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('optical_illusion', 'Congo')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Dagon', 'lingering')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('babel', 'sanguinity')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Camelus', 'abolitionist')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('colonial', 'Georg_Friedrich_Handel')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('heckelphone', 'blur')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Anodonta', 'rhinestone')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('superficial_temporal_vein', 'seniority')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tube-nosed_bat', 'irreality')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('linguistic_relation', 'enterics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chironomus', 'thematic_vowel')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ambush', 'testimony')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Salina', 'leger_line')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Kentucky_bluegrass', 'temporiser')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('news', 'bolus')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('syntagm', 'hooking')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ulmus_alata', 'Viola_pedata')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('winnowing', 'self-consciousness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cholera_morbus', 'allgood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clit', 'one-sixth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Peleus', 'depressant')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('quinone', 'vena_occipitalis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('goora_nut', 'tribe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('perimysium', 'Menticirrhus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nitrocotton', 'Javanthropus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('ductus_deferens', 'Adiantum_tenerum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tebet', 'securer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('inflatable_cushion', 'philosophers'_wool')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('flintlock', 'guar')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('specimen', 'reading_assignment')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('Stylophorum_diphyllum', 'poker_hand')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Taskent', 'gasoline_gauge')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('modal', 'Hippocrates')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('triangle', 'Turdus_pilaris')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('metrication', 'acoustic_spectrum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('nexus', 'drumlin')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vacancy_rate', 'visual_agnosia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Sinology', 'prismoid')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('phrasal_idiom', 'Virgin_Birth')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Polygala', 'visual_modality')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('allies', 'creeps')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('test', 'moss-trooper')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('beard', 'bark_louse')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('boat_race', 'Feliz_Lusitania')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gill_bar', 'carpet_tack')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('IgE', 'pairing')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('aeronaut', 'Black_English_Vernacular')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('woodhewer', 'church_bell')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fornicator', 'prosthodontics')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('good_egg', 'forefront')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('curbstone', 'statutory_offence')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('imperium', 'militiaman')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('common_bird_cherry', 'gunman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Proteles', 'differential_threshold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sand_fly', 'reject')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('millwheel', 'Amia_calva')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('collodion', 'Holy_Order')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gunwale', 'woolly_alder_aphid')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('bridal', 'cinnamon_bread')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('achromatic_vision', 'Coriolis_force')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('whip_top', 'elk-wood')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('January', 'deglutition')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('phantom', 'rhodolite')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sulphur_dioxide', 'eggnog')
 (DEBUG) sap(), a == 53519
 (DEBUG) sap('moveable_feast', 'safety_factor')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('complicatedness', 'crescent-cell_anaemia')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('accountability', 'switch-hitter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Secotiales', 'open_frame')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hydrogen_sulfide', 'beta_receptor')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('inertial_reference_frame', 'dracontium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Assamese', 'assay-mark')
 (DEBUG) sap(), a == 30882
 (DEBUG) sap('family_Lecythidaceae', 'worm_gear')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Republic_of_Senegal', 'genus_Helicteres')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vitamin-deficiency_diet', 'Caucasus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Arthur_Holmes', 'genus_Aegypius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('distinctive_feature', 'separation_energy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('service_fee', 'Malacostraca')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('John_Henry_Newman', 'martyr')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('soft_solder', 'miscegenation')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Howard_Carter', 'mournful_widow')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('encyclopaedist', 'surgeon')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Sapindus_drumondii', 'cattiness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('numbers_racket', 'pinguecula')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pinckneya_pubens', 'apogamy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('briarwood', 'glamour')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('William_Claire_Menninger', 'gas_shell')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('eye-drop', 'nontricyclic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gastritis', 'anomalistic_month')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Cinnamomum', 'Maeterlinck')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family_Dicamptodontidae', 'cosmonaut')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('peg', 'biauriculate_heart')
 (DEBUG) sap(), a == 25115
 (DEBUG) sap('Stachys_palustris', 'Lycopersicon_esculentum')
 (DEBUG) sap(), a == 45813
 (DEBUG) sap('almond_extract', 'Donne')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hair_curler', 'fresh_gale')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('untimeliness', 'add-in')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('abridger', 'entourage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('epitope', 'Slavonic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('camel_racing', 'Frederic_Auguste_Bartholdi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('winner's_circle', 'bloom')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Brunanburh', 'St._Beda')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('housecleaning', 'larvacean')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('will', 'genus_Oenothera')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Naiki', 'bad_blood')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('phototropism', 'zipper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Tricholoma_pessundatum', 'Blephilia_hirsuta')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('jujutsu', 'beryllium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('to_leeward', 'Molva')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('carhop', 'echolalia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spin', 'caprine_animal')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tajikistani_monetary_unit', 'genus_Aphyllanthes')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('roentgen_ray', 'Cassia_fistula')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('long_time', 'ruthlessness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('puff_adder', 'numismatologist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('plodder', 'deposit_account')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('last_half', 'Mertensia_virginica')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('big_gun', 'photoelectricity')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('funeral_church', 'bestiary')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('torpidness', 'guesser')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('finger', 'retrial')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('painted_tortoise', 'tendosynovitis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('zoophyte', 'ring-around-a-rosy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sexual_relation', 'Adam')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('algology', 'Boletellus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('decimal_system', 'suicide_pill')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('quandong_nut', 'lee')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('mezzo-relievo', 'music_school')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('line_backer', 'genus_Corydalus')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('works', 'New_York_aster')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('statute', 'spinelessness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('kafir', 'fortieth')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tucker', 'syntax')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('grain_alcohol', 'surfing')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('cosmography', 'map_maker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('spic', 'intravenous_injection')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sexadecimal_notation', 'genus_Gymnocarpium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('good_form', 'Ophiodontidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hard-shell_crab', 'clearing_house')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pacifist', 'salt_shaker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('partitionist', 'plastic')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('psychosexual_development', 'Lao_People's_Democratic_Republic')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Lindera', 'lawyer_cane')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('titan', 'intima')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('tuppence', 'Russo-Japanese_War')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('somatosensory_system', 'lynx')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bole', 'Scorpionida')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('filthy_lucre', 'false_pregnancy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('toilet_soap', 'class_Mammalia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('showplace', 'heparin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('plessimeter', 'erythema')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Elizabeth_Sanderson_Haldane', 'division_Chrysophyta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mujik', 'macroevolution')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('canonist', 'wage_concession')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('exotoxin', 'wet_lung')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('clavicle', 'out-of-body_experience')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mojo', 'Casuarinales')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('family_Poeciliidae', 'radioactive_waste')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('controlling_interest', 'soapwort')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('prosthesis', 'speechmaking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lonicera_caprifolium', 'allopatry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Mozambique_monetary_unit', 'fillip')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('gurney', 'centre_of_gravity')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('serving_dish', 'wring')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Agee', 'vacationist')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('key', 'genus_Alsophila')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('agamid_lizard', 'genus_Chirocephalus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Hyoscyamus_muticus', 'June_3')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('raptor', 'cross-classification')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hearts', 'sutura_internasalis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Chrysothamnus_nauseosus', 'sash_cord')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('nervus_ischiadicus', 'Philibert_de_l'Orme')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('thalamostriate_vein', 'wiseacre')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('poriferan', 'eschatologist')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('cosmid', 'Rebecca')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('dirham', 'valvulitis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gipsy', 'backsword')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gastromy', 'monocot_family')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('yell', 'oil_cake')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Alaska_cod', 'Aquila_chrysaetos')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('cotyloid_cavity', 'Uut')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dolomite', 'place_kick')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Seriola_grandis', 'foster_home')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('obligato', 'topiary')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dominican_peso', 'world_affairs')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('willfulness', 'large-leaved_magnolia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lighthorse_Harry_Lee', 'Collinsonia_canadensis')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('horizontal_tail', 'Aalst')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('touch_perception', 'stack')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('diminutiveness', 'language')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Protea', 'kob')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cerebellar_vein', 'bitter_pecan')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('John_Wickliffe', 'may_fish')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Draba_verna', 'cannonade')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Qing', 'mortmain')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('feed_bunk', 'line_coach')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('monochromatic_vision', 'yellow_ageratum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('roast_lamb', 'modified_American_plan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('schoolmaster', 'reception_desk')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('judicial_admission', 'genus_Ormosia')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('White_Sea', 'Vaccinium_oxycoccus')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('disunity', 'Greater_New_Orleans_Bridge')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('chauvinism', 'States_General')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Solanum_nigrum_guineese', 'bearcat')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('narrowness', 'Union_of_Burma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('semiconsciousness', 'saleroom')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('poriferan', 'ocean_liner')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('class_Anthoceropsida', 'theory_of_probability')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('scrooge', 'Brusa')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Mg', 'sirrah')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Theseus', 'incidence_angle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('alder_blight', 'brittle_fern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('carangid_fish', 'Lake_Aral')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('vas', 'cave')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('wire-haired_pointing_griffon', 'suborder_Ornithopoda')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Nikolaas_Tinbergen', 'simperer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('rush-grass', 'C-reactive_protein')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Milton_Snavely_Hershey', 'Rilke')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('register', 'Beaumont')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fiduciary', 'Pygmalion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Jimmy_Hoffa', 'Nusa_Tenggara')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Marchantia_polymorpha', 'fur_seal')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('plaything', 'perchloride')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('sahib', 'Seychellois')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('estimator', 'biology_laboratory')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('lantern_pinion', 'Aspergillus_fumigatus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('United_States_Mint', 'Viccinium_myrtillus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('old_person', 'Epistle_to_the_Philippians')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pant_leg', 'scaling_ladder')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('genus_Ommastrephes', 'deposition')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('contraceptive_pill', 'Ireland')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Rockwell', 'Watusi')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('lamphouse', 'normal_fault')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Rene_Antoine_Ferchault_de_Reaumur', 'people_in_power')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Vaccaria_hispanica', 'lemon_sumac')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('order_Branchiura', 'edifice')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hooray', 'zaire')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('division_Archaebacteria', 'profiteer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('regulator', 'overcoating')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('pandean_pipe', 'Naval_Air_Warfare_Center_Weapons_Division')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lope_de_Vega', 'Morchella_angusticeps')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Nepenthes', 'Epistle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('snake-rail_fence', 'Virginia_bluebell')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cartridge_remover', 'arcuate_artery')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('madrasa', 'border_patrol')
 (DEBUG) sap(), a == 58168
 (DEBUG) sap('beastliness', 'Gamma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Lactuca_serriola', 'stickball_game')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('New_Siberian_Islands', 'eye_clinic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('linkman', 'abrachia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('raccoon_dog', 'sour-gum_family')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('storage_area', 'Fagales')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('yellow_lady's_slipper', 'sidesman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Jordan_River', 'benzodiazepine')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('taskmaster', 'inclinometer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Staffordshire_terrier', 'leptocephalus')
 (DEBUG) sap(), a == 20743
 (DEBUG) sap('inlay', 'bobolink')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stowaway', 'genus_Oxytropis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('doubler', 'Priacanthus_arenatus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('ice', 'systems_program')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('harangue', 'Phillyrea')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('barbette_carriage', 'vulcanite')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('coigne', 'pickerel_weed')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Corvus_monedula', 'superficiality')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('swivel', 'pyramidal_motor_system')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Abkhasian', 'methane_series')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Messiah', 'chloral_hydrate')
 (DEBUG) sap(), a == 28054
 (DEBUG) sap('enallage', 'consumption_weed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('alms_box', 'Proteus_anguinus')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('cinchona_tree', 'the_true')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('psyop', 'Edward_Wyllis_Scripps')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('blue_grama', 'bolivia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Rangifer', 'snake_wood')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('snake's_head_fritillary', 'zillion')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('areolar_tissue', 'Richard_Neville')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('anagnost', 'picornavirus')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Sessions', 'ulceration')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Lost_Tribes', 'Christendom')
 (DEBUG) sap(), a == 71315
 (DEBUG) sap('elementary_education', 'characin_fish')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('demonstrative_pronoun', 'suburban_area')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('nineteenth', 'Cassius_Marcellus_Clay')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pleurotus_ostreatus', 'Claforan')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('saw_palmetto', 'personableness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hunting_expedition', 'briarroot')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('night_court', 'sophistry')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('diddly-squat', 'Lescol')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shish_kebab', 'vein_of_penis')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('yellow-blue_color_blindness', 'genus_Palaquium')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('telephone_circuit', 'Spanish_Civil_War')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('CIM', 'logical_thinking')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('James_Harold_Doolittle', 'golfcart')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stacte', 'complementary_medicine')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dummy_whist', 'toothed_sword_fern')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ophisaurus', 'Dalmatia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('social_activity', 'Nitrobacteriaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('skewer', 'giant_silkworm')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('parallel_circuit', 'pip-squeak')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Modest_Petrovich_Moussorgsky', 'Republic_of_Mozambique')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('input_program', 'co-occurrence')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('capital_of_Idaho', 'Canal_Zone')
 (DEBUG) sap(), a == 51894
 (DEBUG) sap('pressure_cooker', 'Engraulis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('protoplasm', 'boiling')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mara', 'Chrysaora')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('kumquat_tree', 'genus_Coluber')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('suppressive_fire', 'family_Blechnaceae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ellipsis', 'homomorphy')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('non-flowering_plant', 'National_Technical_Information_Service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('thumbhole', 'pretending')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('illusionist', 'equalization')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Food_and_Drug_Administration', 'Carry_Nation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('farm_building', 'Undset')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Christopher_Carson', 'Stengel')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('cheddar_pink', 'pneumatic_tire')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('fish_and_chips', 'merrymaking')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('floating_voter', 'attractiveness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Aspalathus', 'Alfred_Edward_Housman')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('end_run', 'prettiness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('radio-phonograph', 'stringed_instrument')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('control_operation', 'subsistence_farming')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eugene_V._Debs', 'Capitonidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fluxing_lime', 'L-dopa')
 (DEBUG) sap(), a == 31058
 (DEBUG) sap('chaddar', 'scrub_pine')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Diplotaxis_erucoides', 'beriberi')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('automobile_engine', 'aerosol')
 (DEBUG) sap(), a == 48423
 (DEBUG) sap('tepary_bean', 'Nostocaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('mestizo', 'mortar_fire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('play_list', 'tetany')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('chopstick', 'sex_offender')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('dam', 'horse_trader')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Pilgrim_Father', 'ungratefulness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('besieger', 'subclass_Cnidosporidia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sham', 'gerrymander')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Bushman', 'bechamel_sauce')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('al_Qaeda', 'Burnside')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('concomitant', 'Richard_Smalley')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Parochetus', 'nonsolid_color')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('hubbard_squash', 'jam_session')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gide', 'motherland')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('farrowing', 'taoiseach')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('hacienda', 'Israel_Zangwill')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gastroomental_vein', 'polydactyly')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('complex_instruction_set_computing', 'disturbance')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('genus_Drepanis', 'pain_threshold')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('flour_bin', 'eleostearic_acid')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Bedlington_terrier', 'Hebraism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('memento', 'pit_stop')
 (DEBUG) sap(), a == 63581
 (DEBUG) sap('calorimeter', 'petty_whin')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('brown_soft_scale', 'ghrelin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('autolatry', 'genus_Lysiloma')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Dracunculus_medinensis', 'poetic_jstice')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Piroplasma', 'sol')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('torridity', 'ragpicker's_disease')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('dry-stone_wall', 'karyolymph')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('role_player', 'Godard')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Stradivari', 'sideshow')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('HTML', 'line_of_poetry')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('French_Congo', 'Harley_Granville-Barker')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sardis', 'bell_push')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('sprites', 'wire')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('withdrawnness', 'Anigozanthus_manglesii')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('hypoadrenalism', 'touchiness')
 (DEBUG) sap(), a == 72959
 (DEBUG) sap('peritoneal_inflammation', 'Thomas_More')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('John_James_Rickard_Macleod', 'photographic_film')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('somersault', 'seafront')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vintner', 'Sind')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Sue', 'golden-beard_penstemon')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('laundress', 'architectural_plan')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('electrolyte', 'E._L._Doctorow')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('apple_canker', 'longsightedness')
 (DEBUG) sap(), a == 47475
 (DEBUG) sap('encolure', 'shipyard')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Campyloneurum_augustifolium', 'goliath')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Swedish_rye', 'magnanimity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('scalar_product', 'Quaoar')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Copernicia_australis', 'mercury_poisoning')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gaultheria_procumbens', 'high_style')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('fa_la', 'hide_and_go_seek')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Aegadean_Isles', 'Afrikaans')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Cypripedium', 'ship's_bell')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('rose-apple_tree', 'pet_peeve')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Academy_of_Motion_Picture_Arts_and_Sciences', 'moss_pink')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('aerodontalgia', 'dislike')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('RNA_polymerase', 'Cyanocitta')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pantechnicon', 'Sciurus_niger')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stellate_venule', 'dispensation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('religious_mysticism', 'benignity')
 (DEBUG) sap(), a == 43724
 (DEBUG) sap('Plasmodiophoraceae', 'Cervus_nipon')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('commercial_bank', 'Bodo-Garo')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('allice_shad', 'Charles_Augustus_Lindbergh')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('genus_Lycaeon', 'rattler')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('papermaking', 'lacrimation')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Sikkim', 'dame')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('white_dog's-tooth_violet', 'trip-up')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gelding', 'gum_eurphorbium')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('fence', 'gang')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('details', 'rusty_woodsia')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Chauna', 'Echium_vulgare')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('digitization', 'Parascalops')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Calapooya', 'measuring_instrument')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lace_fern', 'Sergei_Vasilievich_Rachmaninov')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Opisthocomus_hoazin', 'coiffure')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gonad', 'vagina')
 (DEBUG) sap(), a == 25115
 (DEBUG) sap('Ben_Hogan', 'Samoyede')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('guard_boat', 'Ruta_graveolens')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hatpin', 'common_ivy')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('stimulant', 'order_Gregarinida')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('individuality', 'common_box')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('ylang-ylang', 'coprophagy')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gigot', 'decalcification')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('subclass_Malacostraca', 'double_agent')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('glute', 'gable')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('crybaby_tree', 'drive-by_killing')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Farouk_I', 'ratan')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('temporal_lobe', 'girandole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Spanish_gorse', 'Secret_Intelligence_Service')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Australian_cockroach', 'burnup')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Eucalypt_tereticornis', 'class_Actinozoa')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Carduus_crispus', 'quartet')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('biceps_brachii', 'Hyacinthoides_nonscripta')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('index', 'chestnut_tree')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Marsilea', 'vicissitude')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Pippin', 'Taraxacum')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Distinguished_Service_Medal', 'investment_trust')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Bahasa_Malaysia', 'now')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('microflora', 'heat_sink')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('hydrogel', 'United_Methodist_Church')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('sapidity', 'hyperchromic_anaemia')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('Bryonia_alba', 'ducks_and_drakes')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tuareg', 'formalin')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('genus_Orthotomus', 'potassium_alum')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Polska', 'Petroselinum_crispum')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('efferent_nerve', 'oil_pump')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Fomorian', 'horsetail_milkweed')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('catalog', 'sweet_acacia')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('overlay', 'Organization_of_Petroleum-Exporting_Countries')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Fort_Meade', 'Aulacorhyncus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('streptococci', 'SA_node')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('roadbook', 'vicuna')
 (DEBUG) sap(), a == 21745
 (DEBUG) sap('holocaust', 'Baader-Meinhof_Gang')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Gypsy_Rose_Lee', 'genus_Astreus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Burgoyne', 'vigil_candle')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('keratoiritis', 'reference_grid')
 (DEBUG) sap(), a == 30267
 (DEBUG) sap('Andrew_W._Mellon', 'art_school')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Bermuda_shorts', 'otosclerosis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Plesiosaurus', 'cytolysis')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('labor_force', 'screw_bean')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Tupinambis', 'proconsulship')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Ceratopteris', 'Quercus_grosseserrata')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('maxillary_vein', 'muzzle_velocity')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Marcus_Terentius_Varro', 'sib')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('instruction', 'net_ball')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('courtesan', 'assiduousness')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ustilaginoidea', 'chrome_green')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('L.A.', 'Cyrilliaceae')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Tamiasciurus', 'cancer_cell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('structural_linguistics', 'sand_rat')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sordino', 'family_Haloragaceae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Salicornia_europaea', 'genus_Cyprinus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('pseud', 'weeping')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Walther_Hermann_Nernst', 'eleventh_cranial_nerve')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Begonia_cheimantha', 'rail_line')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('white_birch', 'Qara_Qum')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Pleiospilos', 'type_I_allergic_reaction')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Trillium', 'kitchen_island')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('vertical_union', 'fire_brigade')
 (DEBUG) sap(), a == 58168
 (DEBUG) sap('genus_Dicrostonyx', 'bighead')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('downrightness', 'disadvantage')
 (DEBUG) sap(), a == 64142
 (DEBUG) sap('tortuousness', 'Marianas')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Nasalis', 'genus_Mutinus')
 (DEBUG) sap(), a == 42539
 (DEBUG) sap('disinclination', 'Corallorhiza')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('misology', 'Aram')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Schweiz', 'afterburner')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('Qadhafi', 'saury')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('enforcer', 'order_Liliales')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tylenol', 'war_cry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sapsucker', 'sirenian_mammal')
 (DEBUG) sap(), a == 79432
 (DEBUG) sap('Salviniaceae', 'full_stop')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('dextrorotation', 'genus_Berberis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('triazolam', 'scheduled_fire')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('xylene', 'genus_Thyrsopteris')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('association_football', 'Ambrosia_psilostachya')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('itraconazole', 'hot_spell')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('jongleur', 'dry_cereal')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('dog-ear', 'sterling_silver')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('inverter', 'mineworker')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('monochromacy', 'stockjobber')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tubful', 'print_buffer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Pyrrhuloxia_sinuata', 'Binet-Simon_Scale')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('dwarf', 'bread-bin')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('happy_event', 'family_Anatidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('celoma', 'Echinocereus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sea_chantey', 'monstera')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cenobite', 'hommos')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('scollop', 'spinet')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('basophile', 'Palestrina')
 (DEBUG) sap(), a == 51807
 (DEBUG) sap('family_Cephalotaxaceae', 'Haplosporidia')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('bloodwort_family', 'greenness')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('leppy', 'Nellie_Bly')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('SB', 'cerebrospinal_meningitis')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('metabolite', 'hydrophytic_plant')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Astaire', 'precision')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('actiniarian', 'Ativan')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('pituitary_gland', 'building_supply_house')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('enanthema', 'hired_man')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sextant', 'Theodor_Schwann')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Phalaris', 'Crambe_maritima')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Chaenomeles', 'turkey_drumstick')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('genus_Hypsiglena', 'gambit')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Silverstein', 'western_meadowlark')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Bromus_japonicus', 'Quercus_sessiliflora')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('callosectomy', 'Shetland_Islands')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('warmer', 'Locustidae')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('deverbal_noun', 'air_embolism')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('woodcarving', 'Passover_supper')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('family_Spirochaetaceae', 'motley')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('crossbones', 'Pierre_Auguste_Renoir')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('raffia_palm', 'formal_logic')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spoonful', 'hors_d'oeuvre')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('tradescant's_aster', 'bubble-jet_printer')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Macrotis_lagotis', 'whipping')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('horizontality', 'tritoma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Myxine', 'teachers_college')
 (DEBUG) sap(), a == 44437
 (DEBUG) sap('Mentha_suaveolens', 'Andira_inermis')
 (DEBUG) sap(), a == 79211
 (DEBUG) sap('natural_number', 'particle_physics')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('animal_leg', 'control_stick')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('water_nymph', 'Merman')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('superbia', 'lengthening')
 (DEBUG) sap(), a == 19228
 (DEBUG) sap('ear_trumpet', 'Ascension_Day')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('longcase_clock', 'arcsine')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('cat_squirrel', 'Platonic_solid')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('forest_god', 'Chancellor_of_the_Exchequer')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('HP', 'nitrite_bacterium')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Gulliver', 'denier')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('polo_mallet', 'sprawl')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('viricide', 'prix_fixe')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('burbot', 'goldfish_bowl')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('mischance', 'seed_coat')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('reciprocating_engine', 'resonant_circuit')
 (DEBUG) sap(), a == 34924
 (DEBUG) sap('sagitta', 'bass_horn')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('descriptive_clause', 'paramountcy')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('muss', 'Karl_Linne')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('granule', 'St._Basil')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('Fourier_series', 'muskrat')
 (DEBUG) sap(), a == 65691
 (DEBUG) sap('amyotrophic_lateral_sclerosis', 'gross_margin')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Acropora', 'AMP')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('personnel', 'back_circle')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Henry_Purcell', 'hydrated_aluminum_oxide')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('potholer', 'meningioma')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Cavia', 'clatter')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('buck-and-wing', 'Anoplura')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('exemption', 'dwarf_elm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('spotlight', 'Charlotte_Anna_Perkins_Gilman')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Frau', 'Paralichthys_lethostigmus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Tachypleus', 'Pakistan')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stressor', 'epigastric_fossa')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('oviduct', 'Frederick_William_IV')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('backbend', 'devolution')
 (DEBUG) sap(), a == 19171
 (DEBUG) sap('family_Asparagaceae', 'text_file')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('Antoine_Domino', 'musquash')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('chlamydospore', 'stomper')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('lemming', 'wastrel')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('languor', 'Antarctic_continent')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('purulent_pleurisy', 'Harry_Bridges')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gigantism', 'splitworm')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('anise_seed', 'luxuriance')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('stillborn_infant', 'tum')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('opprobrium', 'birretta')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('employee_stock_ownership_plan', 'alkali_bee')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('family', 'Echinochloa')
 (DEBUG) sap(), a == 75510
 (DEBUG) sap('Isurus_paucus', 'Zionism')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('shinleaf', 'dickey-bird')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Hygrophorus_inocybiformis', 'Cuniculus_paca')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('Jim_Thorpe', 'follower')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Arenaria_stricta', 'shipload')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('genus_Aspidophoroides', 'Panthera_pardus')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('wangle', 'gluteus_medius')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('varan', 'ballet_skirt')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('gentian', 'prate')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('game_theory', 'decasyllable')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('secretiveness', 'Hamburg_parsley')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('gloss', 'nephroangiosclerosis')
 (DEBUG) sap(), a == 22164
 (DEBUG) sap('push-down_list', 'thecodont')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Canadian_Security_Intelligence_Service', 'four-part_harmony')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('George_I', 'bolt-hole')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('mutt', 'criminology')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Ostrogoth', 'dressage')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('myeline', 'party_line')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('exorcist', 'general_officer')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('armoured_personnel_carrier', 'genus_Aspidophoroides')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Kleenex', 'Percomorphi')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('pork_belly', 'telpher')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('arrowsmith', 'Prussian')
 (DEBUG) sap(), a == 60216
 (DEBUG) sap('Yosemite_National_Park', 'Quercus_texana')
 (DEBUG) sap(), a == 57333
 (DEBUG) sap('leading_edge', 'immortality')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('packing_needle', 'genus_Strobilomyces')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('sound_camera', 'pinball')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('orchis', 'branchial_cleft')
 (DEBUG) sap(), a == 25115
 (DEBUG) sap('tahoka_daisy', 'Viscount_Northcliffe')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('insignificance', 'time_series')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('ganja', 'lost_cause')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('drug_baron', 'upside')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('New_World_least_weasel', 'Hydnocarpus_laurifolia')
 (DEBUG) sap(), a == 58166
 (DEBUG) sap('newel_post', 'man-child')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('truncus_celiacus', 'chap')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('gregariousness', 'family_Muraenidae')
 (DEBUG) sap(), a == 18840
 (DEBUG) sap('saltine', 'equinoctial_storm')
 (DEBUG) sap(), a == 60600
 (DEBUG) sap('decile', 'Australian_honeysuckle')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('moccasin', 'Lonicera_hirsuta')
 (DEBUG) sap(), a == 81004
 (DEBUG) sap('Lycopsida', 'cowberry')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('Tulostoma', 'Reiter')
 (DEBUG) sap(), a == 38003
 (DEBUG) sap('terra_cotta', 'Sheffield')
 (DEBUG) sap(), a 
Total: 0/8 tests passed:<font color="#990000"><b> Could not complete tests in allotted time, which results in a reported score of 0.</b></font>
==================================================================



******************************************************************************
*          timing (with reference SAP.java and WordNet.java)
******************************************************************************

Timing Outcast
*-----------------------------------------------------------
Running 1 total tests.

1.01 seconds to build WordNet

Computing time to find outcasts of various outcast files.
Total time must not exceed 1 seconds.

    filename       N     time
-----------------------------
   outcast4.txt    4     0.00
   outcast5.txt    5     0.00
  outcast5a.txt    5     0.00
   outcast5.txt    5     0.00
   outcast7.txt    7     0.00
   outcast8.txt    8     0.00
  outcast8a.txt    8     0.00
  outcast8b.txt    8     0.00
  outcast8c.txt    8     0.00
   outcast9.txt    9     0.00
  outcast9a.txt    9     0.00
  outcast10.txt   10     0.00
 outcast10a.txt   10     0.00
  outcast11.txt   11     0.00
  outcast12.txt   12     0.00
 outcast12a.txt   12     0.00
  outcast20.txt   20     0.01
  outcast29.txt   29     0.01
=&gt; passed, total elapsed time: 0.05

Total: 1/1 tests passed!

================================================================



</pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 08:05:49</td></tr>
        <tr><td>Raw Score</td><td>0.00 / 100.00</td></tr>
                <tr><td>Feedback</td><td><pre>Compilation:  <font color="#009900">PASSED</font>

API:          <font color="#990000">FAILED</font>
<pre>Outcast:<p>

The following fields should be made private:
  *  WordNet _wordNet


</p></pre></pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 08:01:53</td></tr>
        <tr><td>Raw Score</td><td>0.00 / 100.00</td></tr>
                <tr><td>Feedback</td><td><pre>Compilation:  <font color="#009900">PASSED</font>

API:          <font color="#990000">FAILED</font>
<pre>SAP:<p>

The following fields should be made private:
  *  edu.princeton.cs.algs4.Digraph _g


WordNet:</p><p>

The following fields should be made private:
  *  edu.princeton.cs.algs4.Digraph _digraph
  *  java.util.HashMap&lt;Integer,WordNet$Synset&gt; _synsetIndexes
  *  java.util.HashMap&lt;String,java.util.ArrayList&lt;WordNet$Synset&gt;&gt; _words

The following nested classes should be made private:
  *  Synset


Outcast:</p><p>

The following fields should be made private:
  *  WordNet _wordNet


</p></pre></pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 07:57:11</td></tr>
        <tr><td>Raw Score</td><td>0.00 / 100.00</td></tr>
                <tr><td>Feedback</td><td><pre>Compilation:  <font color="#990000">FAILED</font>

Outcast.java failed to compile, javac reports: <p>
</p><pre>Outcast.java:33: error: cannot find symbol
			In in = new In(args[t]);
			^
  symbol:   class In
  location: class Outcast
Outcast.java:33: error: cannot find symbol
			In in = new In(args[t]);
			            ^
  symbol:   class In
  location: class Outcast
Outcast.java:35: error: cannot find symbol
			StdOut.println(args[t] + ": " + outcast.outcast(nouns));
			^
  symbol:   variable StdOut
  location: class Outcast
3 errors</pre></pre> </td></tr>
    </tbody>
</table>


<table class="table table-condensed table-bordered table-striped">
    <thead>
        <tr>
            <th colspan="3">Submission</th>
        </tr>
    </thead>
    <tbody>
        <tr><td>Submission time</td><td>Sat-30-Apr 07:52:02</td></tr>
        <tr><td>Raw Score</td><td>0.00 / 100.00</td></tr>
                <tr><td>Feedback</td><td><pre>Compilation:  <font color="#990000">FAILED</font>

SAP.java failed to compile, javac reports: <p>
</p><pre>SAP.java:147: error: cannot find symbol
		StdOut.printf(G.toString());
		^
  symbol:   variable StdOut
  location: class SAP
SAP.java:154: error: cannot find symbol
			StdOut.printf("length = %d, ancestor = %d\n", length, ancestor);
			^
  symbol:   variable StdOut
  location: class SAP
2 errors</pre>
WordNet.java failed to compile, javac reports: <p>
</p><pre>./SAP.java:147: error: cannot find symbol
		StdOut.printf(G.toString());
		^
  symbol:   variable StdOut
  location: class SAP
./SAP.java:154: error: cannot find symbol
			StdOut.printf("length = %d, ancestor = %d\n", length, ancestor);
			^
  symbol:   variable StdOut
  location: class SAP
2 errors</pre>
Outcast.java failed to compile, javac reports: <p>
</p><pre>Outcast.java:33: error: cannot find symbol
			In in = new In(args[t]);
			^
  symbol:   class In
  location: class Outcast
Outcast.java:33: error: cannot find symbol
			In in = new In(args[t]);
			            ^
  symbol:   class In
  location: class Outcast
Outcast.java:35: error: cannot find symbol
			StdOut.println(args[t] + ": " + outcast.outcast(nouns));
			^
  symbol:   variable StdOut
  location: class Outcast
3 errors</pre></pre> </td></tr>
    </tbody>
</table>

</div></div></div></div></div><div class="coursera-footer"></div></div></div></div><!--[if gte IE 9]><script>document.getElementById("coursera-loading-js").style.display = 'block';</script><![endif]-->
<!--[if lte IE 8]><script>document.getElementById("coursera-loading-nojs").style.display = 'block';</script><![endif]-->
<!--[if !IE]> --><script>document.getElementById("coursera-loading-js").style.display = 'block';</script><!-- <![endif]--><script>if (/zh/i.test(window.localStorage ? localStorage.getItem('locale') : '') || '{{ locale }}') {
  document.getElementById('get-browser-zh').style.display = 'block';
}</script><!--[if !IE]> --><script>document.getElementById('coursera-loading-js').style.display = 'block';</script><!-- <![endif]-->
<script src="week1_submission_results_files/require.js"></script><script data-baseurl="https://dw0ugk4msqulk.cloudfront.net/c125b14c9a359e3a92f0e2077eacc19f5d689515/" data-version="c125b14c9a359e3a92f0e2077eacc19f5d689515" data-timestamp="1458090164904" data-debug="0" data-locale="en" id="_require">if(document.getElementById('coursera-loading-js').style.display == 'block') {
  (function(el) {
     require.config({
       //enforceDefine: true,
       waitSeconds: 75,
       baseUrl: el.getAttribute('data-baseurl'),
       urlArgs: el.getAttribute('data-debug') == '1' ? 'v=' + el.getAttribute('data-timestamp') : '',
       shim: {
          'underscore': {
             exports: '_'
          },
          'backbone': {
             deps: ['underscore', 'jquery'],
             exports: 'Backbone',
             init: function(_, $) {
               Backbone.$ = $;
               return Backbone;
             }
          },
          'pages/hg/thirdparty/js/backbone.marionette': {
            deps: ['backbone']
          },
          'pages/hg/thirdparty/js/webshims/polyfiller': {
            deps: ['jquery']
          },
          'pages/hg/thirdparty/js/webshims/extras/mousepress': {
            deps: ['jquery', 'pages/hg/thirdparty/js/webshims/polyfiller']
          },
          'pages/hg/thirdparty/js/jquery.throttle': {
            deps: ['jquery']
          },
          'js/lib/jquery.linkify': {
            deps: ['jquery']
          },
          'pages/hg/thirdparty/js/js/bootstrap/alert': {
            deps: ['jquery', 'pages/hg/thirdparty/js/bootstrap/transition']
          },
          'spark/core/js/jquery_ui': {
            deps: ['jquery']
          },
          'spark/core/js/jquery.history': {
            deps: ['jquery']
          },
          'js/lib/bootstrap.tooltip': {
            deps: ['jquery']
          },
          'pages/hg/thirdparty/js/bootstrap/transition': {
            deps: ['jquery']
          },
          'pages/hg/thirdparty/js/bootstrap/tab': {
            deps: ['jquery']
          },
          'bundles/videojs/lib/video.4.3.0': {
            exports: 'vjs'
          }
       },
       paths: {
          'q': 'js/vendor/q.v1-0-1',
          'react-with-addons': 'js/vendor/react-with-addons.v0-12',
          'jquery':                         'pages/spark/jquery',
          'underscore':                     'js/vendor/underscore.v1-5-2',
          'backbone':                       'js/vendor/backbone.v1-1-0',
          'backbone.relational':            'js/lib/backbone.relational.0.8.6',
          'i18n':                           'js/lib/i18n._t',
          'css':                            'js/vendor/require.css.v0-1-2',
          'memoize':                        'js/lib/require.memoize.v0-0-1',
          'pages/spark/models/user.json':   'empty:',
          'pages/spark/models/course.json': 'empty:',
          'pages/spark/models/navbar.json': 'empty:'
       },
       callback: function() {
                    require(['pages/spark/routes']);
                },
       config: {
         i18n: {
           locale: (window.localStorage ? localStorage.getItem('locale') : '') || el.getAttribute('data-locale')
         }
       }
     });
  })(document.getElementById('_require'));
}
</script><script>define('pages/spark/models/user.json', [], function(){
      return JSON.parse("{\"id\":9266579,\"email_address\":\"artyomkarpov@gmail.com\",\"full_name\":\"Karpov Artem\",\"locale\":null,\"timezone\":\"America\\\/Los_Angeles\",\"access_group_id\":\"4\",\"registration_time\":\"1452609306\",\"last_access_time\":\"1461751265\",\"last_access_ip\":\"192.40.88.74\",\"signature_track_register_time\":\"0\",\"email_announcement\":\"1\",\"email_forum\":\"1\",\"in_signature_track\":\"0\",\"wishes_proctored_exam\":\"0\",\"first_name\":\"Karpov\",\"permissions\":[\"default\",\"allow_site_access\"],\"group\":\"Student\",\"anonymous\":false,\"forum_title\":\"Student\",\"signature_track_state\":1,\"verified_quizzes\":[],\"submitted_quizzes\":[\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"59\",\"60\",\"64\"],\"scheduled_proctored_exam\":null,\"last_chance_modal\":null,\"flexjoin_last_chance_modal\":null}");
  });
define('pages/spark/models/course.json', [], function(){
      return JSON.parse("{\"id\":976748,\"isPrivate\":false,\"type\":\"public\",\"name\":\"Algorithms, Part II\",\"instructor\":\"Kevin Wayne, Robert Sedgewick\",\"sessionName\":\"algs4partII-007\",\"externalBaseURL\":\"https:\\\/\\\/www.coursera.org\\\/\",\"shortname\":\"algs4partII\",\"host\":\"https:\\\/\\\/www.coursera.org\\\/\",\"assetUnversionedLink\":\"https:\\\/\\\/dw0ugk4msqulk.cloudfront.net\\\/\",\"cheggID\":\"\",\"hasLTI\":true,\"badgevilleDomain\":\"\",\"linkable\":false,\"universityShortname\":\"princeton\",\"signatureTrackStatus\":{\"signature_track_enabled\":0},\"courseURLs\":{\"log_in_link\":\"https:\\\/\\\/www.coursera.org\\\/login?post_redirect=https%3A%2F%2Fwww.coursera.org%2Flogin%3Fuser_action%3Dclass%26course_id%3D976748%26post_redirect%3Dhttps%253A%252F%252Fclass.coursera.org%252Falgs4partII-007%252Fauth%252Fauth_redirector%253Ftype%253Dlogin%2526subtype%253Dnormal%2526visiting%253D\",\"sign_up_link\":\"https:\\\/\\\/www.coursera.org\\\/signup?enroll_cid=976748&enroll_sn=algs4partII&enroll_n=Algorithms, Part II\",\"view_course_info_link\":\"https:\\\/\\\/www.coursera.org\\\/course\\\/algs4partII\",\"sign_up_link_cant_enroll\":\"https:\\\/\\\/www.coursera.org\\\/signup?post_redirect=https%3A%2F%2Fwww.coursera.org%2Fcourse%2Falgs4partII\"},\"courseBase\":\"https:\\\/\\\/class.coursera.org\\\/algs4partII-007\\\/\",\"search\":true,\"hideWiki\":true,\"aceStartRegistrationDate\":\"Wed 31 Dec 1969  4:00 PM PST\",\"aceEndRegistrationDate\":\"Wed 31 Dec 1969  4:00 PM PST\",\"aceExamStartDate\":\"Wed 31 Dec 1969  4:00 PM PST\",\"aceExamEndDate\":\"Wed 31 Dec 1969  4:00 PM PST\",\"aceExamRules\":\"\",\"aceExamDuration\":\"\",\"aceBeforeExam\":false,\"aceAfterExam\":true,\"aceHours\":null,\"aceCreditType\":\"\",\"acePrice\":null,\"aceExamID\":null,\"aceEligible\":false,\"canRegisterForACE\":false,\"specialization\":null,\"supportForums\":true,\"textbooks\":\"\",\"inVideoQuizV2\":false,\"in_flexjoin\":0,\"honorCodeExtraText\":\"I will not post solutions or partial solutions to the programming assignments publicly (e.g., in the discussion forums or in public code repositories such as GitHub).\",\"honorCodeCustomTitle\":\"\",\"honorCodeCustomButton\":\"\",\"studentAccessDisabled\":0,\"disableQQs\":false}");
  });
  define('pages/spark/models/navbar.json', [], function(){
      return JSON.parse("{\"items\":[{\"name\":\"Home\",\"icon\":\"home\",\"link_type\":\"circuit\",\"link_data\":\"class:index\"},{\"name\":\"Syllabus\",\"icon\":\"wiki\",\"link_type\":\"circuit\",\"link_data\":\"wiki\\\/view?page=syllabus\"},{\"name\":\"Schedule\",\"icon\":\"wiki\",\"link_type\":\"circuit\",\"link_data\":\"wiki\\\/view?page=schedule\"},{\"name\":\"\",\"icon\":\"\",\"link_type\":\"circuit\",\"link_data\":\"\"},{\"name\":\"Lectures\",\"icon\":\"lecture\",\"link_type\":\"circuit\",\"link_data\":\"lecture:index\"},{\"name\":\"Exercises\",\"icon\":\"quiz\",\"link_type\":\"circuit\",\"link_data\":\"quiz:index\"},{\"name\":\"Programming Assignments\",\"icon\":\"assignment\",\"link_type\":\"circuit\",\"link_data\":\"assignment:index\"},{\"name\":\"Job Interview Questions\",\"icon\":\"quiz\",\"link_type\":\"circuit\",\"link_data\":\"quiz:index?quiz_type=homework\"},{\"name\":\"\",\"icon\":\"\",\"link_type\":\"circuit\",\"link_data\":\"\"},{\"name\":\"Discussion Forums\",\"icon\":\"forum\",\"link_type\":\"circuit\",\"link_data\":\"forum:index\"},{\"name\":\"Google+ Hangouts\",\"icon\":\"\",\"link_type\":\"wiki\",\"link_data\":\"ScheduleGoogleHangouts\"},{\"name\":\"Errata\",\"icon\":\"\",\"link_type\":\"circuit\",\"link_data\":\"wiki\\\/view?page=errata\"},{\"name\":\"Surveys\",\"icon\":\"\",\"link_type\":\"circuit\",\"link_data\":\"quiz:index?quiz_type=survey\"},{\"name\":\"\",\"icon\":\"\",\"link_type\":\"circuit\",\"link_data\":\"\"},{\"name\":\"Booksite\",\"icon\":\"wiki\",\"link_type\":\"window_link\",\"link_data\":\"http:\\\/\\\/algs4.cs.princeton.edu\"}]}");
  });
</script><script>var coursera_enable_new_help_center = true;
</script><div class="hide confirm-navigation modal"><div class="modal-header"><h3>Confirm Navigation</h3></div><div class="modal-body"><div class="confirm-navigation-message"></div><div>Are you sure you want to leave this page?</div></div><div class="modal-footer"><button data-modal-close="data-modal-close" class="btn confirm-navigation-stay">Stay on this Page</button><button data-modal-close="data-modal-close" class="btn btn-danger confirm-navigation-leave">Leave this Page</button></div></div><div style="display: none;" class="coursera-async-message"></div></body></html>